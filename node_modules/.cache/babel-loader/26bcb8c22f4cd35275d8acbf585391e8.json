{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/store/accountInfo/AccountInfoProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\nimport AccountInfoContext from \"./accountInfo--context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\":\n      {\n        let valid = true;\n        if (action.value === 0) valid = false;\n        return { ...state,\n          name: action.value,\n          valid\n        };\n      }\n\n    case \"backgroundColor\":\n      {\n        return { ...state,\n          backgroundColor: action.value\n        };\n      }\n\n    case \"email\":\n      {\n        let valid = true;\n        if (action.value === 0 || !action.value.include(\"@\")) valid = false;\n        return { ...state,\n          email: action.value,\n          valid\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction AccountInfoProvider(props) {\n  _s();\n\n  const [accountInfo, setAccountInfo] = useReducer(reducer, {\n    name: \"Ryotsu Kankichi\",\n    backgroundColor: \"rgb(244, 164, 96)\",\n    email: \"dscvwevew@gmail.com\",\n    valid: true\n  });\n  return /*#__PURE__*/_jsxDEV(AccountInfoContext.Provider, {\n    value: (accountInfo, setAccountInfo),\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountInfoProvider, \"tB1pui9E0EwR28uGD3S7T/6UDuI=\");\n\n_c = AccountInfoProvider;\nexport default AccountInfoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountInfoProvider\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/store/accountInfo/AccountInfoProvider.js"],"names":["useState","useReducer","AccountInfoContext","reducer","state","action","type","valid","value","name","backgroundColor","include","email","AccountInfoProvider","props","accountInfo","setAccountInfo","children"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACX,YAAIC,KAAK,GAAG,IAAZ;AACA,YAAIF,MAAM,CAACG,KAAP,KAAiB,CAArB,EAAwBD,KAAK,GAAG,KAAR;AAExB,eAAO,EAAE,GAAGH,KAAL;AAAYK,UAAAA,IAAI,EAAEJ,MAAM,CAACG,KAAzB;AAAgCD,UAAAA;AAAhC,SAAP;AACD;;AAED,SAAK,iBAAL;AAAwB;AACtB,eAAO,EAAE,GAAGH,KAAL;AAAYM,UAAAA,eAAe,EAAEL,MAAM,CAACG;AAApC,SAAP;AACD;;AAED,SAAK,OAAL;AAAc;AACZ,YAAID,KAAK,GAAG,IAAZ;AACA,YAAIF,MAAM,CAACG,KAAP,KAAiB,CAAjB,IAAsB,CAACH,MAAM,CAACG,KAAP,CAAaG,OAAb,CAAqB,GAArB,CAA3B,EAAsDJ,KAAK,GAAG,KAAR;AACtD,eAAO,EAAE,GAAGH,KAAL;AAAYQ,UAAAA,KAAK,EAAEP,MAAM,CAACG,KAA1B;AAAiCD,UAAAA;AAAjC,SAAP;AACD;;AAED;AACE,aAAOH,KAAP;AAnBJ;AAqBD;;AAED,SAASS,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,UAAU,CAACE,OAAD,EAAU;AACxDM,IAAAA,IAAI,EAAE,iBADkD;AAExDC,IAAAA,eAAe,EAAE,mBAFuC;AAGxDE,IAAAA,KAAK,EAAE,qBAHiD;AAIxDL,IAAAA,KAAK,EAAE;AAJiD,GAAV,CAAhD;AAOA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,GAAGQ,WAAW,EAAEC,cAAhB,CAAlC;AAAA,cACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbQJ,mB;;KAAAA,mB;AAeT,eAAeA,mBAAf","sourcesContent":["import { useState, useReducer } from \"react\";\nimport AccountInfoContext from \"./accountInfo--context\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\": {\n      let valid = true;\n      if (action.value === 0) valid = false;\n\n      return { ...state, name: action.value, valid };\n    }\n\n    case \"backgroundColor\": {\n      return { ...state, backgroundColor: action.value };\n    }\n\n    case \"email\": {\n      let valid = true;\n      if (action.value === 0 || !action.value.include(\"@\")) valid = false;\n      return { ...state, email: action.value, valid };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction AccountInfoProvider(props) {\n  const [accountInfo, setAccountInfo] = useReducer(reducer, {\n    name: \"Ryotsu Kankichi\",\n    backgroundColor: \"rgb(244, 164, 96)\",\n    email: \"dscvwevew@gmail.com\",\n    valid: true,\n  });\n\n  return (\n    <AccountInfoContext.Provider value={(accountInfo, setAccountInfo)}>\n      {props.children}\n    </AccountInfoContext.Provider>\n  );\n}\n\nexport default AccountInfoProvider;\n"]},"metadata":{},"sourceType":"module"}