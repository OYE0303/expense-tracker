{"ast":null,"code":"import createPreAccAmount from \"./createPreAccAmount\";\nimport compareTime from \"../compareTime\"; // function createChartDataArr(labels, expenseData) {\n//   const finalDataArr = [];\n//   labels.forEach((label) => {\n//     const curAccAmount =\n//       createPreAccAmount(\"income\", expenseData, label) -\n//       createPreAccAmount(\"expense\", expenseData, label);\n//     finalDataArr.push(curAccAmount);\n//   });\n//   return finalDataArr;\n// }\n\nfunction createChartDataArr1(labels, expenseData) {\n  const finalDataArr = [];\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n  let curLabelTime = Number(new Date(labels[0]));\n  const sortedData = expenseData.sort((a, b) => Number(new Date(a.time) - Number(new Date(b.time))));\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n    const data = sortedData[expenseDataIndex];\n\n    if (Number(new Date(data.time)) > curLabelTime) {\n      curLabelTime = Number(new Date(labels[++labelIndex]));\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\") curAccAmountExpense += Number(data.price);else curAccAmountIncome += Number(data.price);\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length) finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n  return finalDataArr;\n}\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n  let curLabelTime = new Date(labels[0]);\n  const sortedData = expenseData.sort((a, b) => Number(new Date(a.time) - Number(new Date(b.time))));\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n    const data = sortedData[expenseDataIndex];\n\n    if (!compareTime(data, curLabelTime)) {\n      curLabelTime = new Date(labels[++labelIndex]);\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\") curAccAmountExpense += Number(data.price);else curAccAmountIncome += Number(data.price);\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length) finalDataArr.push(curAccAmountIncome - curAccAmountExpense); // console.log(finalDataArr);\n\n  return finalDataArr;\n}\n\nconst ggg = [{\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"lunch\",\n  time: \"2021-09-23\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"23\",\n  description: \"\",\n  price: \"200\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"lunch\",\n  time: \"2021-09-24\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"24\",\n  description: \"\",\n  price: \"800\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"breakfast\",\n  time: \"2021-09-25\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"25\",\n  description: \"\",\n  price: \"200\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"salary\",\n  time: \"2021-09-25\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"25\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"salary\",\n  time: \"2021-09-26\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"26\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"dinner\",\n  time: \"2021-09-27\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"27\",\n  description: \"\",\n  price: \"1200\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"dinner\",\n  time: \"2021-09-28\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"28\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"dinner\",\n  time: \"2021-09-29\",\n  description: \"\",\n  price: \"100\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"dinner\",\n  time: \"2021-09-30\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"30\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"dinner\",\n  time: \"2021-09-30\",\n  year: \"2021\",\n  month: \"09\",\n  day: \"30\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"dinner\",\n  time: \"2021-10-01\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-10-01\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"01\",\n  description: \"\",\n  price: \"2000\"\n}, {\n  category: \"expense\",\n  mainCate: \"clothing\",\n  subCate: \"accessories\",\n  time: \"2021-10-02\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"02\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"income\",\n  mainCate: \"stock\",\n  subCate: \"stock\",\n  time: \"2021-10-02\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"02\",\n  description: \"\",\n  price: \"100\"\n}, {\n  category: \"expense\",\n  mainCate: \"education\",\n  subCate: \"course\",\n  time: \"2021-10-03\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"03\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"expense\",\n  mainCate: \"education\",\n  subCate: \"course\",\n  time: \"2021-10-04\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"04\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"snack\",\n  time: \"2021-10-05\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"05\",\n  description: \"\",\n  price: \"200\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"snack\",\n  time: \"2021-10-05\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"05\",\n  description: \"\",\n  price: \"200\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"snack\",\n  time: \"2021-10-11\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"11\",\n  description: \"\",\n  price: \"200\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"snack\",\n  time: \"2021-10-15\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"15\",\n  description: \"\",\n  price: \"200\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"snack\",\n  time: \"2021-10-20\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"20\",\n  description: \"\",\n  price: \"1200\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"snack\",\n  time: \"2021-10-25\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"25\",\n  description: \"\",\n  price: \"130\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-10-26\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"26\",\n  description: \"\",\n  price: \"530\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-10-27\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"27\",\n  description: \"\",\n  price: \"530\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-10-28\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"28\",\n  description: \"\",\n  price: \"530\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-10-29\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"29\",\n  description: \"\",\n  price: \"530\"\n}, {\n  category: \"expense\",\n  mainCate: \"transportation\",\n  subCate: \"maintenance\",\n  time: \"2021-10-31\",\n  year: \"2021\",\n  month: \"10\",\n  day: \"31\",\n  description: \"\",\n  price: \"5000\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-11-01\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"01\",\n  description: \"\",\n  price: \"530\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-11-03\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"03\",\n  description: \"\",\n  price: \"530\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2021-11-05\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"05\",\n  description: \"\",\n  price: \"530\"\n}, {\n  category: \"expense\",\n  mainCate: \"housing\",\n  subCate: \"electricity bill\",\n  time: \"2021-11-07\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"07\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"expense\",\n  mainCate: \"housing\",\n  subCate: \"electricity bill\",\n  time: \"2021-11-11\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"11\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"expense\",\n  mainCate: \"housing\",\n  subCate: \"electricity bill\",\n  time: \"2021-11-12\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"12\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"expense\",\n  mainCate: \"housing\",\n  subCate: \"electricity bill\",\n  time: \"2021-11-15\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"15\",\n  description: \"\",\n  price: \"1000\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"brunch\",\n  time: \"2021-11-17\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"17\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"brunch\",\n  time: \"2021-11-20\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"20\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"brunch\",\n  time: \"2021-11-21\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"21\",\n  description: \"\",\n  price: \"50\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"brunch\",\n  time: \"2021-11-25\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"25\",\n  description: \"\",\n  price: \"500\"\n}, {\n  category: \"income\",\n  mainCate: \"stock\",\n  subCate: \"stock\",\n  time: \"2021-11-28\",\n  year: \"2021\",\n  month: \"11\",\n  day: \"28\",\n  description: \"\",\n  price: \"600\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2022-01-01\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"01\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2022-01-01\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"01\",\n  description: \"\",\n  price: \"20000\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2022-01-02\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"02\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2022-01-03\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"03\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2022-01-05\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"05\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2022-01-10\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"10\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-11\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"11\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-13\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"13\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-15\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"15\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-18\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"18\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-20\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"20\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-21\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"21\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-23\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"23\",\n  description: \"\",\n  price: \"300\"\n}];\nexport default createChartDataArr;\nconsole.log(createChartDataArr([\"2022-01-07\", \"2022-01-08\", \"2022-01-09\", \"2022-01-10\", \"2022-01-11\", \"2022-01-12\", \"2022-01-13\"], ggg));\nconsole.log(createChartDataArr1([\"2022-01-07\", \"2022-01-08\", \"2022-01-09\", \"2022-01-10\", \"2022-01-11\", \"2022-01-12\", \"2022-01-13\"], ggg));\n/*\nfunction createChartDataArr1(labels, expenseData) {\n  const newExpenseData = createFilteredData(labels, expenseData);\n\n  const prevTotalAccAmount =\n    createPreAccAmount(\"income\", expenseData, labels[0]) -\n    createPreAccAmount(\"expense\", expenseData, labels[0]);\n\n  const newExpenseDataExpense = newExpenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n  const newExpenseDataIncome = newExpenseData.filter(\n    (element) => element.category === \"income\"\n  );\n\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n\n  const finalDataArr = [];\n\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense + prevTotalAccAmount);\n  });\n\n  return finalDataArr;\n}\n*/\n\n/*\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      yearDate = expensData[indexData]?.time.slice(0, 4);\n      monthData = expensData[indexData]?.time.slice(5, 7);\n      dayData = expensData[indexData]?.time.slice(8);\n\n      if (\n        yearLabel === yearDate &&\n        monthLabel === monthData &&\n        dayLabel >= dayData\n      ) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\n*/","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/Others/CreateAccountData/CreateChartDataArr.js"],"names":["createPreAccAmount","compareTime","createChartDataArr1","labels","expenseData","finalDataArr","curAccAmountExpense","curAccAmountIncome","expenseDataIndex","labelIndex","curLabelTime","Number","Date","sortedData","sort","a","b","time","length","data","push","category","price","createChartDataArr","ggg","mainCate","subCate","year","month","day","description","console","log"],"mappings":"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","sourcesContent":["import createPreAccAmount from \"./createPreAccAmount\";\nimport compareTime from \"../compareTime\";\n\n// function createChartDataArr(labels, expenseData) {\n//   const finalDataArr = [];\n\n//   labels.forEach((label) => {\n//     const curAccAmount =\n//       createPreAccAmount(\"income\", expenseData, label) -\n//       createPreAccAmount(\"expense\", expenseData, label);\n\n//     finalDataArr.push(curAccAmount);\n//   });\n\n//   return finalDataArr;\n// }\n\nfunction createChartDataArr1(labels, expenseData) {\n  const finalDataArr = [];\n\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n\n  let curLabelTime = Number(new Date(labels[0]));\n\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    if (Number(new Date(data.time)) > curLabelTime) {\n      curLabelTime = Number(new Date(labels[++labelIndex]));\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\")\n        curAccAmountExpense += Number(data.price);\n      else curAccAmountIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length)\n    finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n\n  return finalDataArr;\n}\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n\n  let curLabelTime = new Date(labels[0]);\n\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    if (!compareTime(data, curLabelTime)) {\n      curLabelTime = new Date(labels[++labelIndex]);\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\")\n        curAccAmountExpense += Number(data.price);\n      else curAccAmountIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length)\n    finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n\n  // console.log(finalDataArr);\n  return finalDataArr;\n}\nconst ggg = [\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"lunch\",\n    time: \"2021-09-23\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"23\",\n    description: \"\",\n    price: \"200\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"lunch\",\n    time: \"2021-09-24\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"24\",\n    description: \"\",\n    price: \"800\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"breakfast\",\n    time: \"2021-09-25\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"25\",\n    description: \"\",\n    price: \"200\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"salary\",\n    time: \"2021-09-25\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"25\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"salary\",\n    time: \"2021-09-26\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"26\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"dinner\",\n    time: \"2021-09-27\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"27\",\n    description: \"\",\n    price: \"1200\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"dinner\",\n    time: \"2021-09-28\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"28\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"dinner\",\n    time: \"2021-09-29\",\n    description: \"\",\n    price: \"100\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"dinner\",\n    time: \"2021-09-30\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"30\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"dinner\",\n    time: \"2021-09-30\",\n    year: \"2021\",\n    month: \"09\",\n    day: \"30\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"dinner\",\n    time: \"2021-10-01\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-10-01\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"01\",\n    description: \"\",\n    price: \"2000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"clothing\",\n    subCate: \"accessories\",\n    time: \"2021-10-02\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"02\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"stock\",\n    subCate: \"stock\",\n    time: \"2021-10-02\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"02\",\n    description: \"\",\n    price: \"100\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"education\",\n    subCate: \"course\",\n    time: \"2021-10-03\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"03\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"education\",\n    subCate: \"course\",\n    time: \"2021-10-04\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"04\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"snack\",\n    time: \"2021-10-05\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"05\",\n    description: \"\",\n    price: \"200\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"snack\",\n    time: \"2021-10-05\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"05\",\n    description: \"\",\n    price: \"200\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"snack\",\n    time: \"2021-10-11\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"11\",\n    description: \"\",\n    price: \"200\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"snack\",\n    time: \"2021-10-15\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"15\",\n    description: \"\",\n    price: \"200\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"snack\",\n    time: \"2021-10-20\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"20\",\n    description: \"\",\n    price: \"1200\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"snack\",\n    time: \"2021-10-25\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"25\",\n    description: \"\",\n    price: \"130\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-10-26\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"26\",\n    description: \"\",\n    price: \"530\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-10-27\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"27\",\n    description: \"\",\n    price: \"530\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-10-28\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"28\",\n    description: \"\",\n    price: \"530\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-10-29\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"29\",\n    description: \"\",\n    price: \"530\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"transportation\",\n    subCate: \"maintenance\",\n    time: \"2021-10-31\",\n    year: \"2021\",\n    month: \"10\",\n    day: \"31\",\n    description: \"\",\n    price: \"5000\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-11-01\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"01\",\n    description: \"\",\n    price: \"530\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-11-03\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"03\",\n    description: \"\",\n    price: \"530\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2021-11-05\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"05\",\n    description: \"\",\n    price: \"530\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"housing\",\n    subCate: \"electricity bill\",\n    time: \"2021-11-07\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"07\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"housing\",\n    subCate: \"electricity bill\",\n    time: \"2021-11-11\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"11\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"housing\",\n    subCate: \"electricity bill\",\n    time: \"2021-11-12\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"12\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"housing\",\n    subCate: \"electricity bill\",\n    time: \"2021-11-15\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"15\",\n    description: \"\",\n    price: \"1000\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"brunch\",\n    time: \"2021-11-17\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"17\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"brunch\",\n    time: \"2021-11-20\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"20\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"brunch\",\n    time: \"2021-11-21\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"21\",\n    description: \"\",\n    price: \"50\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"brunch\",\n    time: \"2021-11-25\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"25\",\n    description: \"\",\n    price: \"500\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"stock\",\n    subCate: \"stock\",\n    time: \"2021-11-28\",\n    year: \"2021\",\n    month: \"11\",\n    day: \"28\",\n    description: \"\",\n    price: \"600\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2022-01-01\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"01\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2022-01-01\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"01\",\n    description: \"\",\n    price: \"20000\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2022-01-02\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"02\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2022-01-03\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"03\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2022-01-05\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"05\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2022-01-10\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"10\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-11\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"11\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-13\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"13\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-15\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"15\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-18\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"18\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-20\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"20\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-21\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"21\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-23\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"23\",\n    description: \"\",\n    price: \"300\",\n  },\n];\n\nexport default createChartDataArr;\n\nconsole.log(\n  createChartDataArr(\n    [\n      \"2022-01-07\",\n      \"2022-01-08\",\n      \"2022-01-09\",\n      \"2022-01-10\",\n      \"2022-01-11\",\n      \"2022-01-12\",\n      \"2022-01-13\",\n    ],\n    ggg\n  )\n);\n\nconsole.log(\n  createChartDataArr1(\n    [\n      \"2022-01-07\",\n      \"2022-01-08\",\n      \"2022-01-09\",\n      \"2022-01-10\",\n      \"2022-01-11\",\n      \"2022-01-12\",\n      \"2022-01-13\",\n    ],\n    ggg\n  )\n);\n\n/*\nfunction createChartDataArr1(labels, expenseData) {\n  const newExpenseData = createFilteredData(labels, expenseData);\n\n  const prevTotalAccAmount =\n    createPreAccAmount(\"income\", expenseData, labels[0]) -\n    createPreAccAmount(\"expense\", expenseData, labels[0]);\n\n  const newExpenseDataExpense = newExpenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n  const newExpenseDataIncome = newExpenseData.filter(\n    (element) => element.category === \"income\"\n  );\n\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n\n  const finalDataArr = [];\n\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense + prevTotalAccAmount);\n  });\n\n  return finalDataArr;\n}\n*/\n\n/*\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      yearDate = expensData[indexData]?.time.slice(0, 4);\n      monthData = expensData[indexData]?.time.slice(5, 7);\n      dayData = expensData[indexData]?.time.slice(8);\n\n      if (\n        yearLabel === yearDate &&\n        monthLabel === monthData &&\n        dayLabel >= dayData\n      ) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\n*/\n"]},"metadata":{},"sourceType":"module"}