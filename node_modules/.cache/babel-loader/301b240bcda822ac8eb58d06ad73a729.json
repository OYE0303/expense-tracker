{"ast":null,"code":"import createWeeklyData from \"../createWeeklyData\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport timeObj from \"../../components/assets/timeObj/timeObj\";\n\nfunction createSmallChartPreData(type) {\n  const {\n    TODAY\n  } = timeObj;\n\n  if (type === \"week\") {\n    const labels = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SAT\"];\n    const weeklyDataArr = createWeeklyData(TODAY);\n    const startingDate = weeklyDataArr[0];\n    const endingDate = weeklyDataArr[weeklyDataArr.length - 1];\n    const startingDateString = createDateStringFormat(startingDate.dateObj);\n    const endingDateString = createDateStringFormat(endingDate.dateObj);\n    return [startingDate.dateObj, endingDate.dateObj, startingDateString, endingDateString, labels];\n  } else {\n    const startingDateObj = new Date(TODAY.getFullYear(), TODAY.getMonth(), 1);\n    const endingDateObj = new Date(TODAY.getFullYear(), TODAY.getMonth() + 1, 0);\n    const startingDateString = createDateStringFormat(startingDateObj);\n    const endingDateString = createDateStringFormat(endingDateObj);\n    return [startingDateObj, endingDateObj, startingDateString, endingDateString];\n  }\n}\n\nexport default createSmallChartPreData;","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/Others/CreateSmallChartData/createSmallChartPreData.js"],"names":["createWeeklyData","createDateStringFormat","timeObj","createSmallChartPreData","type","TODAY","labels","weeklyDataArr","startingDate","endingDate","length","startingDateString","dateObj","endingDateString","startingDateObj","Date","getFullYear","getMonth","endingDateObj"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,sBAAP,MAAmC,kDAAnC;AACA,OAAOC,OAAP,MAAoB,yCAApB;;AAEA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAYH,OAAlB;;AAEA,MAAIE,IAAI,KAAK,MAAb,EAAqB;AACnB,UAAME,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAf;AAEA,UAAMC,aAAa,GAAGP,gBAAgB,CAACK,KAAD,CAAtC;AACA,UAAMG,YAAY,GAAGD,aAAa,CAAC,CAAD,CAAlC;AACA,UAAME,UAAU,GAAGF,aAAa,CAACA,aAAa,CAACG,MAAd,GAAuB,CAAxB,CAAhC;AAEA,UAAMC,kBAAkB,GAAGV,sBAAsB,CAACO,YAAY,CAACI,OAAd,CAAjD;AACA,UAAMC,gBAAgB,GAAGZ,sBAAsB,CAACQ,UAAU,CAACG,OAAZ,CAA/C;AAEA,WAAO,CACLJ,YAAY,CAACI,OADR,EAELH,UAAU,CAACG,OAFN,EAGLD,kBAHK,EAILE,gBAJK,EAKLP,MALK,CAAP;AAOD,GAjBD,MAiBO;AACL,UAAMQ,eAAe,GAAG,IAAIC,IAAJ,CAASV,KAAK,CAACW,WAAN,EAAT,EAA8BX,KAAK,CAACY,QAAN,EAA9B,EAAgD,CAAhD,CAAxB;AACA,UAAMC,aAAa,GAAG,IAAIH,IAAJ,CACpBV,KAAK,CAACW,WAAN,EADoB,EAEpBX,KAAK,CAACY,QAAN,KAAmB,CAFC,EAGpB,CAHoB,CAAtB;AAMA,UAAMN,kBAAkB,GAAGV,sBAAsB,CAACa,eAAD,CAAjD;AACA,UAAMD,gBAAgB,GAAGZ,sBAAsB,CAACiB,aAAD,CAA/C;AAEA,WAAO,CACLJ,eADK,EAELI,aAFK,EAGLP,kBAHK,EAILE,gBAJK,CAAP;AAMD;AACF;;AAED,eAAeV,uBAAf","sourcesContent":["import createWeeklyData from \"../createWeeklyData\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport timeObj from \"../../components/assets/timeObj/timeObj\";\n\nfunction createSmallChartPreData(type) {\n  const { TODAY } = timeObj;\n\n  if (type === \"week\") {\n    const labels = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SAT\"];\n\n    const weeklyDataArr = createWeeklyData(TODAY);\n    const startingDate = weeklyDataArr[0];\n    const endingDate = weeklyDataArr[weeklyDataArr.length - 1];\n\n    const startingDateString = createDateStringFormat(startingDate.dateObj);\n    const endingDateString = createDateStringFormat(endingDate.dateObj);\n\n    return [\n      startingDate.dateObj,\n      endingDate.dateObj,\n      startingDateString,\n      endingDateString,\n      labels,\n    ];\n  } else {\n    const startingDateObj = new Date(TODAY.getFullYear(), TODAY.getMonth(), 1);\n    const endingDateObj = new Date(\n      TODAY.getFullYear(),\n      TODAY.getMonth() + 1,\n      0\n    );\n\n    const startingDateString = createDateStringFormat(startingDateObj);\n    const endingDateString = createDateStringFormat(endingDateObj);\n\n    return [\n      startingDateObj,\n      endingDateObj,\n      startingDateString,\n      endingDateString,\n    ];\n  }\n}\n\nexport default createSmallChartPreData;\n"]},"metadata":{},"sourceType":"module"}