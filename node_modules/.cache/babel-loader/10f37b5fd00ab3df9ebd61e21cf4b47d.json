{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/UI/SmallChart/SmallChart.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport Card from \"../Card/Card\";\nimport Select from \"../Select/Select\";\nimport style from \"./SmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmallChart(props) {\n  _s();\n\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const [chartState, setChartState] = useState(0);\n  const chartRef = useRef(null);\n  const configArr = [props.configBar, props.configPie];\n\n  function selectChangeHandler(e) {\n    setChartState(e.target.value);\n  } // Reference 1\n\n\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, configArr[chartState]);\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [chartState, expenseData, props.startingDateString, props.configBar, props.configPie]); // pie chart need more height\n\n  const classNameChart = chartState === \"1\" ? `${style[\"chart__container\"]} ${style[\"chart--pie\"]} ` : `${style[\"chart__container\"]} `;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: style[\"chart__section\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"title__section\"],\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"chart\",\n        className: style.label,\n        children: \"Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"chart\",\n        id: \"chart\",\n        onChange: selectChangeHandler,\n        className: style.select,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"bar chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"pie chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), expenseData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"add data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNameChart,\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        tabIndex: \"0\",\n        \"aria-label\": \"chart\",\n        ref: chartRef,\n        height: \"200\",\n        width: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SmallChart, \"utdkjRgSfdD02xIc9MnwPeyhHzA=\");\n\n_c = SmallChart;\nexport default SmallChart;\n/*\nReference 1\nwe want to re-create the chart when\n1. user choose different kind of chart (bar or pie)\n2. user add or remove the (new) data\n3. user click the next or last month arrow button in Calendar Section\n=> we use props.startingDateString as index\n=> because startingDateString change if month change\n=> aka, user click next or last month arrow button\n4. user edit the existing data\n=> the config object will change if the data is edited\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"SmallChart\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/UI/SmallChart/SmallChart.js"],"names":["useRef","useEffect","useState","useContext","ExpenseDataContext","Card","Select","style","Chart","SmallChart","props","expenseData","chartState","setChartState","chartRef","configArr","configBar","configPie","selectChangeHandler","e","target","value","chart","current","cleanUp","destroy","startingDateString","classNameChart","label","select","length"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useContext } from \"react\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport Card from \"../Card/Card\";\nimport Select from \"../Select/Select\";\nimport style from \"./SmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\n\nfunction SmallChart(props) {\n  const { expenseData } = useContext(ExpenseDataContext);\n  const [chartState, setChartState] = useState(0);\n  const chartRef = useRef(null);\n  const configArr = [props.configBar, props.configPie];\n\n  function selectChangeHandler(e) {\n    setChartState(e.target.value);\n  }\n\n  // Reference 1\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, configArr[chartState]);\n\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [\n    chartState,\n    expenseData,\n    props.startingDateString,\n    props.configBar,\n    props.configPie,\n  ]);\n\n  // pie chart need more height\n  const classNameChart =\n    chartState === \"1\"\n      ? `${style[\"chart__container\"]} ${style[\"chart--pie\"]} `\n      : `${style[\"chart__container\"]} `;\n\n  return (\n    <Card className={style[\"chart__section\"]}>\n      <div className={style[\"title__section\"]}>\n        <label htmlFor=\"chart\" className={style.label}>\n          Chart\n        </label>\n        <Select\n          name=\"chart\"\n          id=\"chart\"\n          onChange={selectChangeHandler}\n          className={style.select}\n        >\n          <option value=\"0\">bar chart</option>\n          <option value=\"1\">pie chart</option>\n        </Select>\n      </div>\n      {expenseData.length === 0 ? (\n        <p>add data</p>\n      ) : (\n        <div className={classNameChart}>\n          <canvas\n            tabIndex=\"0\"\n            aria-label=\"chart\"\n            ref={chartRef}\n            height=\"200\"\n            width=\"auto\"\n          ></canvas>\n        </div>\n      )}\n    </Card>\n  );\n}\n\nexport default SmallChart;\n/*\nReference 1\nwe want to re-create the chart when\n1. user choose different kind of chart (bar or pie)\n2. user add or remove the (new) data\n3. user click the next or last month arrow button in Calendar Section\n=> we use props.startingDateString as index\n=> because startingDateString change if month change\n=> aka, user click next or last month arrow button\n4. user edit the existing data\n=> the config object will change if the data is edited\n*/\n"]},"metadata":{},"sourceType":"module"}