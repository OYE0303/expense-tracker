{"ast":null,"code":"import createWeeklyData from \"../createWeeklyData\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport timeObj from \"../../components/assets/timeObj/timeObj\";\n\nfunction createAccountCardPreData(type) {\n  const {\n    TODAY\n  } = timeObj;\n\n  if (type === \"week\") {\n    const labels = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SAT\"];\n    const weeklyDataArr = createWeeklyData(TODAY);\n    const startingDateOfWeek = weeklyDataArr[0];\n    const endingDateOfWeek = weeklyDataArr[weeklyDataArr.length - 1];\n    const startingDateOfWeekStr = createDateStringFormat(startingDateOfWeek.dateObj);\n    const endingDateOfWeekStr = createDateStringFormat(endingDateOfWeek.dateObj);\n    return [startingDateOfWeek.dateObj, endingDateOfWeek.dateObj, startingDateOfWeekStr, endingDateOfWeekStr, labels];\n  } else {\n    const startingDateOfMonth = new Date(TODAY.getFullYear(), TODAY.getMonth(), 1);\n    const endingDateOfMonth = new Date(TODAY.getFullYear(), TODAY.getMonth() + 1, 0);\n    const startingDateOfMonthStr = createDateStringFormat(startingDateOfMonth);\n    const endingDateOfMonthStr = createDateStringFormat(endingDateOfMonth);\n    return [startingDateOfMonth, endingDateOfMonth, startingDateOfMonthStr, endingDateOfMonthStr];\n  }\n}\n\nexport default createAccountCardPreData;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateAccountCardData/createAccountCardPreData.js"],"names":["createWeeklyData","createDateStringFormat","timeObj","createAccountCardPreData","type","TODAY","labels","weeklyDataArr","startingDateOfWeek","endingDateOfWeek","length","startingDateOfWeekStr","dateObj","endingDateOfWeekStr","startingDateOfMonth","Date","getFullYear","getMonth","endingDateOfMonth","startingDateOfMonthStr","endingDateOfMonthStr"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,sBAAP,MAAmC,kDAAnC;AACA,OAAOC,OAAP,MAAoB,yCAApB;;AAEA,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAYH,OAAlB;;AAEA,MAAIE,IAAI,KAAK,MAAb,EAAqB;AACnB,UAAME,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAf;AAEA,UAAMC,aAAa,GAAGP,gBAAgB,CAACK,KAAD,CAAtC;AACA,UAAMG,kBAAkB,GAAGD,aAAa,CAAC,CAAD,CAAxC;AACA,UAAME,gBAAgB,GAAGF,aAAa,CAACA,aAAa,CAACG,MAAd,GAAuB,CAAxB,CAAtC;AAEA,UAAMC,qBAAqB,GAAGV,sBAAsB,CAClDO,kBAAkB,CAACI,OAD+B,CAApD;AAGA,UAAMC,mBAAmB,GAAGZ,sBAAsB,CAChDQ,gBAAgB,CAACG,OAD+B,CAAlD;AAIA,WAAO,CACLJ,kBAAkB,CAACI,OADd,EAELH,gBAAgB,CAACG,OAFZ,EAGLD,qBAHK,EAILE,mBAJK,EAKLP,MALK,CAAP;AAOD,GArBD,MAqBO;AACL,UAAMQ,mBAAmB,GAAG,IAAIC,IAAJ,CAC1BV,KAAK,CAACW,WAAN,EAD0B,EAE1BX,KAAK,CAACY,QAAN,EAF0B,EAG1B,CAH0B,CAA5B;AAKA,UAAMC,iBAAiB,GAAG,IAAIH,IAAJ,CACxBV,KAAK,CAACW,WAAN,EADwB,EAExBX,KAAK,CAACY,QAAN,KAAmB,CAFK,EAGxB,CAHwB,CAA1B;AAMA,UAAME,sBAAsB,GAAGlB,sBAAsB,CAACa,mBAAD,CAArD;AACA,UAAMM,oBAAoB,GAAGnB,sBAAsB,CAACiB,iBAAD,CAAnD;AAEA,WAAO,CACLJ,mBADK,EAELI,iBAFK,EAGLC,sBAHK,EAILC,oBAJK,CAAP;AAMD;AACF;;AAED,eAAejB,wBAAf","sourcesContent":["import createWeeklyData from \"../createWeeklyData\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport timeObj from \"../../components/assets/timeObj/timeObj\";\n\nfunction createAccountCardPreData(type) {\n  const { TODAY } = timeObj;\n\n  if (type === \"week\") {\n    const labels = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SAT\"];\n\n    const weeklyDataArr = createWeeklyData(TODAY);\n    const startingDateOfWeek = weeklyDataArr[0];\n    const endingDateOfWeek = weeklyDataArr[weeklyDataArr.length - 1];\n\n    const startingDateOfWeekStr = createDateStringFormat(\n      startingDateOfWeek.dateObj\n    );\n    const endingDateOfWeekStr = createDateStringFormat(\n      endingDateOfWeek.dateObj\n    );\n\n    return [\n      startingDateOfWeek.dateObj,\n      endingDateOfWeek.dateObj,\n      startingDateOfWeekStr,\n      endingDateOfWeekStr,\n      labels,\n    ];\n  } else {\n    const startingDateOfMonth = new Date(\n      TODAY.getFullYear(),\n      TODAY.getMonth(),\n      1\n    );\n    const endingDateOfMonth = new Date(\n      TODAY.getFullYear(),\n      TODAY.getMonth() + 1,\n      0\n    );\n\n    const startingDateOfMonthStr = createDateStringFormat(startingDateOfMonth);\n    const endingDateOfMonthStr = createDateStringFormat(endingDateOfMonth);\n\n    return [\n      startingDateOfMonth,\n      endingDateOfMonth,\n      startingDateOfMonthStr,\n      endingDateOfMonthStr,\n    ];\n  }\n}\n\nexport default createAccountCardPreData;\n"]},"metadata":{},"sourceType":"module"}