{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/DeleteModal/DeleteModal.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport Button from \"../Button\";\nimport style from \"./DeleteModal.module.css\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport SearchListDataContext from \"../../../store/searchListData/searchListData--context\";\n/*\nThere are three different places need DeleteModal component\n1. Home\n2. Calendar List Modal\n3. Search List\nSo we need different function to handle the data once user delete the data\n\nNote that DeleteModal only from \"DeleteModal\" because there's only way to show this modal\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteModal(props) {\n  _s();\n\n  const {\n    removeExpenseData\n  } = useContext(ExpenseDataContext);\n  const {\n    setFilteredData\n  } = useContext(SearchListDataContext);\n\n  function closeDeleteModal() {\n    props.setDeleteModal(false);\n  }\n\n  function removeExpenseItemHandler() {\n    props.setDeleteModal(false);\n    removeExpenseData(props.id);\n    if (setFilteredData) setFilteredData({\n      type: \"DELETE\",\n      id: props.id\n    }); /////////////////////////////////////////////////////////////\n\n    if (props.expenseListCalendar) {\n      const newDataForCalendarModal = props.expenseListCalendar.filter(element => element.id !== props.id);\n      props.setExpenseListCalendar(newDataForCalendarModal.length === 0 ? props.expenseListCalendar[0].time : newDataForCalendarModal);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: style.modal,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      className: style.title,\n      children: \"are you sure to delete?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: style.description,\n      children: [\"there is no way getting back this data \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 48\n      }, this), \" once you delete it\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"btn__container\"],\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: closeDeleteModal,\n        className: `${style.btn} ${style[\"btn--no\"]}`,\n        children: \"no\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: removeExpenseItemHandler,\n        className: `${style.btn} ${style[\"btn--yes\"]}`,\n        children: \"yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteModal, \"QNnGGnrrnNu4gimK/HgKARaaAsM=\");\n\n_c = DeleteModal;\nexport default DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/DeleteModal/DeleteModal.js"],"names":["useContext","Modal","Title","Button","style","ExpenseDataContext","SearchListDataContext","DeleteModal","props","removeExpenseData","setFilteredData","closeDeleteModal","setDeleteModal","removeExpenseItemHandler","id","type","expenseListCalendar","newDataForCalendarModal","filter","element","setExpenseListCalendar","length","time","modal","title","description","btn"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,qBAAP,MAAkC,uDAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAwBT,UAAU,CAACK,kBAAD,CAAxC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAsBV,UAAU,CAACM,qBAAD,CAAtC;;AAEA,WAASK,gBAAT,GAA4B;AAC1BH,IAAAA,KAAK,CAACI,cAAN,CAAqB,KAArB;AACD;;AAED,WAASC,wBAAT,GAAoC;AAClCL,IAAAA,KAAK,CAACI,cAAN,CAAqB,KAArB;AACAH,IAAAA,iBAAiB,CAACD,KAAK,CAACM,EAAP,CAAjB;AAEA,QAAIJ,eAAJ,EAAqBA,eAAe,CAAC;AAAEK,MAAAA,IAAI,EAAE,QAAR;AAAkBD,MAAAA,EAAE,EAAEN,KAAK,CAACM;AAA5B,KAAD,CAAf,CAJa,CAMlC;;AACA,QAAIN,KAAK,CAACQ,mBAAV,EAA+B;AAC7B,YAAMC,uBAAuB,GAAGT,KAAK,CAACQ,mBAAN,CAA0BE,MAA1B,CAC7BC,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeN,KAAK,CAACM,EADJ,CAAhC;AAIAN,MAAAA,KAAK,CAACY,sBAAN,CACEH,uBAAuB,CAACI,MAAxB,KAAmC,CAAnC,GACIb,KAAK,CAACQ,mBAAN,CAA0B,CAA1B,EAA6BM,IADjC,GAEIL,uBAHN;AAKD;AACF;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEb,KAAK,CAACmB,KAAxB;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEnB,KAAK,CAACoB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAEpB,KAAK,CAACqB,WAApB;AAAA,yEACyC;AAAA;AAAA;AAAA;AAAA,cADzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,SAAS,EAAErB,KAAK,CAAC,gBAAD,CAArB;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEO,gBADX;AAEE,QAAA,SAAS,EAAG,GAAEP,KAAK,CAACsB,GAAI,IAAGtB,KAAK,CAAC,SAAD,CAAY,EAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AACE,QAAA,OAAO,EAAES,wBADX;AAEE,QAAA,SAAS,EAAG,GAAET,KAAK,CAACsB,GAAI,IAAGtB,KAAK,CAAC,UAAD,CAAa,EAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlDQG,W;;KAAAA,W;AAoDT,eAAeA,WAAf","sourcesContent":["import { useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport Button from \"../Button\";\nimport style from \"./DeleteModal.module.css\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport SearchListDataContext from \"../../../store/searchListData/searchListData--context\";\n\n/*\nThere are three different places need DeleteModal component\n1. Home\n2. Calendar List Modal\n3. Search List\nSo we need different function to handle the data once user delete the data\n\nNote that DeleteModal only from \"DeleteModal\" because there's only way to show this modal\n*/\nfunction DeleteModal(props) {\n  const { removeExpenseData } = useContext(ExpenseDataContext);\n  const { setFilteredData } = useContext(SearchListDataContext);\n\n  function closeDeleteModal() {\n    props.setDeleteModal(false);\n  }\n\n  function removeExpenseItemHandler() {\n    props.setDeleteModal(false);\n    removeExpenseData(props.id);\n\n    if (setFilteredData) setFilteredData({ type: \"DELETE\", id: props.id });\n\n    /////////////////////////////////////////////////////////////\n    if (props.expenseListCalendar) {\n      const newDataForCalendarModal = props.expenseListCalendar.filter(\n        (element) => element.id !== props.id\n      );\n\n      props.setExpenseListCalendar(\n        newDataForCalendarModal.length === 0\n          ? props.expenseListCalendar[0].time\n          : newDataForCalendarModal\n      );\n    }\n  }\n\n  return (\n    <Modal className={style.modal}>\n      <Title className={style.title}>are you sure to delete?</Title>\n      <p className={style.description}>\n        there is no way getting back this data <br /> once you delete it\n      </p>\n      <div className={style[\"btn__container\"]}>\n        <Button\n          onClick={closeDeleteModal}\n          className={`${style.btn} ${style[\"btn--no\"]}`}\n        >\n          no\n        </Button>\n        <Button\n          onClick={removeExpenseItemHandler}\n          className={`${style.btn} ${style[\"btn--yes\"]}`}\n        >\n          yes\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default DeleteModal;\n"]},"metadata":{},"sourceType":"module"}