{"ast":null,"code":"import createYearMonthDay from \"./CreateYearMonthDay/createYearMonthDay\";\n\nfunction compareTimeWithRange(data, startDateObj, endDateObj) {\n  const {\n    year,\n    month,\n    day\n  } = data;\n  const yearNum = year - 0;\n  const monthNum = month - 0;\n  const dayNum = day - 0;\n  const [startingYear, startingMonth, startingDate] = createYearMonthDay(startDateObj);\n  const [endingYear, endingMonth, endingDate] = createYearMonthDay(endDateObj);\n  const startYear = startDateObj.getFullYear(),\n        startMonth = startDateObj.getMonth() + 1,\n        startDay = startDateObj.getDate();\n  const endYear = endDateObj.getFullYear(),\n        endMonth = endDateObj.getMonth() + 1,\n        endDay = endDateObj.getDate();\n  const startingIndex = yearNum === startingYear && monthNum > startMonth || yearNum === startingYear && monthNum === startMonth && dayNum >= startDay;\n  const endingIndex = yearNum === endYear && monthNum < endMonth || yearNum === endYear && monthNum === endMonth && dayNum <= endDay;\n  return startingIndex && endingIndex;\n}\n\nexport default compareTimeWithRange;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/compareTimeWithRange.js"],"names":["createYearMonthDay","compareTimeWithRange","data","startDateObj","endDateObj","year","month","day","yearNum","monthNum","dayNum","startingYear","startingMonth","startingDate","endingYear","endingMonth","endingDate","startYear","getFullYear","startMonth","getMonth","startDay","getDate","endYear","endMonth","endDay","startingIndex","endingIndex"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,yCAA/B;;AAEA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,YAApC,EAAkDC,UAAlD,EAA8D;AAC5D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAuBL,IAA7B;AACA,QAAMM,OAAO,GAAGH,IAAI,GAAG,CAAvB;AACA,QAAMI,QAAQ,GAAGH,KAAK,GAAG,CAAzB;AACA,QAAMI,MAAM,GAAGH,GAAG,GAAG,CAArB;AAEA,QAAM,CAACI,YAAD,EAAeC,aAAf,EAA8BC,YAA9B,IACJb,kBAAkB,CAACG,YAAD,CADpB;AAGA,QAAM,CAACW,UAAD,EAAaC,WAAb,EAA0BC,UAA1B,IAAwChB,kBAAkB,CAACI,UAAD,CAAhE;AAEA,QAAMa,SAAS,GAAGd,YAAY,CAACe,WAAb,EAAlB;AAAA,QACEC,UAAU,GAAGhB,YAAY,CAACiB,QAAb,KAA0B,CADzC;AAAA,QAEEC,QAAQ,GAAGlB,YAAY,CAACmB,OAAb,EAFb;AAIA,QAAMC,OAAO,GAAGnB,UAAU,CAACc,WAAX,EAAhB;AAAA,QACEM,QAAQ,GAAGpB,UAAU,CAACgB,QAAX,KAAwB,CADrC;AAAA,QAEEK,MAAM,GAAGrB,UAAU,CAACkB,OAAX,EAFX;AAIA,QAAMI,aAAa,GAChBlB,OAAO,KAAKG,YAAZ,IAA4BF,QAAQ,GAAGU,UAAxC,IACCX,OAAO,KAAKG,YAAZ,IAA4BF,QAAQ,KAAKU,UAAzC,IAAuDT,MAAM,IAAIW,QAFpE;AAIA,QAAMM,WAAW,GACdnB,OAAO,KAAKe,OAAZ,IAAuBd,QAAQ,GAAGe,QAAnC,IACChB,OAAO,KAAKe,OAAZ,IAAuBd,QAAQ,KAAKe,QAApC,IAAgDd,MAAM,IAAIe,MAF7D;AAIA,SAAOC,aAAa,IAAIC,WAAxB;AACD;;AAED,eAAe1B,oBAAf","sourcesContent":["import createYearMonthDay from \"./CreateYearMonthDay/createYearMonthDay\";\n\nfunction compareTimeWithRange(data, startDateObj, endDateObj) {\n  const { year, month, day } = data;\n  const yearNum = year - 0;\n  const monthNum = month - 0;\n  const dayNum = day - 0;\n\n  const [startingYear, startingMonth, startingDate] =\n    createYearMonthDay(startDateObj);\n\n  const [endingYear, endingMonth, endingDate] = createYearMonthDay(endDateObj);\n\n  const startYear = startDateObj.getFullYear(),\n    startMonth = startDateObj.getMonth() + 1,\n    startDay = startDateObj.getDate();\n\n  const endYear = endDateObj.getFullYear(),\n    endMonth = endDateObj.getMonth() + 1,\n    endDay = endDateObj.getDate();\n\n  const startingIndex =\n    (yearNum === startingYear && monthNum > startMonth) ||\n    (yearNum === startingYear && monthNum === startMonth && dayNum >= startDay);\n\n  const endingIndex =\n    (yearNum === endYear && monthNum < endMonth) ||\n    (yearNum === endYear && monthNum === endMonth && dayNum <= endDay);\n\n  return startingIndex && endingIndex;\n}\n\nexport default compareTimeWithRange;\n"]},"metadata":{},"sourceType":"module"}