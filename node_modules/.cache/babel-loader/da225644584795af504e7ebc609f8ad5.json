{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/SideBar/SideBarItem.js\";\nimport style from \"./SideBarItem.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SideBarItem(props) {\n  function pageIconHandler(e) {\n    // e.target.dataset.id\n    const page = e.target.getAttribute(\"data-id\");\n    if (page) props.setPage(page);\n    if (window.innerWidth <= 1000) props.setShowSidebar(prev => !prev);\n  }\n\n  let className = `${style[\"sidebar__item\"]} ${props.activePage ? `${style[\"sidebar__item--active\"]}` : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    title: props.title,\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-id\": props.pageIndex,\n      onClick: pageIconHandler,\n      className: style.inner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SideBarItem;\nexport default SideBarItem;\n/*\nWhy use <div className={style.inner}></div>?\nIt seems useless at first\nBut we use it here for the sake of better user experience\n\nNote that we have onClick={pageIconHandler}\nthe purpose of this is for changing the main content when user clicks the different icon of sidebar\n\nIf we put onClick={pageIconHandler} on the <li></li>\nWhen user click the area of sidebar item\nThey may click\n1) <li></li> which is what we want\n2) {props.children} which is SVG icon\nFor the second situation, there's no onClick on SVG icon, so it maybe has no reaction even after user clicking the area of sidebar item\nSo user may try to click a couple times to change the main content, which is not a good user experience\n\nIn order to avoid that situation, we\n1) create <div></div>\n2) put onClick and data-id\n3) set the parent element of <div></div>, which is sidebar__item to position: relative;\n4) set <div></div> to position: absolute; width: 100%; height: 100%;z-index: 100;, so that this <div></div> will completely occupy this area\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBarItem\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/SideBar/SideBarItem.js"],"names":["style","SideBarItem","props","pageIconHandler","e","page","target","getAttribute","setPage","window","innerWidth","setShowSidebar","prev","className","activePage","title","pageIndex","inner","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,0BAAlB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,WAASC,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B;AACA,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,SAAtB,CAAb;AAEA,QAAIF,IAAJ,EAAUH,KAAK,CAACM,OAAN,CAAcH,IAAd;AAEV,QAAII,MAAM,CAACC,UAAP,IAAqB,IAAzB,EAA+BR,KAAK,CAACS,cAAN,CAAsBC,IAAD,IAAU,CAACA,IAAhC;AAChC;;AAED,MAAIC,SAAS,GAAI,GAAEb,KAAK,CAAC,eAAD,CAAkB,IACxCE,KAAK,CAACY,UAAN,GAAoB,GAAEd,KAAK,CAAC,uBAAD,CAA0B,EAArD,GAAyD,EAC1D,EAFD;AAIA,sBACE;AAAI,IAAA,KAAK,EAAEE,KAAK,CAACa,KAAjB;AAAwB,IAAA,SAAS,EAAEF,SAAnC;AAAA,4BACE;AACE,iBAASX,KAAK,CAACc,SADjB;AAEE,MAAA,OAAO,EAAEb,eAFX;AAGE,MAAA,SAAS,EAAEH,KAAK,CAACiB;AAHnB;AAAA;AAAA;AAAA;AAAA,YADF,EAMGf,KAAK,CAACgB,QANT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAxBQjB,W;AA0BT,eAAeA,WAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import style from \"./SideBarItem.module.css\";\n\nfunction SideBarItem(props) {\n  function pageIconHandler(e) {\n    // e.target.dataset.id\n    const page = e.target.getAttribute(\"data-id\");\n\n    if (page) props.setPage(page);\n\n    if (window.innerWidth <= 1000) props.setShowSidebar((prev) => !prev);\n  }\n\n  let className = `${style[\"sidebar__item\"]} ${\n    props.activePage ? `${style[\"sidebar__item--active\"]}` : \"\"\n  }`;\n\n  return (\n    <li title={props.title} className={className}>\n      <div\n        data-id={props.pageIndex}\n        onClick={pageIconHandler}\n        className={style.inner}\n      ></div>\n      {props.children}\n    </li>\n  );\n}\n\nexport default SideBarItem;\n/*\nWhy use <div className={style.inner}></div>?\nIt seems useless at first\nBut we use it here for the sake of better user experience\n\nNote that we have onClick={pageIconHandler}\nthe purpose of this is for changing the main content when user clicks the different icon of sidebar\n\nIf we put onClick={pageIconHandler} on the <li></li>\nWhen user click the area of sidebar item\nThey may click\n1) <li></li> which is what we want\n2) {props.children} which is SVG icon\nFor the second situation, there's no onClick on SVG icon, so it maybe has no reaction even after user clicking the area of sidebar item\nSo user may try to click a couple times to change the main content, which is not a good user experience\n\nIn order to avoid that situation, we\n1) create <div></div>\n2) put onClick and data-id\n3) set the parent element of <div></div>, which is sidebar__item to position: relative;\n4) set <div></div> to position: absolute; width: 100%; height: 100%;z-index: 100;, so that this <div></div> will completely occupy this area\n*/\n"]},"metadata":{},"sourceType":"module"}