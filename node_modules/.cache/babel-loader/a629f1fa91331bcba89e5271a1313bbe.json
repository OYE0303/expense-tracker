{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Account/AccountOverview/AccountChart.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createLineDataArr from \"../../../../Others/CreateChartData/createLineDataArr\";\nimport createLineLabels from \"../../../../Others/CreateChartData/createLineLabels\";\nimport style from \"./AccountChart.module.css\";\nimport Chart from \"chart.js/auto\";\nimport createConfigObj from \"../../../../Others/CreateChartData/createConfigObj\";\nimport timeObj from \"../../../assets/timeObj/timeObj\"; // for choosing diff time range (input radio)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timeRangeArr = [\"1wk\", \"1mo\", \"3mo\", \"6mo\", \"1yr\"];\nconst {\n  TODAY\n} = timeObj; // seven days ago\n\nconst initialDate = new Date(new Date().setDate(TODAY.getDate() - 7)); // an array of labels(string)\n\nconst initialLabels = createLineLabels(initialDate, TODAY);\n\nfunction AccountChart() {\n  _s();\n\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const [chartData, setChartData] = useState([createLineDataArr(initialLabels, expenseData), initialLabels]);\n  const chartRef = useRef(null); // const config = createConfigObj(...char)\n\n  const config = {\n    type: \"line\",\n    data: {\n      labels: chartData.labels,\n      datasets: [{\n        fill: {\n          target: \"origin\"\n        },\n        label: \"\",\n        data: chartData.data,\n        backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n        borderColor: [\"rgb(54, 162, 235)\"],\n        borderWidth: 1,\n        pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n      }]\n    },\n    options: {\n      maintainAspectRatio: false,\n      elements: {\n        line: {\n          tension: 0.5\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, config);\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [chartData]); // helper function for changing time range\n\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n    const labels = createLineLabels(today, TODAY);\n    const data = createLineDataArr(labels, expenseData);\n    setChartData([data, labels]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: chartRadioChangeHandler,\n      className: style[\"radio__container\"],\n      children: timeRangeArr.map((element, index) => /*#__PURE__*/_jsxDEV(InputRadio, {\n        label: element,\n        id: element,\n        value: element,\n        name: \"chart__btn\",\n        defaultChecked: index === 0,\n        classLabel: `${style.label} transition--25`,\n        classInput: style.input,\n        classCheck: style.check\n      }, element, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"chart__container\"],\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: style.chart,\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountChart, \"rczpJdB7aa4CBVmmfwa43UMC23M=\");\n\n_c = AccountChart;\nexport default AccountChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountChart\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Account/AccountOverview/AccountChart.js"],"names":["useRef","useEffect","useState","useContext","InputRadio","ExpenseDataContext","createLineDataArr","createLineLabels","style","Chart","createConfigObj","timeObj","timeRangeArr","TODAY","initialDate","Date","setDate","getDate","initialLabels","AccountChart","expenseData","chartData","setChartData","chartRef","config","type","data","labels","datasets","fill","target","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","maintainAspectRatio","elements","line","tension","scales","y","beginAtZero","chart","current","cleanUp","destroy","chartRadioChangeHandler","e","today","value","setMonth","getMonth","setFullYear","getFullYear","container","map","element","index","input","check"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useContext } from \"react\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createLineDataArr from \"../../../../Others/CreateChartData/createLineDataArr\";\nimport createLineLabels from \"../../../../Others/CreateChartData/createLineLabels\";\nimport style from \"./AccountChart.module.css\";\nimport Chart from \"chart.js/auto\";\nimport createConfigObj from \"../../../../Others/CreateChartData/createConfigObj\";\nimport timeObj from \"../../../assets/timeObj/timeObj\";\n\n// for choosing diff time range (input radio)\nconst timeRangeArr = [\"1wk\", \"1mo\", \"3mo\", \"6mo\", \"1yr\"];\n\nconst { TODAY } = timeObj;\n\n// seven days ago\nconst initialDate = new Date(new Date().setDate(TODAY.getDate() - 7));\n\n// an array of labels(string)\nconst initialLabels = createLineLabels(initialDate, TODAY);\n\nfunction AccountChart() {\n  const { expenseData } = useContext(ExpenseDataContext);\n  const [chartData, setChartData] = useState([\n    createLineDataArr(initialLabels, expenseData),\n    initialLabels,\n  ]);\n  const chartRef = useRef(null);\n\n  // const config = createConfigObj(...char)\n\n  const config = {\n    type: \"line\",\n    data: {\n      labels: chartData.labels,\n      datasets: [\n        {\n          fill: {\n            target: \"origin\",\n          },\n          label: \"\",\n          data: chartData.data,\n          backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n          borderColor: [\"rgb(54, 162, 235)\"],\n          borderWidth: 1,\n          pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n        },\n      ],\n    },\n    options: {\n      maintainAspectRatio: false,\n      elements: {\n        line: {\n          tension: 0.5,\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  };\n\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, config);\n\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [chartData]);\n\n  // helper function for changing time range\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n    const labels = createLineLabels(today, TODAY);\n    const data = createLineDataArr(labels, expenseData);\n    setChartData([data, labels]);\n  }\n\n  return (\n    <div className={style.container}>\n      <div\n        onChange={chartRadioChangeHandler}\n        className={style[\"radio__container\"]}\n      >\n        {timeRangeArr.map((element, index) => (\n          <InputRadio\n            key={element}\n            label={element}\n            id={element}\n            value={element}\n            name=\"chart__btn\"\n            defaultChecked={index === 0}\n            classLabel={`${style.label} transition--25`}\n            classInput={style.input}\n            classCheck={style.check}\n          />\n        ))}\n      </div>\n      <div className={style[\"chart__container\"]}>\n        <canvas className={style.chart} ref={chartRef}></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountChart;\n"]},"metadata":{},"sourceType":"module"}