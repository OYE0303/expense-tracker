{"ast":null,"code":"function formatMoney(price) {\n  const absPrice = Math.abs(price);\n\n  if (absPrice >= 1000000000) {\n    const newPrice = price / 1000000000;\n    const formatedPrice = Number.isInteger(newPrice) ? newPrice : roundTwo(newPrice);\n    return `${formatedPrice}B`;\n  } else if (absPrice >= 1000000 && absPrice < 1000000000) {\n    const newPrice = price / 1000000;\n    const formatedPrice = Number.isInteger(newPrice) ? newPrice : roundTwo(newPrice);\n    return `${formatedPrice}M`;\n  } else if (absPrice >= 1000) {\n    const priceStr = String(price);\n    const negativeIndex = price < 0;\n    const endingIndex = negativeIndex ? 1 : 0;\n    let formatedPrice = \"\";\n    let commaIndex = 1;\n\n    for (let i = priceStr.length - 1; i >= endingIndex; i--) {\n      if (commaIndex % 4 === 0) {\n        formatedPrice += \",\";\n        i++;\n        commaIndex = 1;\n        continue;\n      } else formatedPrice += priceStr[i];\n\n      commaIndex++;\n    }\n\n    if (negativeIndex) formatedPrice += \"-\";\n    return formatedPrice.split(\"\").reverse().join(\"\");\n  } else return price;\n}\n\nexport default formatMoney;\n/*\n1M = 1Million = 1,000,000 = 1百万. 1B = 1Billion = 1,000,000,000 = 10亿.\n*/\n\nfunction roundTwo(value) {\n  return Number(Math.round(value + \"e\" + 2) + \"e-\" + 2).toFixed(2);\n}","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/FormatMoney/formatMoney.js"],"names":["formatMoney","price","absPrice","Math","abs","newPrice","formatedPrice","Number","isInteger","roundTwo","priceStr","String","negativeIndex","endingIndex","commaIndex","i","length","split","reverse","join","value","round","toFixed"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAT,CAAjB;;AAEA,MAAIC,QAAQ,IAAI,UAAhB,EAA4B;AAC1B,UAAMG,QAAQ,GAAGJ,KAAK,GAAG,UAAzB;AACA,UAAMK,aAAa,GAAGC,MAAM,CAACC,SAAP,CAAiBH,QAAjB,IAClBA,QADkB,GAElBI,QAAQ,CAACJ,QAAD,CAFZ;AAIA,WAAQ,GAAEC,aAAc,GAAxB;AACD,GAPD,MAOO,IAAIJ,QAAQ,IAAI,OAAZ,IAAuBA,QAAQ,GAAG,UAAtC,EAAkD;AACvD,UAAMG,QAAQ,GAAGJ,KAAK,GAAG,OAAzB;AAEA,UAAMK,aAAa,GAAGC,MAAM,CAACC,SAAP,CAAiBH,QAAjB,IAClBA,QADkB,GAElBI,QAAQ,CAACJ,QAAD,CAFZ;AAIA,WAAQ,GAAEC,aAAc,GAAxB;AACD,GARM,MAQA,IAAIJ,QAAQ,IAAI,IAAhB,EAAsB;AAC3B,UAAMQ,QAAQ,GAAGC,MAAM,CAACV,KAAD,CAAvB;AACA,UAAMW,aAAa,GAAGX,KAAK,GAAG,CAA9B;AACA,UAAMY,WAAW,GAAGD,aAAa,GAAG,CAAH,GAAO,CAAxC;AACA,QAAIN,aAAa,GAAG,EAApB;AACA,QAAIQ,UAAU,GAAG,CAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAGL,QAAQ,CAACM,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAIF,WAAvC,EAAoDE,CAAC,EAArD,EAAyD;AACvD,UAAID,UAAU,GAAG,CAAb,KAAmB,CAAvB,EAA0B;AACxBR,QAAAA,aAAa,IAAI,GAAjB;AACAS,QAAAA,CAAC;AACDD,QAAAA,UAAU,GAAG,CAAb;AACA;AACD,OALD,MAKOR,aAAa,IAAII,QAAQ,CAACK,CAAD,CAAzB;;AAEPD,MAAAA,UAAU;AACX;;AAED,QAAIF,aAAJ,EAAmBN,aAAa,IAAI,GAAjB;AAEnB,WAAOA,aAAa,CAACW,KAAd,CAAoB,EAApB,EAAwBC,OAAxB,GAAkCC,IAAlC,CAAuC,EAAvC,CAAP;AACD,GArBM,MAqBA,OAAOlB,KAAP;AACR;;AAED,eAAeD,WAAf;AAEA;AACA;AACA;;AAEA,SAASS,QAAT,CAAkBW,KAAlB,EAAyB;AACvB,SAAOb,MAAM,CAACJ,IAAI,CAACkB,KAAL,CAAWD,KAAK,GAAG,GAAR,GAAc,CAAzB,IAA8B,IAA9B,GAAqC,CAAtC,CAAN,CAA+CE,OAA/C,CAAuD,CAAvD,CAAP;AACD","sourcesContent":["function formatMoney(price) {\n  const absPrice = Math.abs(price);\n\n  if (absPrice >= 1000000000) {\n    const newPrice = price / 1000000000;\n    const formatedPrice = Number.isInteger(newPrice)\n      ? newPrice\n      : roundTwo(newPrice);\n\n    return `${formatedPrice}B`;\n  } else if (absPrice >= 1000000 && absPrice < 1000000000) {\n    const newPrice = price / 1000000;\n\n    const formatedPrice = Number.isInteger(newPrice)\n      ? newPrice\n      : roundTwo(newPrice);\n\n    return `${formatedPrice}M`;\n  } else if (absPrice >= 1000) {\n    const priceStr = String(price);\n    const negativeIndex = price < 0;\n    const endingIndex = negativeIndex ? 1 : 0;\n    let formatedPrice = \"\";\n    let commaIndex = 1;\n\n    for (let i = priceStr.length - 1; i >= endingIndex; i--) {\n      if (commaIndex % 4 === 0) {\n        formatedPrice += \",\";\n        i++;\n        commaIndex = 1;\n        continue;\n      } else formatedPrice += priceStr[i];\n\n      commaIndex++;\n    }\n\n    if (negativeIndex) formatedPrice += \"-\";\n\n    return formatedPrice.split(\"\").reverse().join(\"\");\n  } else return price;\n}\n\nexport default formatMoney;\n\n/*\n1M = 1Million = 1,000,000 = 1百万. 1B = 1Billion = 1,000,000,000 = 10亿.\n*/\n\nfunction roundTwo(value) {\n  return Number(Math.round(value + \"e\" + 2) + \"e-\" + 2).toFixed(2);\n}\n"]},"metadata":{},"sourceType":"module"}