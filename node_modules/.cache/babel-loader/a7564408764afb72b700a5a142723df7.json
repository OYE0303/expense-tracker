{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountOverview/AccountOverview.js\";\nimport Title from \"../../../UI/Title/Title\";\nimport SubTitle from \"../../../UI/SubTitle/SubTitle\";\nimport AccountCard from \"./AccountCard\";\nimport AccountChart from \"./AccountChart\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport style from \"./AccountOverview.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountOverview(props) {\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n    const chartData = createChartDataArr(today, TODAY, expenseData); // setChartData(chartData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.accountOverview,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"title__section\"],\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"account overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n        className: style.subTitle,\n        children: \"hi, username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AccountOverview;\nexport default AccountOverview;\n\nfunction createChartDataArr(startDate, endDate, expenseData) {\n  const labels = createLabelsAccount(startDate, endDate);\n  const newExpenseData = createFilteredData(labels, expenseData);\n  const newExpenseDataExpense = newExpenseData.filter(element => element.category === \"expense\");\n  const newExpenseDataIncome = newExpenseData.filter(element => element.category === \"income\");\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n  const finalDataArr = [];\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense);\n  });\n  return [finalDataArr, labels];\n}\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      var _expensData$indexData, _expensData$indexData2, _expensData$indexData3;\n\n      yearDate = (_expensData$indexData = expensData[indexData]) === null || _expensData$indexData === void 0 ? void 0 : _expensData$indexData.time.slice(0, 4);\n      monthData = (_expensData$indexData2 = expensData[indexData]) === null || _expensData$indexData2 === void 0 ? void 0 : _expensData$indexData2.time.slice(5, 7);\n      dayData = (_expensData$indexData3 = expensData[indexData]) === null || _expensData$indexData3 === void 0 ? void 0 : _expensData$indexData3.time.slice(8);\n\n      if (yearLabel === yearDate && monthLabel === monthData && dayLabel >= dayData) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / (1000 * 3600 * 24));\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;else {\n    eachDiffAmount = (diff - diff % 7) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n  let tmpDate;\n\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0) tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));else tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n  label.push(createDateFormat(tmpDate));\n  return label;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountOverview\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountOverview/AccountOverview.js"],"names":["Title","SubTitle","AccountCard","AccountChart","InputRadio","style","AccountOverview","props","chartRadioChangeHandler","e","today","Date","value","target","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","chartData","createChartDataArr","TODAY","expenseData","accountOverview","subTitle","startDate","endDate","labels","createLabelsAccount","newExpenseData","createFilteredData","newExpenseDataExpense","filter","element","category","newExpenseDataIncome","dataArrExpense","createDataArrAccount","dataArrIncome","finalDataArr","forEach","expense","index","push","expensData","data","indexCurrentDate","currentAmount","indexData","yearLabel","monthLabel","dayLabel","yearDate","monthData","dayData","i","length","slice","time","Number","price","label","diff","Math","round","getTime","eachDiffAmount","lastDiffAmount","tmpDate","createDateFormat"],"mappings":"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","sourcesContent":["import Title from \"../../../UI/Title/Title\";\nimport SubTitle from \"../../../UI/SubTitle/SubTitle\";\nimport AccountCard from \"./AccountCard\";\nimport AccountChart from \"./AccountChart\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport style from \"./AccountOverview.module.css\";\n\nfunction AccountOverview(props) {\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n\n    const chartData = createChartDataArr(today, TODAY, expenseData);\n\n    // setChartData(chartData);\n  }\n\n  return (\n    <div className={style.accountOverview}>\n      <div className={style[\"title__section\"]}>\n        <Title>account overview</Title>\n        <SubTitle className={style.subTitle}>hi, username</SubTitle>\n      </div>\n      <AccountCard />\n      <AccountChart />\n    </div>\n  );\n}\n\nexport default AccountOverview;\n\nfunction createChartDataArr(startDate, endDate, expenseData) {\n  const labels = createLabelsAccount(startDate, endDate);\n  const newExpenseData = createFilteredData(labels, expenseData);\n\n  const newExpenseDataExpense = newExpenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n\n  const newExpenseDataIncome = newExpenseData.filter(\n    (element) => element.category === \"income\"\n  );\n\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n\n  const finalDataArr = [];\n\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense);\n  });\n\n  return [finalDataArr, labels];\n}\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      yearDate = expensData[indexData]?.time.slice(0, 4);\n      monthData = expensData[indexData]?.time.slice(5, 7);\n      dayData = expensData[indexData]?.time.slice(8);\n\n      if (\n        yearLabel === yearDate &&\n        monthLabel === monthData &&\n        dayLabel >= dayData\n      ) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round(\n    (new Date(endDate).getTime() - new Date(startDate).getTime()) /\n      (1000 * 3600 * 24)\n  );\n\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;\n  else {\n    eachDiffAmount = (diff - (diff % 7)) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n\n  let tmpDate;\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0)\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n  else\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n\n  label.push(createDateFormat(tmpDate));\n\n  return label;\n}\n"]},"metadata":{},"sourceType":"module"}