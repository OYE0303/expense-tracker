{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/AddingSubCategoryModal/AddingSubCategoryModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddingSubCategoryModal(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  console.log(props.mainCategory);\n  const {\n    categoryExpense,\n    categoryIncome,\n    addSubCategory\n  } = useContext(CategoryContext);\n\n  function inputTextChangeHandler(e) {\n    setName(e.target.value);\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    addSubCategory(name, props.category, props.mainCategory);\n    props.addSubCategoryModalToggler(null, name);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: style.modal,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      className: style.title,\n      children: \"add sub category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"subtitle__container\"],\n      children: /*#__PURE__*/_jsxDEV(SubTitle, {\n        className: style.subtitle,\n        children: [\"you're adding sub category of \", props.mainCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(InputText, {\n        label: \"name\",\n        classInputContainer: style[\"input__container\"],\n        value: name,\n        onChange: inputTextChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"btn__container\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          className: `${style.btn} ${style[\"btn--isValid\"]}`,\n          onClick: props.addSubCategoryModalToggler,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          diabled: name.trim().length > 0,\n          type: \"submit\",\n          className: name.trim().length > 0 ? `${style.btn} ${style[\"btn--isValid\"]}` : `${style.btn}`,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddingSubCategoryModal, \"nrAikelLriyCmknEfPilikhkLjQ=\");\n\n_c = AddingSubCategoryModal;\nexport default AddingSubCategoryModal;\n/*\nimport { useReducer, useEffect } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount + 1,\n      };\n    }\n    case \"REMOVE_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount - 1,\n      };\n    }\n\n    case \"INPUT_TEXT_CHANGE\": {\n      const nameArr = [...state.nameArr];\n\n      nameArr[action.id] = action.value;\n\n      return { ...state, nameArr, test: action.value };\n    }\n\n    case \"aa\": {\n      return { state };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction AddingSubCategoryModal(props) {\n  const [form, formDispatch] = useReducer(reducer, {\n    nameArr: [\"\"],\n    test: \"\",\n    inputTextAmount: 1,\n    inputTextChangeHandler,\n  });\n\n  function btnKeepAddingClickHandler() {\n    formDispatch({ type: \"ADD_INPUT_TEXT\" });\n  }\n\n  function btnRemoveAddingClickHandler() {\n    formDispatch({ type: \"REMOVE_INPUT_TEXT\" });\n  }\n\n  function inputTextChangeHandler(e) {\n    formDispatch({\n      type: \"INPUT_TEXT_CHANGE\",\n      id: e.target.dataset.id,\n      value: e.target.value,\n    });\n  }\n\n  let inputTextAmountArr = [];\n\n  for (let i = 0; i < form.inputTextAmount; i++) {\n    inputTextAmountArr.push(\n      <InputText\n        key={uuidv4()}\n        label=\"name\"\n        classInputContainer={style[\"input__container\"]}\n        dataID={i}\n      />\n    );\n  }\n\n  return (\n    <Modal>\n      <Title className={style.title}>add sub category</Title>\n      <HorizontalLine />\n      <div className={style[\"subtitle__container\"]}>\n        <SubTitle className={style.subtitle}>\n          you're adding sub category\n        </SubTitle>\n        <SubTitle className={style.subtitle}>of food</SubTitle>\n      </div>\n      <form\n        className={\n          inputTextAmountArr.length > 3\n            ? `${style.overflow} ${style.form}`\n            : `${style.form}`\n        }\n      >\n        {inputTextAmountArr}\n        <div className={style[\"btn__container--small\"]}>\n          <Button\n            disabled={inputTextAmountArr.length === 1}\n            className={\n              inputTextAmountArr.length === 1\n                ? `${style[\"btn--disabled--small\"]}`\n                : `${style[\"btn--small\"]}`\n            }\n            type=\"button\"\n            onClick={btnRemoveAddingClickHandler}\n          >\n            remove adding\n          </Button>\n          <Button\n            className={style[\"btn--small\"]}\n            type=\"button\"\n            onClick={btnKeepAddingClickHandler}\n          >\n            keep adding\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddingSubCategoryModal;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AddingSubCategoryModal\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/AddingSubCategoryModal/AddingSubCategoryModal.js"],"names":["useState","useContext","Modal","Title","SubTitle","HorizontalLine","InputText","Button","CategoryContext","style","AddingSubCategoryModal","props","name","setName","console","log","mainCategory","categoryExpense","categoryIncome","addSubCategory","inputTextChangeHandler","e","target","value","submitHandler","preventDefault","category","addSubCategoryModalToggler","modal","title","subtitle","btn","trim","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,KAAP,MAAkB,qCAAlB;;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,YAAlB;AAEA,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,cAAnB;AAAmCC,IAAAA;AAAnC,MACJlB,UAAU,CAACO,eAAD,CADZ;;AAGA,WAASY,sBAAT,CAAgCC,CAAhC,EAAmC;AACjCR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,WAASC,aAAT,CAAuBH,CAAvB,EAA0B;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAN,IAAAA,cAAc,CAACP,IAAD,EAAOD,KAAK,CAACe,QAAb,EAAuBf,KAAK,CAACK,YAA7B,CAAd;AAEAL,IAAAA,KAAK,CAACgB,0BAAN,CAAiC,IAAjC,EAAuCf,IAAvC;AACD;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEH,KAAK,CAACmB,KAAxB;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEnB,KAAK,CAACoB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAEpB,KAAK,CAAC,qBAAD,CAArB;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEA,KAAK,CAACqB,QAA3B;AAAA,qDACiCnB,KAAK,CAACK,YADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAM,MAAA,QAAQ,EAAEQ,aAAhB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,mBAAmB,EAAEf,KAAK,CAAC,kBAAD,CAF5B;AAGE,QAAA,KAAK,EAAEG,IAHT;AAIE,QAAA,QAAQ,EAAEQ;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAEX,KAAK,CAAC,gBAAD,CAArB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAG,GAAEA,KAAK,CAACsB,GAAI,IAAGtB,KAAK,CAAC,cAAD,CAAiB,EAFnD;AAGE,UAAA,OAAO,EAAEE,KAAK,CAACgB,0BAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEf,IAAI,CAACoB,IAAL,GAAYC,MAAZ,GAAqB,CADhC;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EACPrB,IAAI,CAACoB,IAAL,GAAYC,MAAZ,GAAqB,CAArB,GACK,GAAExB,KAAK,CAACsB,GAAI,IAAGtB,KAAK,CAAC,cAAD,CAAiB,EAD1C,GAEK,GAAEA,KAAK,CAACsB,GAAI,EANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GA5DQrB,sB;;KAAAA,sB;AA8DT,eAAeA,sBAAfsourcesContent":["import { useState, useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport style from \"./AddingSubCategoryModal.module.css\";\n\nfunction AddingSubCategoryModal(props) {\n  const [name, setName] = useState(\"\");\n\n  console.log(props.mainCategory);\n\n  const { categoryExpense, categoryIncome, addSubCategory } =\n    useContext(CategoryContext);\n\n  function inputTextChangeHandler(e) {\n    setName(e.target.value);\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    addSubCategory(name, props.category, props.mainCategory);\n\n    props.addSubCategoryModalToggler(null, name);\n  }\n\n  return (\n    <Modal className={style.modal}>\n      <Title className={style.title}>add sub category</Title>\n      <HorizontalLine />\n      <div className={style[\"subtitle__container\"]}>\n        <SubTitle className={style.subtitle}>\n          you're adding sub category of {props.mainCategory}\n        </SubTitle>\n      </div>\n      <form onSubmit={submitHandler}>\n        <InputText\n          label=\"name\"\n          classInputContainer={style[\"input__container\"]}\n          value={name}\n          onChange={inputTextChangeHandler}\n        />\n\n        <div className={style[\"btn__container\"]}>\n          <Button\n            type=\"button\"\n            className={`${style.btn} ${style[\"btn--isValid\"]}`}\n            onClick={props.addSubCategoryModalToggler}\n          >\n            cancel\n          </Button>\n          <Button\n            diabled={name.trim().length > 0}\n            type=\"submit\"\n            className={\n              name.trim().length > 0\n                ? `${style.btn} ${style[\"btn--isValid\"]}`\n                : `${style.btn}`\n            }\n          >\n            add\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddingSubCategoryModal;\n\n/*\nimport { useReducer, useEffect } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount + 1,\n      };\n    }\n    case \"REMOVE_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount - 1,\n      };\n    }\n\n    case \"INPUT_TEXT_CHANGE\": {\n      const nameArr = [...state.nameArr];\n\n      nameArr[action.id] = action.value;\n\n      return { ...state, nameArr, test: action.value };\n    }\n\n    case \"aa\": {\n      return { state };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction AddingSubCategoryModal(props) {\n  const [form, formDispatch] = useReducer(reducer, {\n    nameArr: [\"\"],\n    test: \"\",\n    inputTextAmount: 1,\n    inputTextChangeHandler,\n  });\n\n  function btnKeepAddingClickHandler() {\n    formDispatch({ type: \"ADD_INPUT_TEXT\" });\n  }\n\n  function btnRemoveAddingClickHandler() {\n    formDispatch({ type: \"REMOVE_INPUT_TEXT\" });\n  }\n\n  function inputTextChangeHandler(e) {\n    formDispatch({\n      type: \"INPUT_TEXT_CHANGE\",\n      id: e.target.dataset.id,\n      value: e.target.value,\n    });\n  }\n\n  let inputTextAmountArr = [];\n\n  for (let i = 0; i < form.inputTextAmount; i++) {\n    inputTextAmountArr.push(\n      <InputText\n        key={uuidv4()}\n        label=\"name\"\n        classInputContainer={style[\"input__container\"]}\n        dataID={i}\n      />\n    );\n  }\n\n  return (\n    <Modal>\n      <Title className={style.title}>add sub category</Title>\n      <HorizontalLine />\n      <div className={style[\"subtitle__container\"]}>\n        <SubTitle className={style.subtitle}>\n          you're adding sub category\n        </SubTitle>\n        <SubTitle className={style.subtitle}>of food</SubTitle>\n      </div>\n      <form\n        className={\n          inputTextAmountArr.length > 3\n            ? `${style.overflow} ${style.form}`\n            : `${style.form}`\n        }\n      >\n        {inputTextAmountArr}\n        <div className={style[\"btn__container--small\"]}>\n          <Button\n            disabled={inputTextAmountArr.length === 1}\n            className={\n              inputTextAmountArr.length === 1\n                ? `${style[\"btn--disabled--small\"]}`\n                : `${style[\"btn--small\"]}`\n            }\n            type=\"button\"\n            onClick={btnRemoveAddingClickHandler}\n          >\n            remove adding\n          </Button>\n          <Button\n            className={style[\"btn--small\"]}\n            type=\"button\"\n            onClick={btnKeepAddingClickHandler}\n          >\n            keep adding\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddingSubCategoryModal;\n*/\n"]},"metadata":{},"sourceType":"module"}