{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Chart/ChartOption/ChartOption.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport ChartOptionCheckbox from \"./OptionCheckbox/ChartOptionCheckBox\";\nimport CategoryContext from \"../../../../store/category/category--context\";\nimport { RiCloseCircleFill } from \"react-icons/ri\";\nimport style from \"./ChartOption.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\":\n      {\n        return { ...state,\n          mainType: action.value\n        };\n      }\n\n    case \"STARTING_DATE\":\n      {\n        return { ...state,\n          startingDate: action.value\n        };\n      }\n\n    case \"ENDING_DATE\":\n      {\n        return { ...state,\n          endingDate: action.value\n        };\n      }\n\n    case \"TIME_DURATION\":\n      {\n        return { ...state,\n          timeDuration: action.value\n        };\n      }\n\n    case \"MAIN_CATEGORY\":\n      {\n        let subCategoryArr = [];\n        if (action.value === \"income\") subCategoryArr = state.categoryIncome;\n        if (action.value === \"expense\") subCategoryArr = state.categoryExpense;\n        return { ...state,\n          mainCategory: action.value,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"SUB_CATEGORY\":\n      {\n        let subCategoryArr; // add\n\n        if (action.check) {\n          // first check if the items has been in the array(avoid duplicate)\n          if (!state.subCategory.includes(action.value)) subCategoryArr = [...state.subCategory, action.value];\n        } // remove\n        else {\n          subCategoryArr = state.subCategory.filter(element => element !== action.value);\n        }\n\n        return { ...state,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"ISVALID\":\n      {\n        return { ...state,\n          isValid: true\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction ChartOption(props) {\n  _s();\n\n  const {\n    categoryExpense,\n    categoryIncome\n  } = useContext(CategoryContext);\n  const initialObj = {\n    mainType: \"\",\n    startingDate: \"\",\n    endingDate: \"\",\n    timeDuration: \"7\",\n    mainCategory: \"\",\n    subCategory: \"\",\n    isValid: false,\n    categoryExpense: Object.keys(categoryExpense),\n    categoryIncome: Object.keys(categoryIncome)\n  }; // const [optionMainData, setOptionMainData] = useState();\n  // const [optionSubData, setOptionSubData] = useState();\n\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n\n  function submitFormHandler(e) {\n    e.preventDefault();\n    props.setChartData(chartData); // When chartOptionModal is open, we wanna close it after submitting\n\n    if (props.chartOptionModalToggler) props.chartOptionModalToggler();\n  }\n\n  let validIndex = chartData.mainType && chartData.mainCategory && chartData.startingDate && chartData.endingDate; // check box content may vary because different kind of chart\n\n  let checkboxContent = \"\";\n\n  if (chartData.mainType === \"time\") {\n    if (chartData.mainCategory === \"income\") checkboxContent = /*#__PURE__*/_jsxDEV(ChartOptionCheckbox, {\n      category: chartData.categoryIncome,\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this);\n    if (chartData.mainCategory === \"expense\") checkboxContent = /*#__PURE__*/_jsxDEV(ChartOptionCheckbox, {\n      category: chartData.categoryExpense,\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this);\n    validIndex = chartData.mainType && chartData.startingDate && chartData.mainCategory && chartData.subCategory.length > 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: style.card,\n    children: [/*#__PURE__*/_jsxDEV(RiCloseCircleFill, {\n      onClick: props.chartOptionModalToggler,\n      className: style.close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      className: style.chartOption,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: style[\"chartOption__title\"],\n          children: \"Analyize By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OptionRadioMain, {\n          dispatchChartData: dispatchChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), chartData.mainType && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.test,\n          children: [/*#__PURE__*/_jsxDEV(OptionTime, {\n            classColor: chartData.mainType,\n            dispatchChartData: dispatchChartData,\n            valueStarting: chartData.startingDate,\n            valueEnding: chartData.endingDate,\n            mainType: chartData.mainType,\n            optionMainData: chartData.mainType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OptionRadioSub, {\n            classColor: chartData.mainType,\n            dispatchChartData: dispatchChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), checkboxContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !validIndex,\n        className: !validIndex ? `${style.btn}` : `${style.btn} ${style[\"btn--active\"]}`,\n        children: \"Show Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartOption, \"g31FIdWTBblI00UJcmb4Y97/vFc=\");\n\n_c = ChartOption;\nexport default ChartOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartOption\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Chart/ChartOption/ChartOption.js"],"names":["useState","useReducer","useContext","Title","Button","Card","OptionRadioMain","OptionTime","OptionRadioSub","ChartOptionCheckbox","CategoryContext","RiCloseCircleFill","style","reducer","state","action","type","mainType","value","startingDate","endingDate","timeDuration","subCategoryArr","categoryIncome","categoryExpense","mainCategory","subCategory","check","includes","filter","element","isValid","ChartOption","props","initialObj","Object","keys","chartData","dispatchChartData","submitFormHandler","e","preventDefault","setChartData","chartOptionModalToggler","validIndex","checkboxContent","length","card","close","chartOption","test","btn"],"mappings":"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","sourcesContent":["import { useState, useReducer, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport ChartOptionCheckbox from \"./OptionCheckbox/ChartOptionCheckBox\";\nimport CategoryContext from \"../../../../store/category/category--context\";\nimport { RiCloseCircleFill } from \"react-icons/ri\";\nimport style from \"./ChartOption.module.css\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\": {\n      return { ...state, mainType: action.value };\n    }\n\n    case \"STARTING_DATE\": {\n      return { ...state, startingDate: action.value };\n    }\n\n    case \"ENDING_DATE\": {\n      return { ...state, endingDate: action.value };\n    }\n\n    case \"TIME_DURATION\": {\n      return { ...state, timeDuration: action.value };\n    }\n\n    case \"MAIN_CATEGORY\": {\n      let subCategoryArr = [];\n      if (action.value === \"income\") subCategoryArr = state.categoryIncome;\n      if (action.value === \"expense\") subCategoryArr = state.categoryExpense;\n\n      return {\n        ...state,\n        mainCategory: action.value,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"SUB_CATEGORY\": {\n      let subCategoryArr;\n      // add\n      if (action.check) {\n        // first check if the items has been in the array(avoid duplicate)\n        if (!state.subCategory.includes(action.value))\n          subCategoryArr = [...state.subCategory, action.value];\n      }\n\n      // remove\n      else {\n        subCategoryArr = state.subCategory.filter(\n          (element) => element !== action.value\n        );\n      }\n\n      return {\n        ...state,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"ISVALID\": {\n      return { ...state, isValid: true };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction ChartOption(props) {\n  const { categoryExpense, categoryIncome } = useContext(CategoryContext);\n\n  const initialObj = {\n    mainType: \"\",\n    startingDate: \"\",\n    endingDate: \"\",\n    timeDuration: \"7\",\n    mainCategory: \"\",\n    subCategory: \"\",\n    isValid: false,\n    categoryExpense: Object.keys(categoryExpense),\n    categoryIncome: Object.keys(categoryIncome),\n  };\n\n  // const [optionMainData, setOptionMainData] = useState();\n  // const [optionSubData, setOptionSubData] = useState();\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n\n  function submitFormHandler(e) {\n    e.preventDefault();\n    props.setChartData(chartData);\n\n    // When chartOptionModal is open, we wanna close it after submitting\n    if (props.chartOptionModalToggler) props.chartOptionModalToggler();\n  }\n\n  let validIndex =\n    chartData.mainType &&\n    chartData.mainCategory &&\n    chartData.startingDate &&\n    chartData.endingDate;\n\n  // check box content may vary because different kind of chart\n  let checkboxContent = \"\";\n  if (chartData.mainType === \"time\") {\n    if (chartData.mainCategory === \"income\")\n      checkboxContent = (\n        <ChartOptionCheckbox\n          category={chartData.categoryIncome}\n          dispatchChartData={dispatchChartData}\n        />\n      );\n    if (chartData.mainCategory === \"expense\")\n      checkboxContent = (\n        <ChartOptionCheckbox\n          category={chartData.categoryExpense}\n          dispatchChartData={dispatchChartData}\n        />\n      );\n\n    validIndex =\n      chartData.mainType &&\n      chartData.startingDate &&\n      chartData.mainCategory &&\n      chartData.subCategory.length > 0;\n  }\n\n  return (\n    <Card className={style.card}>\n      <RiCloseCircleFill\n        onClick={props.chartOptionModalToggler}\n        className={style.close}\n      />\n      <form onSubmit={submitFormHandler} className={style.chartOption}>\n        <div>\n          <Title className={style[\"chartOption__title\"]}>Analyize By</Title>\n\n          <OptionRadioMain dispatchChartData={dispatchChartData} />\n\n          {chartData.mainType && (\n            <div className={style.test}>\n              <OptionTime\n                classColor={chartData.mainType}\n                dispatchChartData={dispatchChartData}\n                valueStarting={chartData.startingDate}\n                valueEnding={chartData.endingDate}\n                mainType={chartData.mainType}\n                optionMainData={chartData.mainType}\n              />\n              <OptionRadioSub\n                classColor={chartData.mainType}\n                dispatchChartData={dispatchChartData}\n              />\n              {checkboxContent}\n            </div>\n          )}\n        </div>\n\n        <Button\n          disabled={!validIndex}\n          className={\n            !validIndex\n              ? `${style.btn}`\n              : `${style.btn} ${style[\"btn--active\"]}`\n          }\n        >\n          Show Chart\n        </Button>\n      </form>\n    </Card>\n  );\n}\n\nexport default ChartOption;\n"]},"metadata":{},"sourceType":"module"}