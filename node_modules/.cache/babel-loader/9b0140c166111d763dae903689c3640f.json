{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/UI/DeleteCategoryModal/DeleteCategoryModal.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport Button from \"../Button/Button\";\nimport ExpenseList from \"../ExpenseList/ExpenseList\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport EditModalContext from \"../../../store/editModal/editModal--context\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport style from \"./DeleteCategoryModal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteCategoryModal(props) {\n  _s();\n\n  const {\n    expenseData,\n    removeExpenseDataByCategory\n  } = useContext(ExpenseDataContext);\n  const [, setEditModal] = useContext(EditModalContext);\n  let expenseItem; // main category\n\n  if (props.deleteMainOrSub === \"main\") {\n    expenseItem = expenseData.filter(element => element.mainCate === props.clickingCategoryForDelete);\n  } // sub category\n  else if (props.deleteMainOrSub === \"sub\") {\n    expenseItem = expenseData.filter(element => element.subCate === props.clickingCategoryForDelete);\n  }\n\n  let subtitleContent;\n  if (expenseItem.length > 0) subtitleContent = `there ${expenseItem.length === 1 ? \"is\" : \"are\"} still ${expenseItem.length} data of ${props.clickingCategoryForDelete} in your expense history`;else subtitleContent = `there's no data of ${props.clickingCategoryForDelete} in your expense history`;\n\n  function btnDeleteClickHandler(e) {\n    props.clickDeleteBtnHandler(e);\n    props.deleteModalToggler(e);\n    removeExpenseDataByCategory(props.deleteMainOrSub, props.clickingCategoryForDelete);\n    setEditModal({\n      show: true,\n      type: props.type,\n      value: \"delete\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    classModal: style.modal,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"title__container\"],\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        className: style.title,\n        children: \"are you sure to delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        className: style.title,\n        children: [props.clickingCategoryForDelete, \" category?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n      className: style.subtitle,\n      children: subtitleContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), expenseItem.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${style.description} capitalize`,\n      children: [/*#__PURE__*/_jsxDEV(AiFillWarning, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), \"all of these data will be deleted if the category is deleted\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this),\n    /*#__PURE__*/\n\n    /*\n    use inDeleteSection to hide \"more\" button and functionality\n    */\n    _jsxDEV(ExpenseList, {\n      modal: true,\n      classItem: style.list,\n      data: expenseItem,\n      inDeleteSection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"btn__container\"],\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: props.deleteModalToggler,\n        className: style.btn,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        dataID: props.deleteMainOrSub,\n        onClick: btnDeleteClickHandler,\n        className: style.btn,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteCategoryModal, \"Y2MlkIPLTT5F3QWoYAQBIsfSIZM=\");\n\n_c = DeleteCategoryModal;\nexport default DeleteCategoryModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteCategoryModal\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/UI/DeleteCategoryModal/DeleteCategoryModal.js"],"names":["useContext","Modal","Title","SubTitle","HorizontalLine","Button","ExpenseList","ExpenseDataContext","EditModalContext","AiFillWarning","style","DeleteCategoryModal","props","expenseData","removeExpenseDataByCategory","setEditModal","expenseItem","deleteMainOrSub","filter","element","mainCate","clickingCategoryForDelete","subCate","subtitleContent","length","btnDeleteClickHandler","e","clickDeleteBtnHandler","deleteModalToggler","show","type","value","modal","title","subtitle","description","list","btn"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport Button from \"../Button/Button\";\nimport ExpenseList from \"../ExpenseList/ExpenseList\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport EditModalContext from \"../../../store/editModal/editModal--context\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport style from \"./DeleteCategoryModal.module.css\";\n\nfunction DeleteCategoryModal(props) {\n  const { expenseData, removeExpenseDataByCategory } =\n    useContext(ExpenseDataContext);\n  const [, setEditModal] = useContext(EditModalContext);\n\n  let expenseItem;\n  // main category\n  if (props.deleteMainOrSub === \"main\") {\n    expenseItem = expenseData.filter(\n      (element) => element.mainCate === props.clickingCategoryForDelete\n    );\n  }\n  // sub category\n  else if (props.deleteMainOrSub === \"sub\") {\n    expenseItem = expenseData.filter(\n      (element) => element.subCate === props.clickingCategoryForDelete\n    );\n  }\n\n  let subtitleContent;\n  if (expenseItem.length > 0)\n    subtitleContent = `there ${expenseItem.length === 1 ? \"is\" : \"are\"} still ${\n      expenseItem.length\n    } data of ${props.clickingCategoryForDelete} in your expense history`;\n  else\n    subtitleContent = `there's no data of ${props.clickingCategoryForDelete} in your expense history`;\n\n  function btnDeleteClickHandler(e) {\n    props.clickDeleteBtnHandler(e);\n    props.deleteModalToggler(e);\n    removeExpenseDataByCategory(\n      props.deleteMainOrSub,\n      props.clickingCategoryForDelete\n    );\n    setEditModal({\n      show: true,\n      type: props.type,\n      value: \"delete\",\n    });\n  }\n\n  return (\n    <Modal classModal={style.modal}>\n      <div className={style[\"title__container\"]}>\n        <Title className={style.title}>are you sure to delete</Title>\n        <Title className={style.title}>\n          {props.clickingCategoryForDelete} category?\n        </Title>\n      </div>\n      <HorizontalLine />\n      <SubTitle className={style.subtitle}>{subtitleContent}</SubTitle>\n      {expenseItem.length > 0 && (\n        <p className={`${style.description} capitalize`}>\n          <AiFillWarning />\n          all of these data will be deleted if the category is deleted{\" \"}\n        </p>\n      )}\n      {\n        /*\n        use inDeleteSection to hide \"more\" button and functionality\n        */\n        <ExpenseList\n          modal={true}\n          classItem={style.list}\n          data={expenseItem}\n          inDeleteSection={true}\n        />\n      }\n      <div className={style[\"btn__container\"]}>\n        <Button\n          type=\"button\"\n          onClick={props.deleteModalToggler}\n          className={style.btn}\n        >\n          cancel\n        </Button>\n        <Button\n          dataID={props.deleteMainOrSub}\n          onClick={btnDeleteClickHandler}\n          className={style.btn}\n        >\n          delete\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default DeleteCategoryModal;\n"]},"metadata":{},"sourceType":"module"}