{"ast":null,"code":"import compareTimeWithRange from \"../CompareTime/compareTimeWithRange\";\n\nfunction createFilteredData(labels, expensData, startingDateInput, endingDateInput, type) {\n  const startingDate = labels ? new Date(labels[0]) : new Date(startingDateInput);\n  const endingDate = labels ? new Date(labels[labels.length - 1]) : new Date(endingDateInput);\n  return expensData.filter(element => compareTimeWithRange(element, startingDate, endingDate) && element.type === type).sort((elementA, elementB) => Number(new Date(elementA.time)) - Number(new Date(elementB.time)));\n}\n\nexport default createFilteredData;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateChartData/createFilteredData.js"],"names":["compareTimeWithRange","createFilteredData","labels","expensData","startingDateInput","endingDateInput","type","startingDate","Date","endingDate","length","filter","element","sort","elementA","elementB","Number","time"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,qCAAjC;;AAEA,SAASC,kBAAT,CACEC,MADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,eAJF,EAKEC,IALF,EAME;AACA,QAAMC,YAAY,GAAGL,MAAM,GACvB,IAAIM,IAAJ,CAASN,MAAM,CAAC,CAAD,CAAf,CADuB,GAEvB,IAAIM,IAAJ,CAASJ,iBAAT,CAFJ;AAGA,QAAMK,UAAU,GAAGP,MAAM,GACrB,IAAIM,IAAJ,CAASN,MAAM,CAACA,MAAM,CAACQ,MAAP,GAAgB,CAAjB,CAAf,CADqB,GAErB,IAAIF,IAAJ,CAASH,eAAT,CAFJ;AAIA,SAAOF,UAAU,CACdQ,MADI,CAEFC,OAAD,IACEZ,oBAAoB,CAACY,OAAD,EAAUL,YAAV,EAAwBE,UAAxB,CAApB,IACAG,OAAO,CAACN,IAAR,KAAiBA,IAJhB,EAMJO,IANI,CAOH,CAACC,QAAD,EAAWC,QAAX,KACEC,MAAM,CAAC,IAAIR,IAAJ,CAASM,QAAQ,CAACG,IAAlB,CAAD,CAAN,GAAkCD,MAAM,CAAC,IAAIR,IAAJ,CAASO,QAAQ,CAACE,IAAlB,CAAD,CARvC,CAAP;AAUD;;AAED,eAAehB,kBAAf","sourcesContent":["import compareTimeWithRange from \"../CompareTime/compareTimeWithRange\";\n\nfunction createFilteredData(\n  labels,\n  expensData,\n  startingDateInput,\n  endingDateInput,\n  type\n) {\n  const startingDate = labels\n    ? new Date(labels[0])\n    : new Date(startingDateInput);\n  const endingDate = labels\n    ? new Date(labels[labels.length - 1])\n    : new Date(endingDateInput);\n\n  return expensData\n    .filter(\n      (element) =>\n        compareTimeWithRange(element, startingDate, endingDate) &&\n        element.type === type\n    )\n    .sort(\n      (elementA, elementB) =>\n        Number(new Date(elementA.time)) - Number(new Date(elementB.time))\n    );\n}\n\nexport default createFilteredData;\n"]},"metadata":{},"sourceType":"module"}