{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport ExpenseDataProvider from \"./store/expenseData/ExpenseDataProvider\";\nimport EditModalProvider from \"./store/editModal/EditModalProvider\";\nimport CategoryProvider from \"./store/category/CategoryProvider\";\nimport DisplayThemeContext from \"./store/displayTheme/displayTheme--context\";\nimport SidebarHidden from \"./components/SideBar/SideBarHidden\";\nimport timeObj from \"./components/assets/timeObj/timeObj\";\nimport style from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TODAY\n} = timeObj;\n\nfunction App() {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [showNavBar, setShowNavBar] = useState(false);\n  const {\n    displayTheme\n  } = useContext(DisplayThemeContext);\n  useEffect(() => {\n    if (displayTheme === \"dark\") {\n      document.body.classList.remove(\"light\");\n      document.body.classList.add(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark\");\n      document.body.classList.add(\"light\");\n    }\n  }, [displayTheme]);\n  return /*#__PURE__*/_jsxDEV(ExpenseDataProvider, {\n    children: /*#__PURE__*/_jsxDEV(EditModalProvider, {\n      children: /*#__PURE__*/_jsxDEV(CategoryProvider, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style[\"app__container\"]} center`,\n          children: [showNavBar ? /*#__PURE__*/_jsxDEV(FiChevronsLeft, {\n            onClick: menuClickHandler,\n            className: style.arrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(FiMenu, {\n            onClick: menuClickHandler,\n            className: style.menu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n            today: TODAY,\n            setPage: setPage,\n            page: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n            today: TODAY,\n            page: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"unnX8wuhqDBGChZ8MMmmyTtsSxw=\");\n\n_c = App;\nexport default App;\n/*\n\n// var dt = new Date();\n\n// dt.getMonth() will return a month between 0 - 11\n// we add one to get to the last day of the month\n// so that when getDate() is called it will return the last day of the month\n// var month = dt.getMonth() + 1;\n\n// var year = dt.getFullYear();\n\n// this line does the magic (in collab with the lines above)\n// var daysInMonth = new Date(year, month, 0).getDate();\n\n\nvar options = { weekday: 'long'};\nconsole.log(new Intl.DateTimeFormat('en-US', options).format(Xmas95));\n// Monday\nconsole.log(new Intl.DateTimeFormat('de-DE', options).format(Xmas95));\n// Montag\n*/\n// const haha = new Date();\n// function opop(date) {\n//   date.setDate(date.getDate() + 7);\n//   console.log(date);\n// }\n// opop(haha);\n// opop(haha);\n// opop(haha);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/App.js"],"names":["useState","useEffect","useContext","MainContent","SideBar","ExpenseDataProvider","EditModalProvider","CategoryProvider","DisplayThemeContext","SidebarHidden","timeObj","style","TODAY","App","page","setPage","showNavBar","setShowNavBar","displayTheme","document","body","classList","remove","add","menuClickHandler","arrow","menu"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYF,OAAlB;;AAEA,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAmBhB,UAAU,CAACM,mBAAD,CAAnC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,YAAY,KAAK,MAArB,EAA6B;AAC3BC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,OAA/B;AACAH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,GAAxB,CAA4B,MAA5B;AACD,KAHD,MAGO;AACLJ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,MAA/B;AACAH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,GAAxB,CAA4B,OAA5B;AACD;AACF,GARQ,EAQN,CAACL,YAAD,CARM,CAAT;AAUA,sBACE,QAAC,mBAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,6BACE,QAAC,gBAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,GAAEP,KAAK,CAAC,gBAAD,CAAmB,SAA3C;AAAA,qBACGK,UAAU,gBACT,QAAC,cAAD;AACE,YAAA,OAAO,EAAEQ,gBADX;AAEE,YAAA,SAAS,EAAEb,KAAK,CAACc;AAFnB;AAAA;AAAA;AAAA;AAAA,kBADS,gBAMT,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAED,gBAAjB;AAAmC,YAAA,SAAS,EAAEb,KAAK,CAACe;AAApD;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAEd,KAAhB;AAAuB,YAAA,OAAO,EAAEG,OAAhC;AAAyC,YAAA,IAAI,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE,QAAC,WAAD;AAAa,YAAA,KAAK,EAAEF,KAApB;AAA2B,YAAA,IAAI,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GApCQD,G;;KAAAA,G;AAsCT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport ExpenseDataProvider from \"./store/expenseData/ExpenseDataProvider\";\nimport EditModalProvider from \"./store/editModal/EditModalProvider\";\nimport CategoryProvider from \"./store/category/CategoryProvider\";\nimport DisplayThemeContext from \"./store/displayTheme/displayTheme--context\";\nimport SidebarHidden from \"./components/SideBar/SideBarHidden\";\nimport timeObj from \"./components/assets/timeObj/timeObj\";\nimport style from \"./App.module.css\";\n\nconst { TODAY } = timeObj;\n\nfunction App() {\n  const [page, setPage] = useState(0);\n  const [showNavBar, setShowNavBar] = useState(false);\n  const { displayTheme } = useContext(DisplayThemeContext);\n\n  useEffect(() => {\n    if (displayTheme === \"dark\") {\n      document.body.classList.remove(\"light\");\n      document.body.classList.add(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark\");\n      document.body.classList.add(\"light\");\n    }\n  }, [displayTheme]);\n\n  return (\n    <ExpenseDataProvider>\n      <EditModalProvider>\n        <CategoryProvider>\n          <div className={`${style[\"app__container\"]} center`}>\n            {showNavBar ? (\n              <FiChevronsLeft\n                onClick={menuClickHandler}\n                className={style.arrow}\n              />\n            ) : (\n              <FiMenu onClick={menuClickHandler} className={style.menu} />\n            )}\n\n            <SideBar today={TODAY} setPage={setPage} page={page} />\n            <MainContent today={TODAY} page={page} />\n          </div>\n        </CategoryProvider>\n      </EditModalProvider>\n    </ExpenseDataProvider>\n  );\n}\n\nexport default App;\n\n/*\n\n// var dt = new Date();\n\n// dt.getMonth() will return a month between 0 - 11\n// we add one to get to the last day of the month\n// so that when getDate() is called it will return the last day of the month\n// var month = dt.getMonth() + 1;\n\n// var year = dt.getFullYear();\n\n// this line does the magic (in collab with the lines above)\n// var daysInMonth = new Date(year, month, 0).getDate();\n\n\nvar options = { weekday: 'long'};\nconsole.log(new Intl.DateTimeFormat('en-US', options).format(Xmas95));\n// Monday\nconsole.log(new Intl.DateTimeFormat('de-DE', options).format(Xmas95));\n// Montag\n*/\n\n// const haha = new Date();\n\n// function opop(date) {\n//   date.setDate(date.getDate() + 7);\n//   console.log(date);\n// }\n\n// opop(haha);\n// opop(haha);\n// opop(haha);\n"]},"metadata":{},"sourceType":"module"}