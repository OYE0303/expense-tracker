{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext, useReducer } from \"react\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LIST\":\n      {\n        const dayData = new Date(action.value);\n        return { ...state,\n          date: action.value\n        };\n      }\n\n    case \"COLOR\":\n      {\n        return { ...state,\n          element: action.value\n        };\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction useDailyExpenseList(date) {\n  _s();\n\n  //   const [dayState, setDayState] = useState(date);\n  const [dayState, dayStateDispatch] = useReducer(reducer, {\n    date: date,\n    element: \"\"\n  });\n  const {\n    EXPENSE_DATA\n  } = useContext(ExpenseDataContext);\n  const dayData = new Date(dayState);\n  const day = dayData.getDate();\n  const month = dayData.getMonth() + 1;\n  const year = dayData.getFullYear();\n  const newDayData = EXPENSE_DATA.filter(element => Number(element.time.slice(0, 4)) === year && Number(element.time.slice(5, 7)) === month && Number(element.time.slice(8)) === day);\n  return [dayState, dayStateDispatch];\n}\n\n_s(useDailyExpenseList, \"FMlEbGnyxiery7VcfHjzhXl6MsA=\");\n\nexport default useDailyExpenseList;","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/Others/Custom/useDailyExpenseList.js"],"names":["useState","useContext","useReducer","ExpenseDataContext","reducer","state","action","type","dayData","Date","value","date","element","useDailyExpenseList","dayState","dayStateDispatch","EXPENSE_DATA","day","getDate","month","getMonth","year","getFullYear","newDayData","filter","Number","time","slice"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACX,cAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASH,MAAM,CAACI,KAAhB,CAAhB;AACA,eAAO,EAAE,GAAGL,KAAL;AAAYM,UAAAA,IAAI,EAAEL,MAAM,CAACI;AAAzB,SAAP;AACD;;AAED,SAAK,OAAL;AAAc;AACZ,eAAO,EAAE,GAAGL,KAAL;AAAYO,UAAAA,OAAO,EAAEN,MAAM,CAACI;AAA5B,SAAP;AACD;;AAED;AACE;AAXJ;AAaD;;AAED,SAASG,mBAAT,CAA6BF,IAA7B,EAAmC;AAAA;;AACjC;AACA,QAAM,CAACG,QAAD,EAAWC,gBAAX,IAA+Bb,UAAU,CAACE,OAAD,EAAU;AACvDO,IAAAA,IAAI,EAAEA,IADiD;AAEvDC,IAAAA,OAAO,EAAE;AAF8C,GAAV,CAA/C;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAmBf,UAAU,CAACE,kBAAD,CAAnC;AAEA,QAAMK,OAAO,GAAG,IAAIC,IAAJ,CAASK,QAAT,CAAhB;AAEA,QAAMG,GAAG,GAAGT,OAAO,CAACU,OAAR,EAAZ;AACA,QAAMC,KAAK,GAAGX,OAAO,CAACY,QAAR,KAAqB,CAAnC;AACA,QAAMC,IAAI,GAAGb,OAAO,CAACc,WAAR,EAAb;AAEA,QAAMC,UAAU,GAAGP,YAAY,CAACQ,MAAb,CAChBZ,OAAD,IACEa,MAAM,CAACb,OAAO,CAACc,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCN,IAArC,IACAI,MAAM,CAACb,OAAO,CAACc,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCR,KADrC,IAEAM,MAAM,CAACb,OAAO,CAACc,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAN,KAAkCV,GAJnB,CAAnB;AAOA,SAAO,CAACH,QAAD,EAAWC,gBAAX,CAAP;AACD;;GAtBQF,mB;;AAwBT,eAAeA,mBAAf","sourcesContent":["import { useState, useContext, useReducer } from \"react\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LIST\": {\n      const dayData = new Date(action.value);\n      return { ...state, date: action.value };\n    }\n\n    case \"COLOR\": {\n      return { ...state, element: action.value };\n    }\n\n    default:\n      break;\n  }\n}\n\nfunction useDailyExpenseList(date) {\n  //   const [dayState, setDayState] = useState(date);\n  const [dayState, dayStateDispatch] = useReducer(reducer, {\n    date: date,\n    element: \"\",\n  });\n  const { EXPENSE_DATA } = useContext(ExpenseDataContext);\n\n  const dayData = new Date(dayState);\n\n  const day = dayData.getDate();\n  const month = dayData.getMonth() + 1;\n  const year = dayData.getFullYear();\n\n  const newDayData = EXPENSE_DATA.filter(\n    (element) =>\n      Number(element.time.slice(0, 4)) === year &&\n      Number(element.time.slice(5, 7)) === month &&\n      Number(element.time.slice(8)) === day\n  );\n\n  return [dayState, dayStateDispatch];\n}\n\nexport default useDailyExpenseList;\n"]},"metadata":{},"sourceType":"module"}