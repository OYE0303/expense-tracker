{"ast":null,"code":"const dateOptions = {\n  weekday: \"short\"\n};\n\nfunction createWeeklyData(currentDate) {\n  const dateArr = [];\n\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(currentDate.setDate(currentDate.getDate() - currentDate.getDay() + i));\n    dateArr.push({\n      weekDay: new Intl.DateTimeFormat(\"en-US\", dateOptions).format(date).toUpperCase(),\n      monthDay: date.getDate(),\n      month: date.getMonth(),\n      year: date.getFullYear(),\n      dateObj: date,\n      string: `${this.year}-${this.month + 1 >= 10 ? this.month + 1 : \"0\" + this.month + 1}-${this.monthDay >= 10 ? this.monthDay : \"0\" + this.monthDay} `\n    });\n  }\n\n  return dateArr;\n}\n\nexport default createWeeklyData;","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/Others/createWeeklyData.js"],"names":["dateOptions","weekday","createWeeklyData","currentDate","dateArr","i","date","Date","setDate","getDate","getDay","push","weekDay","Intl","DateTimeFormat","format","toUpperCase","monthDay","month","getMonth","year","getFullYear","dateObj","string"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE;AADS,CAApB;;AAIA,SAASC,gBAAT,CAA0BC,WAA1B,EAAuC;AACrC,QAAMC,OAAO,GAAG,EAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CACXJ,WAAW,CAACK,OAAZ,CAAoBL,WAAW,CAACM,OAAZ,KAAwBN,WAAW,CAACO,MAAZ,EAAxB,GAA+CL,CAAnE,CADW,CAAb;AAIAD,IAAAA,OAAO,CAACO,IAAR,CAAa;AACXC,MAAAA,OAAO,EAAE,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCd,WAAjC,EACNe,MADM,CACCT,IADD,EAENU,WAFM,EADE;AAIXC,MAAAA,QAAQ,EAAEX,IAAI,CAACG,OAAL,EAJC;AAKXS,MAAAA,KAAK,EAAEZ,IAAI,CAACa,QAAL,EALI;AAMXC,MAAAA,IAAI,EAAEd,IAAI,CAACe,WAAL,EANK;AAOXC,MAAAA,OAAO,EAAEhB,IAPE;AAQXiB,MAAAA,MAAM,EAAG,GAAE,KAAKH,IAAK,IACnB,KAAKF,KAAL,GAAa,CAAb,IAAkB,EAAlB,GAAuB,KAAKA,KAAL,GAAa,CAApC,GAAwC,MAAM,KAAKA,KAAX,GAAmB,CAC5D,IAAG,KAAKD,QAAL,IAAiB,EAAjB,GAAsB,KAAKA,QAA3B,GAAsC,MAAM,KAAKA,QAAS;AAVnD,KAAb;AAYD;;AAED,SAAOb,OAAP;AACD;;AAED,eAAeF,gBAAf","sourcesContent":["const dateOptions = {\n  weekday: \"short\",\n};\n\nfunction createWeeklyData(currentDate) {\n  const dateArr = [];\n\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(\n      currentDate.setDate(currentDate.getDate() - currentDate.getDay() + i)\n    );\n\n    dateArr.push({\n      weekDay: new Intl.DateTimeFormat(\"en-US\", dateOptions)\n        .format(date)\n        .toUpperCase(),\n      monthDay: date.getDate(),\n      month: date.getMonth(),\n      year: date.getFullYear(),\n      dateObj: date,\n      string: `${this.year}-${\n        this.month + 1 >= 10 ? this.month + 1 : \"0\" + this.month + 1\n      }-${this.monthDay >= 10 ? this.monthDay : \"0\" + this.monthDay} `,\n    });\n  }\n\n  return dateArr;\n}\n\nexport default createWeeklyData;\n"]},"metadata":{},"sourceType":"module"}