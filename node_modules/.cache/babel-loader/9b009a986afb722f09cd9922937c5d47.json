{"ast":null,"code":"function aaaaa() {\n  const date = new Date();\n  const res = []; // last day of current month\n  // 0 gives us the last day of previous month\n  // + 1 makes to be last day fo current month\n  // get date gives us the number type\n\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  const prevLastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate(); // last day of previous month\n  // last day of the week (current month)\n\n  const lastDayIndex = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDay(); // first day of the week (current month)\n\n  const firstDayIndex = date.getDay();\n\n  for (let i = firstDayIndex; i > -1; i--) {\n    res.push(prevLastDay - firstDayIndex);\n  }\n\n  console.log(res);\n}\n\nexport default aaaaa;","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/Monthly/useCalendar.js"],"names":["aaaaa","date","Date","res","lastDay","getFullYear","getMonth","getDate","prevLastDay","lastDayIndex","getDay","firstDayIndex","i","push","console","log"],"mappings":"AAAA,SAASA,KAAT,GAAiB;AACf,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,QAAMC,GAAG,GAAG,EAAZ,CAHe,CAKf;AACA;AACA;AACA;;AACA,QAAMC,OAAO,GAAG,IAAIF,IAAJ,CACdD,IAAI,CAACI,WAAL,EADc,EAEdJ,IAAI,CAACK,QAAL,KAAkB,CAFJ,EAGd,CAHc,EAIdC,OAJc,EAAhB;AAMA,QAAMC,WAAW,GAAG,IAAIN,IAAJ,CAClBD,IAAI,CAACI,WAAL,EADkB,EAElBJ,IAAI,CAACK,QAAL,EAFkB,EAGlB,CAHkB,EAIlBC,OAJkB,EAApB,CAfe,CAmBF;AAEb;;AACA,QAAME,YAAY,GAAG,IAAIP,IAAJ,CACnBD,IAAI,CAACI,WAAL,EADmB,EAEnBJ,IAAI,CAACK,QAAL,KAAkB,CAFC,EAGnB,CAHmB,EAInBI,MAJmB,EAArB,CAtBe,CA4Bf;;AACA,QAAMC,aAAa,GAAGV,IAAI,CAACS,MAAL,EAAtB;;AAEA,OAAK,IAAIE,CAAC,GAAGD,aAAb,EAA4BC,CAAC,GAAG,CAAC,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACvCT,IAAAA,GAAG,CAACU,IAAJ,CAASL,WAAW,GAAGG,aAAvB;AACD;;AAEDG,EAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACD;;AAED,eAAeH,KAAf","sourcesContent":["function aaaaa() {\n  const date = new Date();\n\n  const res = [];\n\n  // last day of current month\n  // 0 gives us the last day of previous month\n  // + 1 makes to be last day fo current month\n  // get date gives us the number type\n  const lastDay = new Date(\n    date.getFullYear(),\n    date.getMonth() + 1,\n    0\n  ).getDate();\n\n  const prevLastDay = new Date(\n    date.getFullYear(),\n    date.getMonth(),\n    0\n  ).getDate(); // last day of previous month\n\n  // last day of the week (current month)\n  const lastDayIndex = new Date(\n    date.getFullYear(),\n    date.getMonth() + 1,\n    0\n  ).getDay();\n\n  // first day of the week (current month)\n  const firstDayIndex = date.getDay();\n\n  for (let i = firstDayIndex; i > -1; i--) {\n    res.push(prevLastDay - firstDayIndex);\n  }\n\n  console.log(res);\n}\n\nexport default aaaaa;\n"]},"metadata":{},"sourceType":"module"}