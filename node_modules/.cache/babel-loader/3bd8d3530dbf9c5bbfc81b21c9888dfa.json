{"ast":null,"code":"function FormatMoney(price) {\n  if (Math.abs(price) > 1000000) {\n    const newPrice = price / 1000000;\n    const formatedPrice = Number.isInteger(newPrice) ? newPrice : newPrice.toFixed(2);\n    return `${formatedPrice}M`;\n  } else if (Math.abs(price) > 1000000000) {\n    const newPrice = price / 1000000000;\n    const formatedPrice = Number.isInteger(newPrice) ? newPrice : newPrice.toFixed(2);\n    return `${(price / 1000000000).toFixed(2)}B`;\n  } else if (price > 1000) {\n    const priceStr = String(price);\n    let formatedPrice = \"\";\n    let commaIndex = 1;\n\n    for (let i = priceStr.length - 1; i >= 0; i--) {\n      if (commaIndex % 4 === 0) {\n        formatedPrice += \",\";\n        i++;\n        commaIndex = 1;\n        continue;\n      } else formatedPrice += priceStr[i];\n\n      commaIndex++;\n    }\n\n    return formatedPrice.split(\"\").reverse().join(\"\");\n  }\n}\n\n_c = FormatMoney;\nexport default FormatMoney;\n/*\n1M = 1Million = 1,000,000 = 1百万. 1B = 1Billion = 1,000,000,000 = 10亿.\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"FormatMoney\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/FormatMoney/FormatMoney.js"],"names":["FormatMoney","price","Math","abs","newPrice","formatedPrice","Number","isInteger","toFixed","priceStr","String","commaIndex","i","length","split","reverse","join"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,IAAI,CAACC,GAAL,CAASF,KAAT,IAAkB,OAAtB,EAA+B;AAC7B,UAAMG,QAAQ,GAAGH,KAAK,GAAG,OAAzB;AACA,UAAMI,aAAa,GAAGC,MAAM,CAACC,SAAP,CAAiBH,QAAjB,IAClBA,QADkB,GAElBA,QAAQ,CAACI,OAAT,CAAiB,CAAjB,CAFJ;AAIA,WAAQ,GAAEH,aAAc,GAAxB;AACD,GAPD,MAOO,IAAIH,IAAI,CAACC,GAAL,CAASF,KAAT,IAAkB,UAAtB,EAAkC;AACvC,UAAMG,QAAQ,GAAGH,KAAK,GAAG,UAAzB;AACA,UAAMI,aAAa,GAAGC,MAAM,CAACC,SAAP,CAAiBH,QAAjB,IAClBA,QADkB,GAElBA,QAAQ,CAACI,OAAT,CAAiB,CAAjB,CAFJ;AAGA,WAAQ,GAAE,CAACP,KAAK,GAAG,UAAT,EAAqBO,OAArB,CAA6B,CAA7B,CAAgC,GAA1C;AACD,GANM,MAMA,IAAIP,KAAK,GAAG,IAAZ,EAAkB;AACvB,UAAMQ,QAAQ,GAAGC,MAAM,CAACT,KAAD,CAAvB;AACA,QAAII,aAAa,GAAG,EAApB;AACA,QAAIM,UAAU,GAAG,CAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAGH,QAAQ,CAACI,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7C,UAAID,UAAU,GAAG,CAAb,KAAmB,CAAvB,EAA0B;AACxBN,QAAAA,aAAa,IAAI,GAAjB;AACAO,QAAAA,CAAC;AACDD,QAAAA,UAAU,GAAG,CAAb;AACA;AACD,OALD,MAKON,aAAa,IAAII,QAAQ,CAACG,CAAD,CAAzB;;AAEPD,MAAAA,UAAU;AACX;;AAED,WAAON,aAAa,CAACS,KAAd,CAAoB,EAApB,EAAwBC,OAAxB,GAAkCC,IAAlC,CAAuC,EAAvC,CAAP;AACD;AACF;;KAhCQhB,W;AAkCT,eAAeA,WAAf;AAEA;AACA;AACA","sourcesContent":["function FormatMoney(price) {\n  if (Math.abs(price) > 1000000) {\n    const newPrice = price / 1000000;\n    const formatedPrice = Number.isInteger(newPrice)\n      ? newPrice\n      : newPrice.toFixed(2);\n\n    return `${formatedPrice}M`;\n  } else if (Math.abs(price) > 1000000000) {\n    const newPrice = price / 1000000000;\n    const formatedPrice = Number.isInteger(newPrice)\n      ? newPrice\n      : newPrice.toFixed(2);\n    return `${(price / 1000000000).toFixed(2)}B`;\n  } else if (price > 1000) {\n    const priceStr = String(price);\n    let formatedPrice = \"\";\n    let commaIndex = 1;\n\n    for (let i = priceStr.length - 1; i >= 0; i--) {\n      if (commaIndex % 4 === 0) {\n        formatedPrice += \",\";\n        i++;\n        commaIndex = 1;\n        continue;\n      } else formatedPrice += priceStr[i];\n\n      commaIndex++;\n    }\n\n    return formatedPrice.split(\"\").reverse().join(\"\");\n  }\n}\n\nexport default FormatMoney;\n\n/*\n1M = 1Million = 1,000,000 = 1百万. 1B = 1Billion = 1,000,000,000 = 10亿.\n*/\n"]},"metadata":{},"sourceType":"module"}