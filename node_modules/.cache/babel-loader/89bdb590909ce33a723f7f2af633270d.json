{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/Monthly/Monthly.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext, useReducer } from \"react\";\nimport style from \"./Monthly.module.css\";\nimport Button from \"../../../UI/Button\";\nimport createCalendar from \"./createCalendar\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport ExpenseListModal from \"../../../UI/ExpenseListModal/ExpenseListModal\";\nimport AddDataForm from \"../../../UI/AddDataForm/AddDateForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateOptObj = {\n  month: \"long\"\n};\nconst date = new Date();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"month\":\n      {\n        return { ...state,\n          month: action.value\n        };\n      }\n\n    case \"year\":\n      {\n        return { ...state,\n          year: action.value\n        };\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction CalendarMonthly(props) {\n  _s();\n\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const [calendarState, calendarStateDispatch] = useReducer(reducer, {\n    calendar: createCalendar(date, showModalHandler, expenseData),\n    month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n    year: date.getFullYear(),\n    animationMonth: false,\n    animationYear: false\n  }); // const [calendarState, setcalendarState] = useState(\n  //   createCalendar(date, showModalHandler, expenseData)\n  // );\n  // const [month, setMonth] = useState(\n  //   new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date)\n  // );\n  // const [year, SetYear] = useState(date.getFullYear());\n  // const [animationMonth, setAnimationMonth] = useState(false);\n  // const [animationYear, setAnimationMonthYear] = useState(false);\n\n  const [expenseListModal, setExpenseListModal] = useState(false);\n  const [expenseListCalendar, setExpenseListCalendar] = useState([]);\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: \"\"\n  }); // animation for month\n\n  useEffect(() => {\n    // if (index === 0) {\n    //   index++;\n    //   return;\n    // }\n    calendarStateDispatch({\n      type: \"month\",\n      value: true\n    });\n    const time = setTimeout(() => {\n      calendarStateDispatch({\n        type: \"month\",\n        value: false\n      });\n    }, 300);\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [calendarState.month]); // animation for year\n\n  useEffect(() => {\n    // if (index1 === 0) {\n    //   index1++;\n    //   return;\n    // }\n    calendarStateDispatch({\n      type: \"year\",\n      value: true\n    });\n    const time = setTimeout(() => {\n      calendarStateDispatch({\n        type: \"year\",\n        value: false\n      });\n    }, 300);\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [calendarState.year]); // useEffect(() => {\n  //   const calendar = createCalendar(date, showModalHandler, expenseData);\n  //   setcalendarState(calendar);\n  // }, [expenseData]);\n\n  function incrementMonth() {\n    date.setMonth(date.getMonth() + 1);\n    const calendar = createCalendar(date, showModalHandler, expenseData); // setcalendarState(calendar);\n\n    calendarStateDispatch({\n      type: \"increment\",\n      value: {\n        calendar,\n        month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n        year: date.getFullYear()\n      }\n    }); // setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    // SetYear(date.getFullYear());\n  }\n\n  function decreaseMonth() {\n    date.setMonth(date.getMonth() - 1);\n    const calendar = createCalendar(date, showModalHandler, expenseData);\n    calendarStateDispatch({\n      type: \"decrease\",\n      value: {\n        calendar,\n        month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n        year: date.getFullYear()\n      }\n    }); // setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    // setcalendarState(calendar);\n    // SetYear(date.getFullYear());\n  }\n\n  function showModalHandler(e) {\n    const rawData = e.target.dataset.id;\n    if (!rawData) return;\n    const data = `${rawData.slice(0, 4)}-${rawData.slice(4, 6)}-${rawData.slice(6)}`;\n    const allDataArr = expenseData.filter(element => {\n      return element.time === data;\n    });\n    setExpenseListModal(true);\n    if (allDataArr.length === 0) setExpenseListCalendar(data);else setExpenseListCalendar(allDataArr);\n  }\n\n  function closeModalHandler() {\n    setExpenseListModal(false);\n  }\n\n  function showAddDataFormHandler(time) {\n    setAddDataFormModal({\n      show: true,\n      date: time\n    });\n  }\n\n  function closeAddDataFormHandler() {\n    setAddDataFormModal({\n      show: false,\n      date: \"\"\n    });\n  }\n\n  console.log(calendarState.month);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.monthly,\n    children: [expenseListModal && /*#__PURE__*/_jsxDEV(ExpenseListModal, {\n      expenseListCalendar: expenseListCalendar,\n      expenseListCalendar: expenseListCalendar,\n      setExpenseListCalendar: setExpenseListCalendar,\n      closeModalHandler: closeModalHandler,\n      showAddDataFormHandler: showAddDataFormHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), addDataFormModal.show && /*#__PURE__*/_jsxDEV(AddDataForm, {\n      date: addDataFormModal.date,\n      closeAddDataFormHandler: closeAddDataFormHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"monthly__container\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__month\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: style.btn,\n          onClick: decreaseMonth,\n          type: \"button\",\n          children: `${\"<\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style[\"monthly__title\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: calendarState.animationMonth ? `${style.bump}` : \"\",\n            children: calendarState.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: calendarState.animationYear ? `${style.bump}` : \"\",\n            children: calendarState.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: style.btn,\n          onClick: incrementMonth,\n          type: \"button\",\n          children: `${\">\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__week\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__days\"],\n        children: calendarState.calendar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarMonthly, \"2IB7eDgH79ftHH6e4t6KYhk7tQc=\");\n\n_c = CalendarMonthly;\nexport default CalendarMonthly; // const test = new Date();\n// test.setFullYear(date.getFullYear() - 1);\n// test.setMonth(11);\n// // test.setMonth(0);\n// console.log(test);\n// const initialObj = {\n//   calendar: createCalendar(date),\n//   month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n//   year: date.getFullYear(),\n// };\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case \"INCREMENT\": {\n//       //   if (state.month === \"December\") {\n//       //     date.setFullYear(date.getFullYear() + 1);\n//       //     date.setMonth(0);\n//       //   } else {\n//       date.setMonth(date.getMonth() + 1);\n//       //   }\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       //   console.log(month);\n//       const calendar = [];\n//       const year = date.getFullYear();\n//       //   console.log(month, year);\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n//     case \"DECREMENT\": {\n//       if (state.month === \"January\") {\n//         date.setFullYear(date.getFullYear() - 1);\n//         date.setMonth(11);\n//       } else date.setMonth(date.getMonth() - 1);\n//       const calendar = createCalendar(date);\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       const year = date.getFullYear();\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarMonthly\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/Monthly/Monthly.js"],"names":["useState","useEffect","useContext","useReducer","style","Button","createCalendar","ExpenseDataContext","ExpenseListModal","AddDataForm","dateOptObj","month","date","Date","reducer","state","action","type","value","year","CalendarMonthly","props","expenseData","calendarState","calendarStateDispatch","calendar","showModalHandler","Intl","DateTimeFormat","format","getFullYear","animationMonth","animationYear","expenseListModal","setExpenseListModal","expenseListCalendar","setExpenseListCalendar","addDataFormModal","setAddDataFormModal","show","time","setTimeout","cleanUp","clearTimeout","incrementMonth","setMonth","getMonth","decreaseMonth","e","rawData","target","dataset","id","data","slice","allDataArr","filter","element","length","closeModalHandler","showAddDataFormHandler","closeAddDataFormHandler","console","log","monthly","btn","bump"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext, useReducer } from \"react\";\nimport style from \"./Monthly.module.css\";\nimport Button from \"../../../UI/Button\";\nimport createCalendar from \"./createCalendar\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport ExpenseListModal from \"../../../UI/ExpenseListModal/ExpenseListModal\";\nimport AddDataForm from \"../../../UI/AddDataForm/AddDateForm\";\n\nconst dateOptObj = { month: \"long\" };\n\nconst date = new Date();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"month\": {\n      return { ...state, month: action.value };\n    }\n\n    case \"year\": {\n      return { ...state, year: action.value };\n    }\n\n    default:\n      break;\n  }\n}\n\nfunction CalendarMonthly(props) {\n  const { expenseData } = useContext(ExpenseDataContext);\n  const [calendarState, calendarStateDispatch] = useReducer(reducer, {\n    calendar: createCalendar(date, showModalHandler, expenseData),\n    month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n    year: date.getFullYear(),\n    animationMonth: false,\n    animationYear: false,\n  });\n\n  // const [calendarState, setcalendarState] = useState(\n  //   createCalendar(date, showModalHandler, expenseData)\n  // );\n  // const [month, setMonth] = useState(\n  //   new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date)\n  // );\n  // const [year, SetYear] = useState(date.getFullYear());\n  // const [animationMonth, setAnimationMonth] = useState(false);\n  // const [animationYear, setAnimationMonthYear] = useState(false);\n\n  const [expenseListModal, setExpenseListModal] = useState(false);\n  const [expenseListCalendar, setExpenseListCalendar] = useState([]);\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: \"\",\n  });\n\n  // animation for month\n  useEffect(() => {\n    // if (index === 0) {\n    //   index++;\n    //   return;\n    // }\n\n    calendarStateDispatch({ type: \"month\", value: true });\n\n    const time = setTimeout(() => {\n      calendarStateDispatch({ type: \"month\", value: false });\n    }, 300);\n\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [calendarState.month]);\n\n  // animation for year\n  useEffect(() => {\n    // if (index1 === 0) {\n    //   index1++;\n    //   return;\n    // }\n\n    calendarStateDispatch({ type: \"year\", value: true });\n\n    const time = setTimeout(() => {\n      calendarStateDispatch({ type: \"year\", value: false });\n    }, 300);\n\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [calendarState.year]);\n\n  // useEffect(() => {\n  //   const calendar = createCalendar(date, showModalHandler, expenseData);\n\n  //   setcalendarState(calendar);\n  // }, [expenseData]);\n\n  function incrementMonth() {\n    date.setMonth(date.getMonth() + 1);\n    const calendar = createCalendar(date, showModalHandler, expenseData);\n\n    // setcalendarState(calendar);\n    calendarStateDispatch({\n      type: \"increment\",\n      value: {\n        calendar,\n        month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n        year: date.getFullYear(),\n      },\n    });\n    // setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    // SetYear(date.getFullYear());\n  }\n\n  function decreaseMonth() {\n    date.setMonth(date.getMonth() - 1);\n    const calendar = createCalendar(date, showModalHandler, expenseData);\n\n    calendarStateDispatch({\n      type: \"decrease\",\n      value: {\n        calendar,\n        month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n        year: date.getFullYear(),\n      },\n    });\n\n    // setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    // setcalendarState(calendar);\n    // SetYear(date.getFullYear());\n  }\n\n  function showModalHandler(e) {\n    const rawData = e.target.dataset.id;\n\n    if (!rawData) return;\n    const data = `${rawData.slice(0, 4)}-${rawData.slice(4, 6)}-${rawData.slice(\n      6\n    )}`;\n\n    const allDataArr = expenseData.filter((element) => {\n      return element.time === data;\n    });\n\n    setExpenseListModal(true);\n    if (allDataArr.length === 0) setExpenseListCalendar(data);\n    else setExpenseListCalendar(allDataArr);\n  }\n\n  function closeModalHandler() {\n    setExpenseListModal(false);\n  }\n\n  function showAddDataFormHandler(time) {\n    setAddDataFormModal({ show: true, date: time });\n  }\n\n  function closeAddDataFormHandler() {\n    setAddDataFormModal({ show: false, date: \"\" });\n  }\n\n  console.log(calendarState.month);\n\n  return (\n    <div className={style.monthly}>\n      {expenseListModal && (\n        <ExpenseListModal\n          expenseListCalendar={expenseListCalendar}\n          expenseListCalendar={expenseListCalendar}\n          setExpenseListCalendar={setExpenseListCalendar}\n          closeModalHandler={closeModalHandler}\n          showAddDataFormHandler={showAddDataFormHandler}\n        />\n      )}\n      {addDataFormModal.show && (\n        <AddDataForm\n          date={addDataFormModal.date}\n          closeAddDataFormHandler={closeAddDataFormHandler}\n        />\n      )}\n      <div className={style[\"monthly__container\"]}>\n        <div className={style[\"monthly__month\"]}>\n          <Button\n            className={style.btn}\n            onClick={decreaseMonth}\n            type=\"button\"\n          >{`${\"<\"}`}</Button>\n          <div className={style[\"monthly__title\"]}>\n            <h6 className={calendarState.animationMonth ? `${style.bump}` : \"\"}>\n              {calendarState.month}\n            </h6>\n            <h6 className={calendarState.animationYear ? `${style.bump}` : \"\"}>\n              {calendarState.year}\n            </h6>\n          </div>\n          <Button\n            className={style.btn}\n            onClick={incrementMonth}\n            type=\"button\"\n          >{`${\">\"}`}</Button>\n        </div>\n        <div className={style[\"monthly__week\"]}>\n          <div>Sun</div>\n          <div>Mon</div>\n          <div>Tue</div>\n          <div>Wed</div>\n          <div>Thu</div>\n          <div>Fri</div>\n          <div>Sat</div>\n        </div>\n        <div className={style[\"monthly__days\"]}>{calendarState.calendar}</div>\n      </div>\n    </div>\n  );\n}\nexport default CalendarMonthly;\n\n// const test = new Date();\n// test.setFullYear(date.getFullYear() - 1);\n// test.setMonth(11);\n// // test.setMonth(0);\n\n// console.log(test);\n\n// const initialObj = {\n//   calendar: createCalendar(date),\n//   month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n//   year: date.getFullYear(),\n// };\n\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case \"INCREMENT\": {\n//       //   if (state.month === \"December\") {\n//       //     date.setFullYear(date.getFullYear() + 1);\n//       //     date.setMonth(0);\n//       //   } else {\n//       date.setMonth(date.getMonth() + 1);\n//       //   }\n\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       //   console.log(month);\n//       const calendar = [];\n//       const year = date.getFullYear();\n\n//       //   console.log(month, year);\n\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n\n//     case \"DECREMENT\": {\n//       if (state.month === \"January\") {\n//         date.setFullYear(date.getFullYear() - 1);\n//         date.setMonth(11);\n//       } else date.setMonth(date.getMonth() - 1);\n\n//       const calendar = createCalendar(date);\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       const year = date.getFullYear();\n\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}