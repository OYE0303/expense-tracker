{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/store/searchListData/SearchListDataProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useContext } from \"react\";\nimport ExpenseDataContext from \"../expenseData/expenseData--context\";\nimport SearchListDataContext from \"./searchListData--context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\nlet orginalObj;\nconst checkboxTime = [{\n  category: \"time\",\n  text: \"today\",\n  value: 0,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"yesterady\",\n  value: 1,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"three days ago\",\n  value: 3,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a week ago\",\n  value: 7,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a month ago\",\n  value: 30,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"three months ago\",\n  value: 90,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a year ago\",\n  value: 100,\n  checked: false\n}, {\n  category: \"price\",\n  text: \"0 ~ $100\",\n  value: [0, 100],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$100 ~ $300\",\n  value: [100, 300],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$300 ~ $500\",\n  value: [300, 500],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$500 ~ $1000\",\n  value: [500, 1000],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"above $1000\",\n  value: [1000, Infinity],\n  checked: false\n}];\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"TIME\":\n      {\n        return reducerTime(state, action);\n      }\n\n    case \"PRICE\":\n      {\n        return reducerPrice(state, action);\n      }\n\n    case \"CATEGORY\":\n      {\n        return reducerCategory(state, action);\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction SearchListDataProvider(props) {\n  _s();\n\n  const expenseDataCtx = useContext(ExpenseDataContext);\n  const [expenseDataState, dispatchExpenseDataAction] = useReducer(reducer, {\n    checkCount: 0,\n    expenseData: expenseDataCtx.EXPENSE_DATA\n  });\n  orginalObj = expenseDataCtx.EXPENSE_DATA;\n  const SearchListDataContextInitialObject = {\n    expenseDataState,\n    dispatchExpenseDataAction\n  };\n  return /*#__PURE__*/_jsxDEV(SearchListDataContext.Provider, {\n    value: SearchListDataContextInitialObject,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchListDataProvider, \"BqGziLOCFkXFKAF32Twowbgq2AQ=\");\n\n_c = SearchListDataProvider;\nexport default SearchListDataProvider;\n\nfunction reducerCategory(state, action) {\n  let newState;\n  let count = state.checkCount;\n\n  if (action.checked) {\n    if (count === 0) {\n      count++;\n      newState = state.expenseData.filter(element => element.mainCate === action.value);\n    } else {\n      count++;\n      const concatArr = orginalObj.filter(element => element.mainCate === action.value);\n      newState = state.expenseData.concat(concatArr);\n    }\n  } else {\n    count--;\n    if (count === 0) newState = orginalObj;else {\n      newState = state.expenseData.filter(element => element.mainCate !== action.value);\n    }\n  }\n\n  return {\n    checkCount: count,\n    expenseData: newState\n  };\n}\n\nfunction reducerPrice(state, action) {\n  const [lowestPrice, highestPrice] = action.value.split(\",\");\n  let newState;\n  let count = state.checkCount;\n\n  if (action.checked) {\n    if (count === 0) {\n      count++;\n      newState = state.expenseData.filter(element => Number(element.price) >= lowestPrice && Number(element.price) <= highestPrice);\n    }\n  } else {\n    count--;\n    if (count === 0) newState = orginalObj;else {\n      newState = concatArr = orginalObj.filter(element => Number(element.price) < lowestPrice || Number(element.price) > highestPrice);\n    }\n    return { ...state,\n      expenseData: state.expenseData.concat(concatArr)\n    };\n  }\n}\n\nfunction reducerTime(state, action) {\n  let dateArr = [];\n  let newState; // days\n\n  if (action.value < 30) {\n    const currenDate = date.getDate();\n    if (action.value === 0) dateArr.push(currenDate);else for (let i = 1; i <= action.value; i++) {\n      dateArr.push(currenDate - i);\n    }\n\n    if (action.checked) {\n      newState = state.expenseData.filter(element => dateArr.includes(Number(element.time.slice(8))) && Number(element.time.slice(5, 7)) === date.getMonth() + 1);\n    } else {\n      const concatArr = orginalObj.filter(element => !dateArr.includes(Number(element.time.slice(8))) || !(Number(element.time.slice(5, 7)) === date.getMonth() + 1));\n      newState = state.expenseData.concat(concatArr);\n    }\n  } // months\n  else if (action.value === 30 || action.value === 90) {\n    if (action.value === 30) dateArr.push(date.getMonth());else {\n      for (let i = 0; i < 3; i++) {\n        dateArr.push(date.getMonth() - i);\n      }\n    }\n\n    if (action.checked) {\n      newState = state.expenseData.filter(element => dateArr.includes(Number(element.time.slice(5, 7))));\n    } else {\n      const concatArr = orginalObj.filter(element => !dateArr.includes(Number(element.time.slice(5, 7))));\n      newState = state.expenseData.concat(concatArr);\n    }\n  } // years\n  else {\n    dateArr.push(date.getFullYear() - 1);\n\n    if (action.checked) {\n      newState = state.expenseData.filter(element => dateArr.includes(Number(element.time.slice(0, 4))));\n    } else {\n      const concatArr = orginalObj.filter(element => !dateArr.includes(Number(element.time.slice(0, 4))));\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n\n  return { ...state,\n    expenseData: newState\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchListDataProvider\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/store/searchListData/SearchListDataProvider.js"],"names":["useReducer","useContext","ExpenseDataContext","SearchListDataContext","date","Date","orginalObj","checkboxTime","category","text","value","checked","Infinity","reducer","state","action","type","reducerTime","reducerPrice","reducerCategory","SearchListDataProvider","props","expenseDataCtx","expenseDataState","dispatchExpenseDataAction","checkCount","expenseData","EXPENSE_DATA","SearchListDataContextInitialObject","children","newState","count","filter","element","mainCate","concatArr","concat","lowestPrice","highestPrice","split","Number","price","dateArr","currenDate","getDate","push","i","includes","time","slice","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import { useReducer, useContext } from \"react\";\nimport ExpenseDataContext from \"../expenseData/expenseData--context\";\nimport SearchListDataContext from \"./searchListData--context\";\n\nconst date = new Date();\n\nlet orginalObj;\n\nconst checkboxTime = [\n  { category: \"time\", text: \"today\", value: 0, checked: false },\n  { category: \"time\", text: \"yesterady\", value: 1, checked: false },\n  { category: \"time\", text: \"three days ago\", value: 3, checked: false },\n  { category: \"time\", text: \"a week ago\", value: 7, checked: false },\n  { category: \"time\", text: \"a month ago\", value: 30, checked: false },\n  { category: \"time\", text: \"three months ago\", value: 90, checked: false },\n  { category: \"time\", text: \"a year ago\", value: 100, checked: false },\n  { category: \"price\", text: \"0 ~ $100\", value: [0, 100], checked: false },\n  { category: \"price\", text: \"$100 ~ $300\", value: [100, 300], checked: false },\n  { category: \"price\", text: \"$300 ~ $500\", value: [300, 500], checked: false },\n  {\n    category: \"price\",\n    text: \"$500 ~ $1000\",\n    value: [500, 1000],\n    checked: false,\n  },\n  {\n    category: \"price\",\n    text: \"above $1000\",\n    value: [1000, Infinity],\n    checked: false,\n  },\n];\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"TIME\": {\n      return reducerTime(state, action);\n    }\n\n    case \"PRICE\": {\n      return reducerPrice(state, action);\n    }\n\n    case \"CATEGORY\": {\n      return reducerCategory(state, action);\n    }\n\n    default:\n      break;\n  }\n}\n\nfunction SearchListDataProvider(props) {\n  const expenseDataCtx = useContext(ExpenseDataContext);\n  const [expenseDataState, dispatchExpenseDataAction] = useReducer(reducer, {\n    checkCount: 0,\n    expenseData: expenseDataCtx.EXPENSE_DATA,\n  });\n\n  orginalObj = expenseDataCtx.EXPENSE_DATA;\n\n  const SearchListDataContextInitialObject = {\n    expenseDataState,\n    dispatchExpenseDataAction,\n  };\n\n  return (\n    <SearchListDataContext.Provider value={SearchListDataContextInitialObject}>\n      {props.children}\n    </SearchListDataContext.Provider>\n  );\n}\n\nexport default SearchListDataProvider;\n\nfunction reducerCategory(state, action) {\n  let newState;\n  let count = state.checkCount;\n\n  if (action.checked) {\n    if (count === 0) {\n      count++;\n\n      newState = state.expenseData.filter(\n        (element) => element.mainCate === action.value\n      );\n    } else {\n      count++;\n      const concatArr = orginalObj.filter(\n        (element) => element.mainCate === action.value\n      );\n\n      newState = state.expenseData.concat(concatArr);\n    }\n  } else {\n    count--;\n\n    if (count === 0) newState = orginalObj;\n    else {\n      newState = state.expenseData.filter(\n        (element) => element.mainCate !== action.value\n      );\n    }\n  }\n\n  return {\n    checkCount: count,\n    expenseData: newState,\n  };\n}\n\nfunction reducerPrice(state, action) {\n  const [lowestPrice, highestPrice] = action.value.split(\",\");\n  let newState;\n  let count = state.checkCount;\n\n  if (action.checked) {\n    if (count === 0) {\n      count++;\n\n      newState = state.expenseData.filter(\n        (element) =>\n          Number(element.price) >= lowestPrice &&\n          Number(element.price) <= highestPrice\n      );\n    }\n  } else {\n    count--;\n\n    if (count === 0) newState = orginalObj;\n    else {\n      newState = concatArr = orginalObj.filter(\n        (element) =>\n          Number(element.price) < lowestPrice ||\n          Number(element.price) > highestPrice\n      );\n    }\n\n    return { ...state, expenseData: state.expenseData.concat(concatArr) };\n  }\n}\n\nfunction reducerTime(state, action) {\n  let dateArr = [];\n  let newState;\n\n  // days\n  if (action.value < 30) {\n    const currenDate = date.getDate();\n\n    if (action.value === 0) dateArr.push(currenDate);\n    else\n      for (let i = 1; i <= action.value; i++) {\n        dateArr.push(currenDate - i);\n      }\n\n    if (action.checked) {\n      newState = state.expenseData.filter(\n        (element) =>\n          dateArr.includes(Number(element.time.slice(8))) &&\n          Number(element.time.slice(5, 7)) === date.getMonth() + 1\n      );\n    } else {\n      const concatArr = orginalObj.filter(\n        (element) =>\n          !dateArr.includes(Number(element.time.slice(8))) ||\n          !(Number(element.time.slice(5, 7)) === date.getMonth() + 1)\n      );\n\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n  // months\n  else if (action.value === 30 || action.value === 90) {\n    if (action.value === 30) dateArr.push(date.getMonth());\n    else {\n      for (let i = 0; i < 3; i++) {\n        dateArr.push(date.getMonth() - i);\n      }\n    }\n\n    if (action.checked) {\n      newState = state.expenseData.filter((element) =>\n        dateArr.includes(Number(element.time.slice(5, 7)))\n      );\n    } else {\n      const concatArr = orginalObj.filter(\n        (element) => !dateArr.includes(Number(element.time.slice(5, 7)))\n      );\n\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n  // years\n  else {\n    dateArr.push(date.getFullYear() - 1);\n\n    if (action.checked) {\n      newState = state.expenseData.filter((element) =>\n        dateArr.includes(Number(element.time.slice(0, 4)))\n      );\n    } else {\n      const concatArr = orginalObj.filter(\n        (element) => !dateArr.includes(Number(element.time.slice(0, 4)))\n      );\n\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n\n  return { ...state, expenseData: newState };\n}\n"]},"metadata":{},"sourceType":"module"}