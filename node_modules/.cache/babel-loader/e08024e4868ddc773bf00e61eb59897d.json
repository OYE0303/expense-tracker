{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\n\nfunction useAddDataForm(props) {\n  _s();\n\n  /*\n  the data storing in expenseDataProvider do NOT have\n  mainCategoryArr, subCategoryArr categoryExpense, categoryIncome, iconObj, priceTouch\n  but we need this data in the form, so add them\n  */\n  let initialObj;\n  if (props.initialObj) initialObj = { ...props.initialObj,\n    mainCategoryArr: props.initialObj.category === \"expense\" ? mainCateExpenseArr : mainCateIncomeArr,\n    subCategoryArr: props.initialObj.category === \"expense\" ? categoryExpense[props.initialObj.mainCategory] : categoryIncome[props.initialObj.mainCategory],\n    categoryExpense,\n    categoryIncome,\n    iconObj,\n    priceTouch: true\n  };else initialObj = {\n    category: \"expense\",\n    mainCategoryArr: mainCateExpenseArr,\n    subCategoryArr: categoryExpense[mainCateExpenseArr[0]],\n    mainCategory: mainCateExpenseArr[0],\n    subCategory: categoryExpense[mainCateExpenseArr[0]][0],\n    date: props.date === undefined ? createDateStringFormat(new Date()) : createDateStringFormat(new Date(props.date)),\n    description: \"\",\n    price: \"\",\n    priceTouch: false,\n    icon: iconObj[Object.keys(categoryExpense)[0]],\n    isValid: false,\n    iconObj,\n    categoryExpense,\n    categoryIncome\n  };\n  const [formData, formDataDispatch] = useReducer(reducer, initialObj);\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: undefined\n  });\n\n  function categoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function mainCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"MAIN_CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function subCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"SUB_CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function descriptionChangeHandler(e) {\n    formDataDispatch({\n      type: \"DESCRIPTION\",\n      value: e.target.value\n    });\n  }\n\n  function dateChangeHandler(e) {\n    formDataDispatch({\n      type: \"DATE\",\n      value: e.target.value\n    });\n  }\n\n  function priceChangeHandler(e) {\n    formDataDispatch({\n      type: \"PRICE\",\n      value: e.target.value\n    });\n  }\n\n  function inputPriceTouchHandler() {\n    // it will always be true until user select or touch the price input\n    formDataDispatch({\n      type: \"PRICE--TOUCH\"\n    });\n  }\n\n  function cancelClickHandler() {\n    setAddDataFormModal({\n      show: false,\n      date: undefined\n    });\n  }\n\n  function formSubmitHandler(e) {\n    e.preventDefault();\n    const newFormData = {\n      id: props.initialObj ? props.initialObj.id : uuidv4(),\n      category: formData.category,\n      mainCate: formData.mainCategory,\n      subCate: formData.subCategory,\n      time: formData.date,\n      description: formData.description,\n      price: formData.price,\n      year: formData.date.slice(0, 4),\n      month: formData.date.slice(5, 7),\n      day: formData.date.slice(8, 10)\n    }; //////////////////////////////////////////////////\n    // add new data or edited old data\n    // if props.initialObj exist, it means it's editing the old data\n\n    if (props.initialObj) {\n      props.editExpenseData(newFormData);\n      setEditModal(true);\n    } else props.addExpenseData(newFormData);\n\n    cancelClickHandler();\n  }\n\n  return {\n    categoryChangeHandler,\n    mainCategoryChangeHandler,\n    subCategoryChangeHandler,\n    descriptionChangeHandler,\n    dateChangeHandler,\n    priceChangeHandler,\n    inputPriceTouchHandler,\n    cancelClickHandler,\n    formSubmitHandler,\n    addDataFormModal,\n    formData\n  };\n}\n\n_s(useAddDataForm, \"8ynXNSrsZa5COXpMx1ofqnDATUs=\");\n\nexport default useAddDataForm; // function useAddDataForm(props) {\n//   const [addDataFromState, setAddDataFormState] = useState({\n//     show: false,\n//     initialObj: {},\n//     date: undefined,\n//   });\n//   function showAddFormHandler() {\n//     setAddDataFormState({\n//       show: true,\n//       date: props.date,\n//       initialObj: props.initialObj,\n//     });\n//   }\n//   function closeAddDataFormHandler() {\n//     setAddDataFormState({\n//       show: false,\n//       initialObj: {},\n//       date: undefined,\n//     });\n//   }\n//   return [\n//     addDataFromState,\n//     setAddDataFormState,\n//     showAddFormHandler,\n//     closeAddDataFormHandler,\n//   ];\n// }\n// export default useAddDataForm;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/Custom/useAddDataForm.js"],"names":["useState","useReducer","useAddDataForm","props","initialObj","mainCategoryArr","category","mainCateExpenseArr","mainCateIncomeArr","subCategoryArr","categoryExpense","mainCategory","categoryIncome","iconObj","priceTouch","subCategory","date","undefined","createDateStringFormat","Date","description","price","icon","Object","keys","isValid","formData","formDataDispatch","reducer","addDataFormModal","setAddDataFormModal","show","categoryChangeHandler","e","type","value","target","mainCategoryChangeHandler","subCategoryChangeHandler","descriptionChangeHandler","dateChangeHandler","priceChangeHandler","inputPriceTouchHandler","cancelClickHandler","formSubmitHandler","preventDefault","newFormData","id","uuidv4","mainCate","subCate","time","year","slice","month","day","editExpenseData","setEditModal","addExpenseData"],"mappings":"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","sourcesContent":["import { useState, useReducer } from \"react\";\n\nfunction useAddDataForm(props) {\n  /*\n  the data storing in expenseDataProvider do NOT have\n  mainCategoryArr, subCategoryArr categoryExpense, categoryIncome, iconObj, priceTouch\n  but we need this data in the form, so add them\n  */\n  let initialObj;\n  if (props.initialObj)\n    initialObj = {\n      ...props.initialObj,\n      mainCategoryArr:\n        props.initialObj.category === \"expense\"\n          ? mainCateExpenseArr\n          : mainCateIncomeArr,\n      subCategoryArr:\n        props.initialObj.category === \"expense\"\n          ? categoryExpense[props.initialObj.mainCategory]\n          : categoryIncome[props.initialObj.mainCategory],\n      categoryExpense,\n      categoryIncome,\n      iconObj,\n      priceTouch: true,\n    };\n  else\n    initialObj = {\n      category: \"expense\",\n      mainCategoryArr: mainCateExpenseArr,\n      subCategoryArr: categoryExpense[mainCateExpenseArr[0]],\n      mainCategory: mainCateExpenseArr[0],\n      subCategory: categoryExpense[mainCateExpenseArr[0]][0],\n      date:\n        props.date === undefined\n          ? createDateStringFormat(new Date())\n          : createDateStringFormat(new Date(props.date)),\n      description: \"\",\n      price: \"\",\n      priceTouch: false,\n      icon: iconObj[Object.keys(categoryExpense)[0]],\n      isValid: false,\n      iconObj,\n      categoryExpense,\n      categoryIncome,\n    };\n\n  const [formData, formDataDispatch] = useReducer(reducer, initialObj);\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: undefined,\n  });\n\n  function categoryChangeHandler(e) {\n    formDataDispatch({ type: \"CATEGORY\", value: e.target.value });\n  }\n\n  function mainCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"MAIN_CATEGORY\",\n      value: e.target.value,\n    });\n  }\n\n  function subCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"SUB_CATEGORY\",\n      value: e.target.value,\n    });\n  }\n\n  function descriptionChangeHandler(e) {\n    formDataDispatch({\n      type: \"DESCRIPTION\",\n      value: e.target.value,\n    });\n  }\n\n  function dateChangeHandler(e) {\n    formDataDispatch({\n      type: \"DATE\",\n      value: e.target.value,\n    });\n  }\n\n  function priceChangeHandler(e) {\n    formDataDispatch({\n      type: \"PRICE\",\n      value: e.target.value,\n    });\n  }\n\n  function inputPriceTouchHandler() {\n    // it will always be true until user select or touch the price input\n    formDataDispatch({\n      type: \"PRICE--TOUCH\",\n    });\n  }\n\n  function cancelClickHandler() {\n    setAddDataFormModal({\n      show: false,\n      date: undefined,\n    });\n  }\n\n  function formSubmitHandler(e) {\n    e.preventDefault();\n\n    const newFormData = {\n      id: props.initialObj ? props.initialObj.id : uuidv4(),\n      category: formData.category,\n      mainCate: formData.mainCategory,\n      subCate: formData.subCategory,\n      time: formData.date,\n      description: formData.description,\n      price: formData.price,\n      year: formData.date.slice(0, 4),\n      month: formData.date.slice(5, 7),\n      day: formData.date.slice(8, 10),\n    };\n\n    //////////////////////////////////////////////////\n    // add new data or edited old data\n    // if props.initialObj exist, it means it's editing the old data\n    if (props.initialObj) {\n      props.editExpenseData(newFormData);\n      setEditModal(true);\n    } else props.addExpenseData(newFormData);\n\n    cancelClickHandler();\n  }\n\n  return {\n    categoryChangeHandler,\n    mainCategoryChangeHandler,\n    subCategoryChangeHandler,\n    descriptionChangeHandler,\n    dateChangeHandler,\n    priceChangeHandler,\n    inputPriceTouchHandler,\n    cancelClickHandler,\n    formSubmitHandler,\n    addDataFormModal,\n    formData,\n  };\n}\n\nexport default useAddDataForm;\n\n// function useAddDataForm(props) {\n//   const [addDataFromState, setAddDataFormState] = useState({\n//     show: false,\n//     initialObj: {},\n//     date: undefined,\n//   });\n\n//   function showAddFormHandler() {\n//     setAddDataFormState({\n//       show: true,\n//       date: props.date,\n//       initialObj: props.initialObj,\n//     });\n//   }\n\n//   function closeAddDataFormHandler() {\n//     setAddDataFormState({\n//       show: false,\n//       initialObj: {},\n//       date: undefined,\n//     });\n//   }\n\n//   return [\n//     addDataFromState,\n//     setAddDataFormState,\n//     showAddFormHandler,\n//     closeAddDataFormHandler,\n//   ];\n// }\n\n// export default useAddDataForm;\n"]},"metadata":{},"sourceType":"module"}