{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Chart/ChartOption/OptionTime/OptionTime.js\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport SubTitle from \"../../../../UI/SubTitle/SubTitle\";\nimport style from \"./OptionTime.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionTime(props) {\n  function startingDateChangeHandler(e) {\n    props.dispatchChartData({\n      type: \"STARTING_DATE\",\n      value: e.target.value\n    });\n  }\n\n  function endingDateChangeHandler(e) {\n    props.dispatchChartData({\n      type: \"ENDING_DATE\",\n      value: e.target.value\n    });\n  }\n\n  function timeDurationChangeHandler(e) {\n    props.dispatchChartData({\n      type: \"TIME_DURATION\",\n      value: e.target.value\n    });\n  }\n\n  let startingDate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style[\"time__container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"starting date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: style[\"time__input\"],\n      onChange: startingDateChangeHandler,\n      type: \"date\",\n      value: props.valueStarting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n\n  let timeContent; // Note that only show the warning icon when\n  // 1. user has already choose both starting date and ending date\n  // 2. user choose the wrong order of the date\n\n  if (props.optionMainData === \"category\") timeContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [startingDate, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"time__container\"],\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ending date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"ending__container\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: style[\"time__input\"],\n          onChange: endingDateChangeHandler,\n          type: \"date\",\n          value: props.valueEnding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), props.timeValidIndex && !props.timeOrderValidIndex && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.btn,\n          children: /*#__PURE__*/_jsxDEV(AiFillWarning, {\n            title: \"warning\",\n            className: style.warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style[\"warning__text\"],\n        children: \"ending date should be greater than starting date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);else timeContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"time__container\"],\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"time duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: timeDurationChangeHandler,\n        className: style[\"time__input\"],\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7\",\n          children: \"one week(7days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"14\",\n          children: \"two weeks(14days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"30\",\n          children: \"one month(30days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"90\",\n          children: \"three months(90days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6\",\n          children: \"six months(6months)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"12\",\n          children: \"one year(12months)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), startingDate]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.time,\n    children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n      className: props.classColor === \"time\" ? `${style[\"subTitle--blue\"]}` : `${style[\"subTitle--green\"]}`,\n      children: \"Select Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), timeContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_c = OptionTime;\nexport default OptionTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionTime\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Chart/ChartOption/OptionTime/OptionTime.js"],"names":["AiFillWarning","SubTitle","style","OptionTime","props","startingDateChangeHandler","e","dispatchChartData","type","value","target","endingDateChangeHandler","timeDurationChangeHandler","startingDate","valueStarting","timeContent","optionMainData","valueEnding","timeValidIndex","timeOrderValidIndex","btn","warning","time","classColor"],"mappings":"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","sourcesContent":["import { AiFillWarning } from \"react-icons/ai\";\nimport SubTitle from \"../../../../UI/SubTitle/SubTitle\";\nimport style from \"./OptionTime.module.css\";\n\nfunction OptionTime(props) {\n  function startingDateChangeHandler(e) {\n    props.dispatchChartData({ type: \"STARTING_DATE\", value: e.target.value });\n  }\n\n  function endingDateChangeHandler(e) {\n    props.dispatchChartData({ type: \"ENDING_DATE\", value: e.target.value });\n  }\n\n  function timeDurationChangeHandler(e) {\n    props.dispatchChartData({ type: \"TIME_DURATION\", value: e.target.value });\n  }\n\n  let startingDate = (\n    <div className={style[\"time__container\"]}>\n      <label>starting date</label>\n      <input\n        className={style[\"time__input\"]}\n        onChange={startingDateChangeHandler}\n        type=\"date\"\n        value={props.valueStarting}\n      />\n    </div>\n  );\n\n  let timeContent;\n\n  // Note that only show the warning icon when\n  // 1. user has already choose both starting date and ending date\n  // 2. user choose the wrong order of the date\n  if (props.optionMainData === \"category\")\n    timeContent = (\n      <>\n        {startingDate}\n        <div className={style[\"time__container\"]}>\n          <label>ending date</label>\n          <div className={style[\"ending__container\"]}>\n            <input\n              className={style[\"time__input\"]}\n              onChange={endingDateChangeHandler}\n              type=\"date\"\n              value={props.valueEnding}\n            />\n            {props.timeValidIndex && !props.timeOrderValidIndex && (\n              <div className={style.btn}>\n                <AiFillWarning title=\"warning\" className={style.warning} />\n              </div>\n            )}\n          </div>\n          <p className={style[\"warning__text\"]}>\n            ending date should be greater than starting date\n          </p>\n        </div>\n      </>\n    );\n  else\n    timeContent = (\n      <>\n        <div className={style[\"time__container\"]}>\n          <label>time duration</label>\n          <select\n            onChange={timeDurationChangeHandler}\n            className={style[\"time__input\"]}\n          >\n            <option value=\"7\">one week(7days)</option>\n            <option value=\"14\">two weeks(14days)</option>\n            <option value=\"30\">one month(30days)</option>\n            <option value=\"90\">three months(90days)</option>\n            <option value=\"6\">six months(6months)</option>\n            <option value=\"12\">one year(12months)</option>\n          </select>\n        </div>\n        {startingDate}\n      </>\n    );\n\n  return (\n    <div className={style.time}>\n      <SubTitle\n        className={\n          props.classColor === \"time\"\n            ? `${style[\"subTitle--blue\"]}`\n            : `${style[\"subTitle--green\"]}`\n        }\n      >\n        Select Time\n      </SubTitle>\n      {timeContent}\n    </div>\n  );\n}\n\nexport default OptionTime;\n"]},"metadata":{},"sourceType":"module"}