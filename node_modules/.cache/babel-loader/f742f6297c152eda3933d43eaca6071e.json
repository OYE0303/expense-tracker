{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/UI/AddingSubCategoryModal/AddingSubCategoryModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useReducer } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button/Button\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport Warning from \"../Warning/Warning\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(type, action) {\n  switch (action.type) {\n    case \"NAME\":\n      {\n        const isDuplicate = state.categoryNameArr.includes(action.value);\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction AddingSubCategoryModal(props) {\n  _s();\n\n  const [form, formDispatch] = useReducer(reducer, {\n    name: \"\",\n    isDuplicate: false,\n    isTouch: false,\n    isValid: false,\n    categoryNameArr\n  });\n  const [name, setName] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n  const {\n    categoryExpense,\n    categoryIncome,\n    addSubCategory\n  } = useContext(CategoryContext);\n  const categoryNameArr = props.type === \"expense\" ? categoryExpense[props.mainCategory] : categoryIncome[props.mainCategory];\n\n  function inputTextChangeHandler(e) {\n    setName(e.target.value);\n    setDuplicate(subCategoryNameArr.includes(e.target.value));\n  }\n\n  function submitHandler(e) {\n    e.preventDefault(); // the logic here is exactly as same as adding main category\n\n    addSubCategory(name, props.type, props.mainCategory);\n    props.addSubCategoryModalToggler(null, name);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    classModal: style.modal,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      className: style.title,\n      children: \"add sub category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"subtitle__container\"],\n      children: /*#__PURE__*/_jsxDEV(SubTitle, {\n        className: style.subtitle,\n        children: [\"you're adding sub category of \", props.mainCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"big__container\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style[\"input__container\"],\n          children: /*#__PURE__*/_jsxDEV(InputText, {\n            name: \"subcategory name\",\n            label: \"subcategory name\",\n            value: name,\n            onChange: inputTextChangeHandler,\n            classLabel: style.label,\n            classInput: duplicate ? `${style.input} ${style[\"input--invalid\"]}` : `${style.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Warning, {\n          className: style.warning,\n          index: duplicate,\n          children: \"duplicate category name is not allowed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"btn__container\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          className: `${style.btn} ${style[\"btn--isValid\"]}`,\n          onClick: props.addSubCategoryModalToggler,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button\n        /*\n        Note that \n        if disabled={true}, it means do NOT let user submit the form\n        so the logic would be, we only want it to be true if the data is NOT valid\n         in this case, if\n        1) there is no name (input)\n        2) the name is duplicate\n        then we want the button to be disabled\n         note that this condition is exactly opposite of the className below\n        */\n        , {\n          disabled: name.trim().length === 0 || duplicate,\n          type: \"submit\",\n          className: name.trim().length > 0 && !duplicate ? `${style.btn} ${style[\"btn--isValid\"]}` : `${style.btn}`,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddingSubCategoryModal, \"jqMZSzkSnvE4Ft54AbN9A5OIxaA=\");\n\n_c = AddingSubCategoryModal;\nexport default AddingSubCategoryModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddingSubCategoryModal\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/UI/AddingSubCategoryModal/AddingSubCategoryModal.js"],"names":["useState","useContext","useReducer","Modal","Title","SubTitle","HorizontalLine","InputText","Button","CategoryContext","style","Warning","reducer","type","action","isDuplicate","state","categoryNameArr","includes","value","AddingSubCategoryModal","props","form","formDispatch","name","isTouch","isValid","setName","duplicate","setDuplicate","categoryExpense","categoryIncome","addSubCategory","mainCategory","inputTextChangeHandler","e","target","subCategoryNameArr","submitHandler","preventDefault","addSubCategoryModalToggler","modal","title","subtitle","label","input","warning","btn","trim","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAC7B,UAAQA,MAAM,CAACD,IAAf;AACE,SAAK,MAAL;AAAa;AACX,cAAME,WAAW,GAAGC,KAAK,CAACC,eAAN,CAAsBC,QAAtB,CAA+BJ,MAAM,CAACK,KAAtC,CAApB;AACD;;AAED;AACE;AANJ;AAQD;;AAED,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBrB,UAAU,CAACU,OAAD,EAAU;AAC/CY,IAAAA,IAAI,EAAE,EADyC;AAE/CT,IAAAA,WAAW,EAAE,KAFkC;AAG/CU,IAAAA,OAAO,EAAE,KAHsC;AAI/CC,IAAAA,OAAO,EAAE,KAJsC;AAK/CT,IAAAA;AAL+C,GAAV,CAAvC;AAOA,QAAM,CAACO,IAAD,EAAOG,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AAAE8B,IAAAA,eAAF;AAAmBC,IAAAA,cAAnB;AAAmCC,IAAAA;AAAnC,MACJ/B,UAAU,CAACQ,eAAD,CADZ;AAGA,QAAMQ,eAAe,GACnBI,KAAK,CAACR,IAAN,KAAe,SAAf,GACIiB,eAAe,CAACT,KAAK,CAACY,YAAP,CADnB,GAEIF,cAAc,CAACV,KAAK,CAACY,YAAP,CAHpB;;AAKA,WAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AACjCR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASjB,KAAV,CAAP;AAEAU,IAAAA,YAAY,CAACQ,kBAAkB,CAACnB,QAAnB,CAA4BiB,CAAC,CAACC,MAAF,CAASjB,KAArC,CAAD,CAAZ;AACD;;AAED,WAASmB,aAAT,CAAuBH,CAAvB,EAA0B;AACxBA,IAAAA,CAAC,CAACI,cAAF,GADwB,CAGxB;;AAEAP,IAAAA,cAAc,CAACR,IAAD,EAAOH,KAAK,CAACR,IAAb,EAAmBQ,KAAK,CAACY,YAAzB,CAAd;AAEAZ,IAAAA,KAAK,CAACmB,0BAAN,CAAiC,IAAjC,EAAuChB,IAAvC;AACD;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,UAAU,EAAEd,KAAK,CAAC+B,KAAzB;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE/B,KAAK,CAACgC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAEhC,KAAK,CAAC,qBAAD,CAArB;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEA,KAAK,CAACiC,QAA3B;AAAA,qDACiCtB,KAAK,CAACY,YADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAM,MAAA,QAAQ,EAAEK,aAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE5B,KAAK,CAAC,gBAAD,CAArB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEA,KAAK,CAAC,kBAAD,CAArB;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,kBADP;AAEE,YAAA,KAAK,EAAC,kBAFR;AAGE,YAAA,KAAK,EAAEc,IAHT;AAIE,YAAA,QAAQ,EAAEU,sBAJZ;AAKE,YAAA,UAAU,EAAExB,KAAK,CAACkC,KALpB;AAME,YAAA,UAAU,EACRhB,SAAS,GACJ,GAAElB,KAAK,CAACmC,KAAM,IAAGnC,KAAK,CAAC,gBAAD,CAAmB,EADrC,GAEJ,GAAEA,KAAK,CAACmC,KAAM;AATvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAEnC,KAAK,CAACoC,OAA1B;AAAmC,UAAA,KAAK,EAAElB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE;AAAK,QAAA,SAAS,EAAElB,KAAK,CAAC,gBAAD,CAArB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAG,GAAEA,KAAK,CAACqC,GAAI,IAAGrC,KAAK,CAAC,cAAD,CAAiB,EAFnD;AAGE,UAAA,OAAO,EAAEW,KAAK,CAACmB,0BAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC;AACC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVU;AAaE,UAAA,QAAQ,EAAEhB,IAAI,CAACwB,IAAL,GAAYC,MAAZ,KAAuB,CAAvB,IAA4BrB,SAbxC;AAcE,UAAA,IAAI,EAAC,QAdP;AAeE,UAAA,SAAS,EACPJ,IAAI,CAACwB,IAAL,GAAYC,MAAZ,GAAqB,CAArB,IAA0B,CAACrB,SAA3B,GACK,GAAElB,KAAK,CAACqC,GAAI,IAAGrC,KAAK,CAAC,cAAD,CAAiB,EAD1C,GAEK,GAAEA,KAAK,CAACqC,GAAI,EAlBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkED;;GArGQ3B,sB;;KAAAA,sB;AAuGT,eAAeA,sBAAf","sourcesContent":["import { useState, useContext, useReducer } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button/Button\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport Warning from \"../Warning/Warning\";\n\nfunction reducer(type, action) {\n  switch (action.type) {\n    case \"NAME\": {\n      const isDuplicate = state.categoryNameArr.includes(action.value);\n    }\n\n    default:\n      break;\n  }\n}\n\nfunction AddingSubCategoryModal(props) {\n  const [form, formDispatch] = useReducer(reducer, {\n    name: \"\",\n    isDuplicate: false,\n    isTouch: false,\n    isValid: false,\n    categoryNameArr,\n  });\n  const [name, setName] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n\n  const { categoryExpense, categoryIncome, addSubCategory } =\n    useContext(CategoryContext);\n\n  const categoryNameArr =\n    props.type === \"expense\"\n      ? categoryExpense[props.mainCategory]\n      : categoryIncome[props.mainCategory];\n\n  function inputTextChangeHandler(e) {\n    setName(e.target.value);\n\n    setDuplicate(subCategoryNameArr.includes(e.target.value));\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    // the logic here is exactly as same as adding main category\n\n    addSubCategory(name, props.type, props.mainCategory);\n\n    props.addSubCategoryModalToggler(null, name);\n  }\n\n  return (\n    <Modal classModal={style.modal}>\n      <Title className={style.title}>add sub category</Title>\n      <HorizontalLine />\n      <div className={style[\"subtitle__container\"]}>\n        <SubTitle className={style.subtitle}>\n          you're adding sub category of {props.mainCategory}\n        </SubTitle>\n      </div>\n      <form onSubmit={submitHandler}>\n        <div className={style[\"big__container\"]}>\n          <div className={style[\"input__container\"]}>\n            <InputText\n              name=\"subcategory name\"\n              label=\"subcategory name\"\n              value={name}\n              onChange={inputTextChangeHandler}\n              classLabel={style.label}\n              classInput={\n                duplicate\n                  ? `${style.input} ${style[\"input--invalid\"]}`\n                  : `${style.input}`\n              }\n            />\n          </div>\n\n          <Warning className={style.warning} index={duplicate}>\n            duplicate category name is not allowed\n          </Warning>\n        </div>\n\n        <div className={style[\"btn__container\"]}>\n          <Button\n            type=\"button\"\n            className={`${style.btn} ${style[\"btn--isValid\"]}`}\n            onClick={props.addSubCategoryModalToggler}\n          >\n            cancel\n          </Button>\n          <Button\n            /*\n            Note that \n            if disabled={true}, it means do NOT let user submit the form\n            so the logic would be, we only want it to be true if the data is NOT valid\n\n            in this case, if\n            1) there is no name (input)\n            2) the name is duplicate\n            then we want the button to be disabled\n\n            note that this condition is exactly opposite of the className below\n            */\n            disabled={name.trim().length === 0 || duplicate}\n            type=\"submit\"\n            className={\n              name.trim().length > 0 && !duplicate\n                ? `${style.btn} ${style[\"btn--isValid\"]}`\n                : `${style.btn}`\n            }\n          >\n            add\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddingSubCategoryModal;\n"]},"metadata":{},"sourceType":"module"}