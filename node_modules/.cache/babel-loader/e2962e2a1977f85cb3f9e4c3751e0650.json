{"ast":null,"code":"import createPreAccAmount from \"./createPreAccAmount\";\nimport compareTime from \"../compareTime\";\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n  let curLabelTime = new Date(labels[0]);\n  const sortedData = expenseData.sort((a, b) => Number(new Date(a.time) - Number(new Date(b.time))));\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n    const data = sortedData[expenseDataIndex];\n\n    if (!compareTime(data, curLabelTime)) {\n      curLabelTime = new Date(labels[++labelIndex]);\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\") curAccAmountExpense += Number(data.price);else curAccAmountIncome += Number(data.price);\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length) finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n  return finalDataArr;\n}\n\nexport default createChartDataArr;\n/*\nThis is an old way of implement (using new Object())\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n\n  // small difference\n  let curLabelTime = Number(new Date(labels[0]));\n\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    // main difference\n    if (Number(new Date(data.time)) > curLabelTime) {\n      // small difference\n      curLabelTime = Number(new Date(labels[++labelIndex]));\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\")\n        curAccAmountExpense += Number(data.price);\n      else curAccAmountIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length)\n    finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n\n  return finalDataArr;\n}\n*/\n// function createChartDataArr(labels, expenseData) {\n//   const finalDataArr = [];\n//   labels.forEach((label) => {\n//     const curAccAmount =\n//       createPreAccAmount(\"income\", expenseData, label) -\n//       createPreAccAmount(\"expense\", expenseData, label);\n//     finalDataArr.push(curAccAmount);\n//   });\n//   return finalDataArr;\n// }","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateAccountData/CreateChartDataArr.js"],"names":["createPreAccAmount","compareTime","createChartDataArr","labels","expenseData","finalDataArr","curAccAmountExpense","curAccAmountIncome","expenseDataIndex","labelIndex","curLabelTime","Date","sortedData","sort","a","b","Number","time","length","data","push","category","price"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,WAApC,EAAiD;AAC/C,QAAMC,YAAY,GAAG,EAArB;AAEA,MAAIC,mBAAmB,GAAG,CAA1B;AACA,MAAIC,kBAAkB,GAAG,CAAzB;AACA,MAAIC,gBAAgB,GAAG,CAAvB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,YAAY,GAAG,IAAIC,IAAJ,CAASR,MAAM,CAAC,CAAD,CAAf,CAAnB;AAEA,QAAMS,UAAU,GAAGR,WAAW,CAACS,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAClCC,MAAM,CAAC,IAAIL,IAAJ,CAASG,CAAC,CAACG,IAAX,IAAmBD,MAAM,CAAC,IAAIL,IAAJ,CAASI,CAAC,CAACE,IAAX,CAAD,CAA1B,CADW,CAAnB;;AAIA,SAAOT,gBAAgB,GAAGI,UAAU,CAACM,MAArC,EAA6C;AAC3C,QAAIT,UAAU,IAAIN,MAAM,CAACe,MAAzB,EAAiC;AAEjC,UAAMC,IAAI,GAAGP,UAAU,CAACJ,gBAAD,CAAvB;;AAEA,QAAI,CAACP,WAAW,CAACkB,IAAD,EAAOT,YAAP,CAAhB,EAAsC;AACpCA,MAAAA,YAAY,GAAG,IAAIC,IAAJ,CAASR,MAAM,CAAC,EAAEM,UAAH,CAAf,CAAf;AACAJ,MAAAA,YAAY,CAACe,IAAb,CAAkBb,kBAAkB,GAAGD,mBAAvC;AACD,KAHD,MAGO;AACL,UAAIa,IAAI,CAACE,QAAL,KAAkB,SAAtB,EACEf,mBAAmB,IAAIU,MAAM,CAACG,IAAI,CAACG,KAAN,CAA7B,CADF,KAEKf,kBAAkB,IAAIS,MAAM,CAACG,IAAI,CAACG,KAAN,CAA5B;AAELd,MAAAA,gBAAgB;AACjB;AACF;;AAED,MAAIC,UAAU,GAAGN,MAAM,CAACe,MAAxB,EACEb,YAAY,CAACe,IAAb,CAAkBb,kBAAkB,GAAGD,mBAAvC;AAEF,SAAOD,YAAP;AACD;;AAED,eAAeH,kBAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["import createPreAccAmount from \"./createPreAccAmount\";\nimport compareTime from \"../compareTime\";\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n  let curLabelTime = new Date(labels[0]);\n\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    if (!compareTime(data, curLabelTime)) {\n      curLabelTime = new Date(labels[++labelIndex]);\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\")\n        curAccAmountExpense += Number(data.price);\n      else curAccAmountIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length)\n    finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n\n  return finalDataArr;\n}\n\nexport default createChartDataArr;\n\n/*\nThis is an old way of implement (using new Object())\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n\n  // small difference\n  let curLabelTime = Number(new Date(labels[0]));\n\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    // main difference\n    if (Number(new Date(data.time)) > curLabelTime) {\n      // small difference\n      curLabelTime = Number(new Date(labels[++labelIndex]));\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\")\n        curAccAmountExpense += Number(data.price);\n      else curAccAmountIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length)\n    finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n\n  return finalDataArr;\n}\n*/\n\n// function createChartDataArr(labels, expenseData) {\n//   const finalDataArr = [];\n\n//   labels.forEach((label) => {\n//     const curAccAmount =\n//       createPreAccAmount(\"income\", expenseData, label) -\n//       createPreAccAmount(\"expense\", expenseData, label);\n\n//     finalDataArr.push(curAccAmount);\n//   });\n\n//   return finalDataArr;\n// }\n"]},"metadata":{},"sourceType":"module"}