{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/UI/InputText/InputText.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction InputText(props) {\n  const classNameLabel = props.classNameLabel ? `${props.classNameLabel} capitalize` : `capitalize`;\n  const classNameInput = props.classNameInput ? `${props.classNameInput} input` : `input`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      className: classNameLabel,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: props.name,\n      value: props.value,\n      type: \"text\",\n      id: props.id,\n      onChange: props.onChange,\n      className: classNameInput,\n      \"data-id\": props.dataID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = InputText;\nexport default InputText;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputText\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/UI/InputText/InputText.js"],"names":["InputText","props","classNameLabel","classNameInput","id","label","name","value","onChange","dataID"],"mappings":";;;;AAAA,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,cAAc,GAAGD,KAAK,CAACC,cAAN,GAClB,GAAED,KAAK,CAACC,cAAe,aADL,GAElB,YAFL;AAIA,QAAMC,cAAc,GAAGF,KAAK,CAACE,cAAN,GAClB,GAAEF,KAAK,CAACE,cAAe,QADL,GAElB,OAFL;AAIA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEF,KAAK,CAACG,EAAtB;AAA0B,MAAA,SAAS,EAAEF,cAArC;AAAA,gBACGD,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,IAAI,EAAEJ,KAAK,CAACK,IADd;AAEE,MAAA,KAAK,EAAEL,KAAK,CAACM,KAFf;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,EAAE,EAAEN,KAAK,CAACG,EAJZ;AAKE,MAAA,QAAQ,EAAEH,KAAK,CAACO,QALlB;AAME,MAAA,SAAS,EAAEL,cANb;AAOE,iBAASF,KAAK,CAACQ;AAPjB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAgBD;;KAzBQT,S;AA2BT,eAAeA,SAAf","sourcesContent":["function InputText(props) {\n  const classNameLabel = props.classNameLabel\n    ? `${props.classNameLabel} capitalize`\n    : `capitalize`;\n\n  const classNameInput = props.classNameInput\n    ? `${props.classNameInput} input`\n    : `input`;\n\n  return (\n    <>\n      <label htmlFor={props.id} className={classNameLabel}>\n        {props.label}\n      </label>\n      <input\n        name={props.name}\n        value={props.value}\n        type=\"text\"\n        id={props.id}\n        onChange={props.onChange}\n        className={classNameInput}\n        data-id={props.dataID}\n      />\n    </>\n  );\n}\n\nexport default InputText;\n"]},"metadata":{},"sourceType":"module"}