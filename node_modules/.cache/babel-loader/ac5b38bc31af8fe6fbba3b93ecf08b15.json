{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/store/userInfo/userInfoProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport UserInfoContext from \"./userInfo--context\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { signInWithPopup, onAuthStateChanged } from \"firebase/auth\";\nimport { db, provider, auth } from \"../../firebase-config\";\nimport createInitialData from \"../../Others/CreateInitialData/createInitialData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nonAuthStateChanged(auth, async user => {\n  if (user) {\n    const {\n      displayName,\n      email\n    } = user;\n    const userID = `${email}${displayName.split(\" \").join(\"\")}`;\n    const userDocSnap = await getDoc(doc(db, \"users\", userID));\n    const {\n      userName,\n      displayTheme\n    } = userDocSnap.data(); // setUserInfo({ userName, displayTheme, userID });\n    // setSignedIn(true);\n\n    console.log(\"signed in\");\n  } else {\n    // setSignedIn(false);\n    console.log(\"signed out\");\n  }\n});\n\nfunction UserInfoProvider(props) {\n  _s();\n\n  const [userInfo, setUserInfo] = useState(false);\n\n  async function signInWithGoogle() {\n    const res = await signInWithPopup(auth, provider);\n    const {\n      displayName,\n      email\n    } = res.user;\n    let userDataObj;\n    const userID = `${email}${displayName.split(\" \").join(\"\")}`;\n    const userDocSnap = await getDoc(doc(db, \"users\", userID));\n\n    if (userDocSnap.exists()) {\n      const {\n        userName,\n        displayTheme\n      } = userDocSnap.data();\n      userDataObj = {\n        userName,\n        displayTheme,\n        userID\n      };\n      return;\n    }\n\n    const [categoryExpense, categoryIncome, iconObj, iconArr] = createInitialData();\n    await setDoc(doc(db, \"users\", userID), {\n      userName: displayName,\n      email,\n      categoryExpense,\n      categoryIncome,\n      iconObj,\n      iconArr,\n      displayTheme: \"black\"\n    });\n    userDataObj = {\n      userName: displayName,\n      userID,\n      displayTheme: \"black\"\n    };\n    setUserInfo(userDataObj);\n  }\n\n  console.log(userInfo);\n  const contextObj = userInfo ? { ...userInfo,\n    signInWithGoogle,\n    setUserInfo\n  } : {\n    userData: false,\n    signInWithGoogle,\n    setUserInfo\n  };\n  return /*#__PURE__*/_jsxDEV(UserInfoContext.Provider, {\n    value: contextObj,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserInfoProvider, \"2YTLvkr7vbhO2gmIWBE0DJbe0uY=\");\n\n_c = UserInfoProvider;\nexport default UserInfoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoProvider\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/store/userInfo/userInfoProvider.js"],"names":["useState","UserInfoContext","doc","setDoc","getDoc","signInWithPopup","onAuthStateChanged","db","provider","auth","createInitialData","user","displayName","email","userID","split","join","userDocSnap","userName","displayTheme","data","console","log","UserInfoProvider","props","userInfo","setUserInfo","signInWithGoogle","res","userDataObj","exists","categoryExpense","categoryIncome","iconObj","iconArr","contextObj","userData","children"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport UserInfoContext from \"./userInfo--context\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { signInWithPopup, onAuthStateChanged } from \"firebase/auth\";\nimport { db, provider, auth } from \"../../firebase-config\";\nimport createInitialData from \"../../Others/CreateInitialData/createInitialData\";\n\nonAuthStateChanged(auth, async (user) => {\n  if (user) {\n    const { displayName, email } = user;\n    const userID = `${email}${displayName.split(\" \").join(\"\")}`;\n    const userDocSnap = await getDoc(doc(db, \"users\", userID));\n    const { userName, displayTheme } = userDocSnap.data();\n\n    // setUserInfo({ userName, displayTheme, userID });\n    // setSignedIn(true);\n    console.log(\"signed in\");\n  } else {\n    // setSignedIn(false);\n    console.log(\"signed out\");\n  }\n});\n\nfunction UserInfoProvider(props) {\n  const [userInfo, setUserInfo] = useState(false);\n\n  async function signInWithGoogle() {\n    const res = await signInWithPopup(auth, provider);\n    const { displayName, email } = res.user;\n    let userDataObj;\n\n    const userID = `${email}${displayName.split(\" \").join(\"\")}`;\n\n    const userDocSnap = await getDoc(doc(db, \"users\", userID));\n\n    if (userDocSnap.exists()) {\n      const { userName, displayTheme } = userDocSnap.data();\n      userDataObj = {\n        userName,\n        displayTheme,\n        userID,\n      };\n      return;\n    }\n\n    const [categoryExpense, categoryIncome, iconObj, iconArr] =\n      createInitialData();\n\n    await setDoc(doc(db, \"users\", userID), {\n      userName: displayName,\n      email,\n      categoryExpense,\n      categoryIncome,\n      iconObj,\n      iconArr,\n      displayTheme: \"black\",\n    });\n\n    userDataObj = { userName: displayName, userID, displayTheme: \"black\" };\n    setUserInfo(userDataObj);\n  }\n\n  console.log(userInfo);\n  const contextObj = userInfo\n    ? { ...userInfo, signInWithGoogle, setUserInfo }\n    : { userData: false, signInWithGoogle, setUserInfo };\n\n  return (\n    <UserInfoContext.Provider value={contextObj}>\n      {props.children}\n    </UserInfoContext.Provider>\n  );\n}\n\nexport default UserInfoProvider;\n"]},"metadata":{},"sourceType":"module"}