{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Search/SearchOption/SearchOptionUI.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport style from \"./SearchOptionUI.module.css\";\nimport InputCheckbox from \"../../../UI/InputCheckbox/InputCheckbox\";\nimport SearchListDataContext from \"../../../../store/searchListData/searchListData--context\";\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\nimport { IoIosArrowDropdownCircle } from \"react-icons/io\";\n/*\nfor each different type of search option\nwe have different group of small check boxes\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchOptionUI(props) {\n  _s();\n\n  const [showBoxes, setShowBoxes] = useState(true);\n  /*\n  to keep tracking each small check boxes if it's checked or not\n  initially, all of them is false which is no checked\n  */\n\n  const [checkState, setCheckState] = useState(new Array(props.checkboxItem.length).fill(false));\n  const searchExpenseDataCtx = useContext(SearchListDataContext);\n\n  function arrowBtnClickHandler() {\n    setShowBoxes(prev => !prev);\n  }\n\n  function changeChekboxHandler(index, e) {\n    setCheckState(checkState.map((check, i) => index === i ? !check : check));\n    console.log(e.target.value, e.target.id); // setFilteredData is connected with reducer function\n\n    if (e.target.checked) {\n      // add constraint\n      // addConstraintObj(e.target.value, e.target.dataset.id);\n      searchExpenseDataCtx.setFilteredData({\n        type: \"ADD\",\n        value: e.target.value,\n        id: e.target.dataset.id\n      });\n    } else {\n      // remove constraint\n      // removeConstraintObj(e.target.value, e.target.dataset.id);\n      searchExpenseDataCtx.setFilteredData({\n        type: \"REMOVE\",\n        value: e.target.value,\n        id: e.target.dataset.id\n      });\n    }\n  }\n\n  const checkboxContent = props.checkboxItem.map((checkbox, i) => /*#__PURE__*/_jsxDEV(InputCheckbox, {\n    label: checkbox.text,\n    id: checkbox.text,\n    value: checkbox.value,\n    checked: checkState[i],\n    onChange: e => changeChekboxHandler(i, e),\n    classCheck: style.check,\n    classInput: style.input,\n    classLabel: style.labelItem,\n    dataID: props.dataID\n  }, checkbox.category ? checkbox.category + checkbox.text : checkbox.text, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputCheckbox, {\n      classCheck: style.icon,\n      classLabel: style.label,\n      classContainer: style[\"icon__container\"],\n      icon: showBoxes ? /*#__PURE__*/_jsxDEV(IoIosArrowDropdownCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(IoIosArrowDroprightCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this),\n      label: props.label,\n      id: props.label,\n      checked: showBoxes,\n      onChange: arrowBtnClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showBoxes ? `${style.container}` : `${style.container} ${style.hidden}`,\n      children: checkboxContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchOptionUI, \"wK12jq7PDLo3vvFVG8GLL/+08S0=\");\n\n_c = SearchOptionUI;\nexport default SearchOptionUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchOptionUI\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Search/SearchOption/SearchOptionUI.js"],"names":["useState","useContext","style","InputCheckbox","SearchListDataContext","IoIosArrowDroprightCircle","IoIosArrowDropdownCircle","SearchOptionUI","props","showBoxes","setShowBoxes","checkState","setCheckState","Array","checkboxItem","length","fill","searchExpenseDataCtx","arrowBtnClickHandler","prev","changeChekboxHandler","index","e","map","check","i","console","log","target","value","id","checked","setFilteredData","type","dataset","checkboxContent","checkbox","text","input","labelItem","dataID","category","icon","label","container","hidden"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport style from \"./SearchOptionUI.module.css\";\nimport InputCheckbox from \"../../../UI/InputCheckbox/InputCheckbox\";\nimport SearchListDataContext from \"../../../../store/searchListData/searchListData--context\";\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\nimport { IoIosArrowDropdownCircle } from \"react-icons/io\";\n\n/*\nfor each different type of search option\nwe have different group of small check boxes\n*/\nfunction SearchOptionUI(props) {\n  const [showBoxes, setShowBoxes] = useState(true);\n\n  /*\n  to keep tracking each small check boxes if it's checked or not\n  initially, all of them is false which is no checked\n  */\n  const [checkState, setCheckState] = useState(\n    new Array(props.checkboxItem.length).fill(false)\n  );\n  const searchExpenseDataCtx = useContext(SearchListDataContext);\n\n  function arrowBtnClickHandler() {\n    setShowBoxes((prev) => !prev);\n  }\n\n  function changeChekboxHandler(index, e) {\n    setCheckState(checkState.map((check, i) => (index === i ? !check : check)));\n\n    console.log(e.target.value, e.target.id);\n\n    // setFilteredData is connected with reducer function\n    if (e.target.checked) {\n      // add constraint\n      // addConstraintObj(e.target.value, e.target.dataset.id);\n      searchExpenseDataCtx.setFilteredData({\n        type: \"ADD\",\n        value: e.target.value,\n        id: e.target.dataset.id,\n      });\n    } else {\n      // remove constraint\n      // removeConstraintObj(e.target.value, e.target.dataset.id);\n      searchExpenseDataCtx.setFilteredData({\n        type: \"REMOVE\",\n        value: e.target.value,\n        id: e.target.dataset.id,\n      });\n    }\n  }\n\n  const checkboxContent = props.checkboxItem.map((checkbox, i) => (\n    <InputCheckbox\n      label={checkbox.text}\n      id={checkbox.text}\n      key={\n        checkbox.category ? checkbox.category + checkbox.text : checkbox.text\n      }\n      value={checkbox.value}\n      checked={checkState[i]}\n      onChange={(e) => changeChekboxHandler(i, e)}\n      classCheck={style.check}\n      classInput={style.input}\n      classLabel={style.labelItem}\n      dataID={props.dataID}\n    />\n  ));\n\n  return (\n    <div>\n      <InputCheckbox\n        classCheck={style.icon}\n        classLabel={style.label}\n        classContainer={style[\"icon__container\"]}\n        icon={\n          showBoxes ? (\n            <IoIosArrowDropdownCircle />\n          ) : (\n            <IoIosArrowDroprightCircle />\n          )\n        }\n        label={props.label}\n        id={props.label}\n        checked={showBoxes}\n        onChange={arrowBtnClickHandler}\n      />\n      <div\n        className={\n          showBoxes\n            ? `${style.container}`\n            : `${style.container} ${style.hidden}`\n        }\n      >\n        {checkboxContent}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchOptionUI;\n"]},"metadata":{},"sourceType":"module"}