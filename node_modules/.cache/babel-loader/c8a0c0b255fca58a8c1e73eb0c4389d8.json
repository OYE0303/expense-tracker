{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/ChartSmall/ChartSmall.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport Title from \"../Title/Title\";\nimport style from \"./ChartSmall.module.css\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartSmall(props) {\n  _s();\n\n  const [chartState, setChartState] = useState(0);\n  const chartRef = useRef(null);\n\n  function selectChangeHandler(e) {\n    setChartState(e.target.value);\n  }\n\n  useEffect(() => {\n    const configLine = {\n      type: \"line\",\n      data: {\n        labels: props.labelsLine,\n        datasets: [{\n          label: \"My First Dataset\",\n          data: props.dataLine,\n          backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n          borderColor: [\"rgb(54, 162, 235)\"],\n          borderWidth: 1,\n          pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n        }]\n      },\n      options: {\n        elements: {\n          line: {\n            tension: 0.1\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n    const configPie = {\n      type: \"pie\",\n      data: {\n        labels: [\"Red\", \"Blue\", \"Yellow\"],\n        datasets: [{\n          label: \"My First Dataset\",\n          data: [300, 50, 100],\n          backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\"],\n          hoverOffset: 4\n        }]\n      }\n    };\n    const configArr = [configLine, configPie];\n    const chart = new Chart(chartRef.current, configArr[chartState]);\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [chartState]);\n  const explainArr = [\"This chart shows the total daily expense in this week\", \"This chart shows the different categories of the expense\"];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: style[\"chart__section\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"title__section\"],\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectChangeHandler,\n        className: style.select,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"line chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"pie chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: chartState === \"1\" ? `${style.explain} ${style[\"explain--pie\"]}` : `${style.explain}`,\n      children: explainArr[chartState]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"chart__container\"],\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        className: chartState === \"1\" ? `${style[\"chart--pie\"]}` : `${style[\"chart\"]}`,\n        height: \"200\",\n        width: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartSmall, \"iBlqATxRnAYPNjOn3a/mv0/FsZk=\");\n\n_c = ChartSmall;\nexport default ChartSmall;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartSmall\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/ChartSmall/ChartSmall.js"],"names":["useRef","useEffect","useState","Card","Title","style","Chart","ChartSmall","props","chartState","setChartState","chartRef","selectChangeHandler","e","target","value","configLine","type","data","labels","labelsLine","datasets","label","dataLine","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","elements","line","tension","scales","y","beginAtZero","configPie","hoverOffset","configArr","chart","current","cleanUp","destroy","explainArr","select","explain"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport Title from \"../Title/Title\";\nimport style from \"./ChartSmall.module.css\";\nimport Chart from \"chart.js/auto\";\n\nfunction ChartSmall(props) {\n  const [chartState, setChartState] = useState(0);\n  const chartRef = useRef(null);\n\n  function selectChangeHandler(e) {\n    setChartState(e.target.value);\n  }\n\n  useEffect(() => {\n    const configLine = {\n      type: \"line\",\n      data: {\n        labels: props.labelsLine,\n        datasets: [\n          {\n            label: \"My First Dataset\",\n            data: props.dataLine,\n            backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n            borderColor: [\"rgb(54, 162, 235)\"],\n            borderWidth: 1,\n            pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n          },\n        ],\n      },\n      options: {\n        elements: {\n          line: {\n            tension: 0.1,\n          },\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n          },\n        },\n      },\n    };\n\n    const configPie = {\n      type: \"pie\",\n      data: {\n        labels: [\"Red\", \"Blue\", \"Yellow\"],\n        datasets: [\n          {\n            label: \"My First Dataset\",\n            data: [300, 50, 100],\n            backgroundColor: [\n              \"rgb(255, 99, 132)\",\n              \"rgb(54, 162, 235)\",\n              \"rgb(255, 205, 86)\",\n            ],\n            hoverOffset: 4,\n          },\n        ],\n      },\n    };\n\n    const configArr = [configLine, configPie];\n\n    const chart = new Chart(chartRef.current, configArr[chartState]);\n\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [chartState]);\n\n  const explainArr = [\n    \"This chart shows the total daily expense in this week\",\n    \"This chart shows the different categories of the expense\",\n  ];\n\n  return (\n    <Card className={style[\"chart__section\"]}>\n      <div className={style[\"title__section\"]}>\n        <Title>Chart</Title>\n        <select onChange={selectChangeHandler} className={style.select}>\n          <option value=\"0\">line chart</option>\n          <option value=\"1\">pie chart</option>\n        </select>\n      </div>\n      <p\n        className={\n          chartState === \"1\"\n            ? `${style.explain} ${style[\"explain--pie\"]}`\n            : `${style.explain}`\n        }\n      >\n        {explainArr[chartState]}\n      </p>\n      <div className={style[\"chart__container\"]}>\n        <canvas\n          ref={chartRef}\n          className={\n            chartState === \"1\" ? `${style[\"chart--pie\"]}` : `${style[\"chart\"]}`\n          }\n          height=\"200\"\n          width=\"auto\"\n        ></canvas>\n      </div>\n    </Card>\n  );\n}\n\nexport default ChartSmall;\n"]},"metadata":{},"sourceType":"module"}