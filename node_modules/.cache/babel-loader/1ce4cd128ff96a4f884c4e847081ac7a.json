{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/MonthlyInfo/MonthlyInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport AccountSection from \"../../../UI/AccountSection/AccountSection\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport DisplayThemeContext from \"../../../../store/displayTheme/displayTheme--context\";\nimport createDateStringFormat from \"../../../../Others/CreateDateStringFormat/CreateDateStringFormat\";\nimport createAccAmount from \"../../../../Others/createAccAmount\";\nimport createSmallChartPreData from \"../../../../Others/CreateSmallChartData/createSmallChartPreData\";\nimport createSmallChartData from \"../../../../Others/CreateSmallChartData/createSmallChartData\";\nimport timeObj from \"../../../assets/timeObj/timeObj\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TODAY\n} = timeObj;\nconst startingDateObj = new Date(TODAY.getFullYear(), TODAY.getMonth(), 1);\nconst endingDateObj = new Date(TODAY.getFullYear(), TODAY.getMonth() + 1, 0);\nconst startingDateString = createDateStringFormat(startingDateObj);\nconst endingDateString = createDateStringFormat(endingDateObj);\n\nfunction CalendarInfo(props) {\n  _s();\n\n  const {\n    expenseData,\n    categoryExpense\n  } = useContext(ExpenseDataContext);\n  const {\n    displayTheme\n  } = useContext(DisplayThemeContext);\n  const [accIncome, accExpense] = createAccAmount(expenseData, true, startingDateObj, endingDateObj);\n  const [configBar, configPie] = createSmallChartData(expenseData, \"30\", startingDateString, endingDateString, categoryExpense, displayTheme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AccountSection, {\n      title: \"Monthly Overview\",\n      income: accIncome,\n      expense: accExpense,\n      configBar: configBar,\n      configPie: configPie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarInfo, \"PKUYTe6UyVO5edtv2wQNRJHFhyQ=\");\n\n_c = CalendarInfo;\nexport default CalendarInfo;\n/*\n  const accIncome = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"income\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n\n  const accExpense = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"expense\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarInfo\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/MonthlyInfo/MonthlyInfo.js"],"names":["useContext","AccountSection","ExpenseDataContext","DisplayThemeContext","createDateStringFormat","createAccAmount","createSmallChartPreData","createSmallChartData","timeObj","TODAY","startingDateObj","Date","getFullYear","getMonth","endingDateObj","startingDateString","endingDateString","CalendarInfo","props","expenseData","categoryExpense","displayTheme","accIncome","accExpense","configBar","configPie"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,kBAAP,MAA+B,oDAA/B;AACA,OAAOC,mBAAP,MAAgC,sDAAhC;AACA,OAAOC,sBAAP,MAAmC,kEAAnC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,uBAAP,MAAoC,iEAApC;AACA,OAAOC,oBAAP,MAAiC,8DAAjC;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,OAAlB;AACA,MAAME,eAAe,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,EAA9B,EAAgD,CAAhD,CAAxB;AACA,MAAMC,aAAa,GAAG,IAAIH,IAAJ,CAASF,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,KAAmB,CAAjD,EAAoD,CAApD,CAAtB;AAEA,MAAME,kBAAkB,GAAGX,sBAAsB,CAACM,eAAD,CAAjD;AACA,MAAMM,gBAAgB,GAAGZ,sBAAsB,CAACU,aAAD,CAA/C;;AAEA,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCpB,UAAU,CAACE,kBAAD,CAAnD;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAmBrB,UAAU,CAACG,mBAAD,CAAnC;AAEA,QAAM,CAACmB,SAAD,EAAYC,UAAZ,IAA0BlB,eAAe,CAC7Cc,WAD6C,EAE7C,IAF6C,EAG7CT,eAH6C,EAI7CI,aAJ6C,CAA/C;AAOA,QAAM,CAACU,SAAD,EAAYC,SAAZ,IAAyBlB,oBAAoB,CACjDY,WADiD,EAEjD,IAFiD,EAGjDJ,kBAHiD,EAIjDC,gBAJiD,EAKjDI,eALiD,EAMjDC,YANiD,CAAnD;AASA,sBACE;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,MAAM,EAAEC,SAFV;AAGE,MAAA,OAAO,EAAEC,UAHX;AAIE,MAAA,SAAS,EAAEC,SAJb;AAKE,MAAA,SAAS,EAAEC;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/BQR,Y;;KAAAA,Y;AAiCT,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useContext } from \"react\";\nimport AccountSection from \"../../../UI/AccountSection/AccountSection\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport DisplayThemeContext from \"../../../../store/displayTheme/displayTheme--context\";\nimport createDateStringFormat from \"../../../../Others/CreateDateStringFormat/CreateDateStringFormat\";\nimport createAccAmount from \"../../../../Others/createAccAmount\";\nimport createSmallChartPreData from \"../../../../Others/CreateSmallChartData/createSmallChartPreData\";\nimport createSmallChartData from \"../../../../Others/CreateSmallChartData/createSmallChartData\";\nimport timeObj from \"../../../assets/timeObj/timeObj\";\n\nconst { TODAY } = timeObj;\nconst startingDateObj = new Date(TODAY.getFullYear(), TODAY.getMonth(), 1);\nconst endingDateObj = new Date(TODAY.getFullYear(), TODAY.getMonth() + 1, 0);\n\nconst startingDateString = createDateStringFormat(startingDateObj);\nconst endingDateString = createDateStringFormat(endingDateObj);\n\nfunction CalendarInfo(props) {\n  const { expenseData, categoryExpense } = useContext(ExpenseDataContext);\n  const { displayTheme } = useContext(DisplayThemeContext);\n\n  const [accIncome, accExpense] = createAccAmount(\n    expenseData,\n    true,\n    startingDateObj,\n    endingDateObj\n  );\n\n  const [configBar, configPie] = createSmallChartData(\n    expenseData,\n    \"30\",\n    startingDateString,\n    endingDateString,\n    categoryExpense,\n    displayTheme\n  );\n\n  return (\n    <div>\n      <AccountSection\n        title=\"Monthly Overview\"\n        income={accIncome}\n        expense={accExpense}\n        configBar={configBar}\n        configPie={configPie}\n      />\n    </div>\n  );\n}\n\nexport default CalendarInfo;\n\n/*\n  const accIncome = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"income\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n\n  const accExpense = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"expense\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n*/\n"]},"metadata":{},"sourceType":"module"}