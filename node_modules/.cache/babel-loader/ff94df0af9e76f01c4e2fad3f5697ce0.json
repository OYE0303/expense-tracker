{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/store/searchListData/SearchListDataProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useContext } from \"react\";\nimport ExpenseDataContext from \"../expenseData/expenseData--context\";\nimport SearchListDataContext from \"./searchListData--context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\nconst checkboxTime = [{\n  category: \"time\",\n  text: \"today\",\n  value: 0,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"yesterady\",\n  value: 1,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"three days ago\",\n  value: 3,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a week ago\",\n  value: 7,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a month ago\",\n  value: 30,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"three months ago\",\n  value: 90,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a year ago\",\n  value: 100,\n  checked: false\n}, {\n  category: \"price\",\n  text: \"0 ~ $100\",\n  value: [0, 100],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$100 ~ $300\",\n  value: [100, 300],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$300 ~ $500\",\n  value: [300, 500],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$500 ~ $1000\",\n  value: [500, 1000],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"above $1000\",\n  value: [1000, Infinity],\n  checked: false\n}];\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"TIME\":\n      {\n        let dateArr = [];\n        let newState; // days\n\n        if (action.value < 30) {\n          const currenDate = date.getDate();\n\n          for (let i = 0; i <= action.value; i++) {\n            dateArr.push(currenDate - i);\n          }\n\n          newState = state.map(element => dateArr.includes(Number(element.time.slice(8))));\n        } // months\n        else if (action.value === 30 || action.value === 90) {\n          if (action.value === 30) dateArr.push(date.getMonth());else {\n            for (let i = 0; i < 3; i++) {\n              dateArr.push(date.getMonth() - i);\n            }\n          }\n          newState = state.map(element => dateArr.includes(Number(element.time.slice(5, 7))));\n        } // years\n        else {\n          dateArr.push(date.getFullYear() - 1);\n          newState = state.map(element => dateArr.includes(Number(element.time.slice(0, 4))));\n        }\n\n        return newState;\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction SearchListDataProvider(props) {\n  _s();\n\n  const expenseDataCtx = useContext(ExpenseDataContext);\n  const [expenseDataState, dispatchExpenseDataAction] = useReducer(reducer, expenseDataCtx.EXPENSE_DATA);\n  const SearchListDataContextInitialObject = {\n    expenseDataState,\n    dispatchExpenseDataAction\n  };\n  return /*#__PURE__*/_jsxDEV(SearchListDataContext.Provider, {\n    value: SearchListDataContextInitialObject,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchListDataProvider, \"E2lgF7+szyS1Uc7sizk6U5hTWHA=\");\n\n_c = SearchListDataProvider;\nexport default SearchListDataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchListDataProvider\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/store/searchListData/SearchListDataProvider.js"],"names":["useReducer","useContext","ExpenseDataContext","SearchListDataContext","date","Date","checkboxTime","category","text","value","checked","Infinity","reducer","state","action","type","dateArr","newState","currenDate","getDate","i","push","map","element","includes","Number","time","slice","getMonth","getFullYear","SearchListDataProvider","props","expenseDataCtx","expenseDataState","dispatchExpenseDataAction","EXPENSE_DATA","SearchListDataContextInitialObject","children"],"mappings":"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","sourcesContent":["import { useReducer, useContext } from \"react\";\nimport ExpenseDataContext from \"../expenseData/expenseData--context\";\nimport SearchListDataContext from \"./searchListData--context\";\n\nconst date = new Date();\n\nconst checkboxTime = [\n  { category: \"time\", text: \"today\", value: 0, checked: false },\n  { category: \"time\", text: \"yesterady\", value: 1, checked: false },\n  { category: \"time\", text: \"three days ago\", value: 3, checked: false },\n  { category: \"time\", text: \"a week ago\", value: 7, checked: false },\n  { category: \"time\", text: \"a month ago\", value: 30, checked: false },\n  { category: \"time\", text: \"three months ago\", value: 90, checked: false },\n  { category: \"time\", text: \"a year ago\", value: 100, checked: false },\n  { category: \"price\", text: \"0 ~ $100\", value: [0, 100], checked: false },\n  { category: \"price\", text: \"$100 ~ $300\", value: [100, 300], checked: false },\n  { category: \"price\", text: \"$300 ~ $500\", value: [300, 500], checked: false },\n  {\n    category: \"price\",\n    text: \"$500 ~ $1000\",\n    value: [500, 1000],\n    checked: false,\n  },\n  {\n    category: \"price\",\n    text: \"above $1000\",\n    value: [1000, Infinity],\n    checked: false,\n  },\n];\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"TIME\": {\n      let dateArr = [];\n      let newState;\n\n      // days\n      if (action.value < 30) {\n        const currenDate = date.getDate();\n        for (let i = 0; i <= action.value; i++) {\n          dateArr.push(currenDate - i);\n        }\n\n        newState = state.map((element) =>\n          dateArr.includes(Number(element.time.slice(8)))\n        );\n      }\n      // months\n      else if (action.value === 30 || action.value === 90) {\n        if (action.value === 30) dateArr.push(date.getMonth());\n        else {\n          for (let i = 0; i < 3; i++) {\n            dateArr.push(date.getMonth() - i);\n          }\n        }\n\n        newState = state.map((element) =>\n          dateArr.includes(Number(element.time.slice(5, 7)))\n        );\n      }\n      // years\n      else {\n        dateArr.push(date.getFullYear() - 1);\n\n        newState = state.map((element) =>\n          dateArr.includes(Number(element.time.slice(0, 4)))\n        );\n      }\n\n      return newState;\n    }\n\n    default:\n      break;\n  }\n}\n\nfunction SearchListDataProvider(props) {\n  const expenseDataCtx = useContext(ExpenseDataContext);\n  const [expenseDataState, dispatchExpenseDataAction] = useReducer(\n    reducer,\n    expenseDataCtx.EXPENSE_DATA\n  );\n\n  const SearchListDataContextInitialObject = {\n    expenseDataState,\n    dispatchExpenseDataAction,\n  };\n\n  return (\n    <SearchListDataContext.Provider value={SearchListDataContextInitialObject}>\n      {props.children}\n    </SearchListDataContext.Provider>\n  );\n}\n\nexport default SearchListDataProvider;\n"]},"metadata":{},"sourceType":"module"}