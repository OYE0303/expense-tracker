{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext, useReducer } from \"react\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LIST\":\n      {\n        const dayData = new Date(action.value);\n        const day = dayData.getDate();\n        const month = dayData.getMonth() + 1;\n        const year = dayData.getFullYear();\n        const newDayData = state.expenseData.filter(element => Number(element.time.slice(0, 4)) === year && Number(element.time.slice(5, 7)) === month && Number(element.time.slice(8)) === day);\n        return { ...state,\n          expenseDataList: newDayData\n        };\n      }\n\n    case \"COLOR\":\n      {\n        console.log(action.value.style);\n        return { ...state,\n          element: action.value\n        };\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction useDailyExpenseList(date) {\n  _s();\n\n  //   const [dayState, setDayState] = useState(date);\n  const {\n    EXPENSE_DATA\n  } = useContext(ExpenseDataContext);\n  const dayData = new Date(date);\n  const day = dayData.getDate();\n  const month = dayData.getMonth() + 1;\n  const year = dayData.getFullYear();\n  const newDayData = EXPENSE_DATA.filter(element => Number(element.time.slice(0, 4)) === year && Number(element.time.slice(5, 7)) === month && Number(element.time.slice(8)) === day);\n  const [dayState, dayStateDispatch] = useReducer(reducer, {\n    expenseDataList: newDayData,\n    element: \"\",\n    expenseData: EXPENSE_DATA\n  });\n  return [dayState, dayStateDispatch];\n}\n\n_s(useDailyExpenseList, \"Oo0Ns71MyFXTZFLfdfAFpU97SmI=\");\n\nexport default useDailyExpenseList;","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/Others/Custom/useDailyExpenseList.js"],"names":["useState","useContext","useReducer","ExpenseDataContext","reducer","state","action","type","dayData","Date","value","day","getDate","month","getMonth","year","getFullYear","newDayData","expenseData","filter","element","Number","time","slice","expenseDataList","console","log","style","useDailyExpenseList","date","EXPENSE_DATA","dayState","dayStateDispatch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACX,cAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASH,MAAM,CAACI,KAAhB,CAAhB;AACA,cAAMC,GAAG,GAAGH,OAAO,CAACI,OAAR,EAAZ;AACA,cAAMC,KAAK,GAAGL,OAAO,CAACM,QAAR,KAAqB,CAAnC;AACA,cAAMC,IAAI,GAAGP,OAAO,CAACQ,WAAR,EAAb;AAEA,cAAMC,UAAU,GAAGZ,KAAK,CAACa,WAAN,CAAkBC,MAAlB,CAChBC,OAAD,IACEC,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCR,IAArC,IACAM,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCV,KADrC,IAEAQ,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAN,KAAkCZ,GAJnB,CAAnB;AAOA,eAAO,EAAE,GAAGN,KAAL;AAAYmB,UAAAA,eAAe,EAAEP;AAA7B,SAAP;AACD;;AAED,SAAK,OAAL;AAAc;AACZQ,QAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAM,CAACI,KAAP,CAAaiB,KAAzB;AACA,eAAO,EAAE,GAAGtB,KAAL;AAAYe,UAAAA,OAAO,EAAEd,MAAM,CAACI;AAA5B,SAAP;AACD;;AAED;AACE;AAvBJ;AAyBD;;AAED,SAASkB,mBAAT,CAA6BC,IAA7B,EAAmC;AAAA;;AACjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmB7B,UAAU,CAACE,kBAAD,CAAnC;AAEA,QAAMK,OAAO,GAAG,IAAIC,IAAJ,CAASoB,IAAT,CAAhB;AACA,QAAMlB,GAAG,GAAGH,OAAO,CAACI,OAAR,EAAZ;AACA,QAAMC,KAAK,GAAGL,OAAO,CAACM,QAAR,KAAqB,CAAnC;AACA,QAAMC,IAAI,GAAGP,OAAO,CAACQ,WAAR,EAAb;AAEA,QAAMC,UAAU,GAAGa,YAAY,CAACX,MAAb,CAChBC,OAAD,IACEC,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCR,IAArC,IACAM,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCV,KADrC,IAEAQ,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAN,KAAkCZ,GAJnB,CAAnB;AAOA,QAAM,CAACoB,QAAD,EAAWC,gBAAX,IAA+B9B,UAAU,CAACE,OAAD,EAAU;AACvDoB,IAAAA,eAAe,EAAEP,UADsC;AAEvDG,IAAAA,OAAO,EAAE,EAF8C;AAGvDF,IAAAA,WAAW,EAAEY;AAH0C,GAAV,CAA/C;AAMA,SAAO,CAACC,QAAD,EAAWC,gBAAX,CAAP;AACD;;GAvBQJ,mB;;AAyBT,eAAeA,mBAAf","sourcesContent":["import { useState, useContext, useReducer } from \"react\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LIST\": {\n      const dayData = new Date(action.value);\n      const day = dayData.getDate();\n      const month = dayData.getMonth() + 1;\n      const year = dayData.getFullYear();\n\n      const newDayData = state.expenseData.filter(\n        (element) =>\n          Number(element.time.slice(0, 4)) === year &&\n          Number(element.time.slice(5, 7)) === month &&\n          Number(element.time.slice(8)) === day\n      );\n\n      return { ...state, expenseDataList: newDayData };\n    }\n\n    case \"COLOR\": {\n      console.log(action.value.style);\n      return { ...state, element: action.value };\n    }\n\n    default:\n      break;\n  }\n}\n\nfunction useDailyExpenseList(date) {\n  //   const [dayState, setDayState] = useState(date);\n  const { EXPENSE_DATA } = useContext(ExpenseDataContext);\n\n  const dayData = new Date(date);\n  const day = dayData.getDate();\n  const month = dayData.getMonth() + 1;\n  const year = dayData.getFullYear();\n\n  const newDayData = EXPENSE_DATA.filter(\n    (element) =>\n      Number(element.time.slice(0, 4)) === year &&\n      Number(element.time.slice(5, 7)) === month &&\n      Number(element.time.slice(8)) === day\n  );\n\n  const [dayState, dayStateDispatch] = useReducer(reducer, {\n    expenseDataList: newDayData,\n    element: \"\",\n    expenseData: EXPENSE_DATA,\n  });\n\n  return [dayState, dayStateDispatch];\n}\n\nexport default useDailyExpenseList;\n"]},"metadata":{},"sourceType":"module"}