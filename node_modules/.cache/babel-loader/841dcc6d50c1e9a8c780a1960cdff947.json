{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/UI/AddDataForm/FormMainCategory.js\";\nimport FormContainer from \"./FormContainer\";\nimport Select from \"../Select/Select\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./AddDataForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormMainCategory(props) {\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"mainCategory\",\n      className: `${style.label} capitalize`,\n      children: [\"main category\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center--flex\",\n        children: props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"mainCategory\",\n      name: \"aaa\",\n      className: style.input,\n      onChange: props.mainCategoryChangeHandler,\n      children: props.mainCategoryArr.map(element =>\n      /*#__PURE__*/\n      // Reference 1\n      _jsxDEV(\"option\", {\n        value: element,\n        children: element\n      }, `${element}-${props.type}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FormMainCategory;\nexport default FormMainCategory;\n/*\nAlthough it seems each type of main category array won't have duplicate name\nbecause we stop user to add duplicate name in addMainCategoryModal\nBUT\nwe do allow user to have same category name in differtn type\nFor example, in both expense and income\nwe allow user to have same \"others\" main category\nBut if we use each name of element as \"key\" in <option></option>\nit will cause unexpected behavoir\nwhen user change the type, main category array in <option></option> always first show that duplicate name\ni guess it's react for the performance issue\nso we use uuidv4() to make sure every single main category name in both expense and income can have unique key\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"FormMainCategory\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/UI/AddDataForm/FormMainCategory.js"],"names":["FormContainer","Select","v4","uuidv4","style","FormMainCategory","props","label","icon","input","mainCategoryChangeHandler","mainCategoryArr","map","element","type"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,sBACE,QAAC,aAAD;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,cAAf;AAA8B,MAAA,SAAS,EAAG,GAAEF,KAAK,CAACG,KAAM,aAAxD;AAAA,+CAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BD,KAAK,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,SAAS,EAAEJ,KAAK,CAACK,KAHnB;AAIE,MAAA,QAAQ,EAAEH,KAAK,CAACI,yBAJlB;AAAA,gBAMGJ,KAAK,CAACK,eAAN,CAAsBC,GAAtB,CAA2BC,OAAD;AAAA;AACzB;AACA;AAAQ,QAAA,KAAK,EAAEA,OAAf;AAAA,kBACGA;AADH,SAA8B,GAAEA,OAAQ,IAAGP,KAAK,CAACQ,IAAK,EAAtD;AAAA;AAAA;AAAA;AAAA,cAFD;AANH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;KAtBQT,gB;AAwBT,eAAeA,gBAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import FormContainer from \"./FormContainer\";\nimport Select from \"../Select/Select\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./AddDataForm.module.css\";\n\nfunction FormMainCategory(props) {\n  return (\n    <FormContainer>\n      <label htmlFor=\"mainCategory\" className={`${style.label} capitalize`}>\n        main category\n        <div className=\"center--flex\">{props.icon}</div>\n      </label>\n      <Select\n        id=\"mainCategory\"\n        name=\"aaa\"\n        className={style.input}\n        onChange={props.mainCategoryChangeHandler}\n      >\n        {props.mainCategoryArr.map((element) => (\n          // Reference 1\n          <option value={element} key={`${element}-${props.type}`}>\n            {element}\n          </option>\n        ))}\n      </Select>\n    </FormContainer>\n  );\n}\n\nexport default FormMainCategory;\n/*\nAlthough it seems each type of main category array won't have duplicate name\nbecause we stop user to add duplicate name in addMainCategoryModal\nBUT\nwe do allow user to have same category name in differtn type\nFor example, in both expense and income\nwe allow user to have same \"others\" main category\nBut if we use each name of element as \"key\" in <option></option>\nit will cause unexpected behavoir\nwhen user change the type, main category array in <option></option> always first show that duplicate name\ni guess it's react for the performance issue\nso we use uuidv4() to make sure every single main category name in both expense and income can have unique key\n*/\n"]},"metadata":{},"sourceType":"module"}