{"ast":null,"code":"import createStandardLabelsArr from \"./createStandardLabelsArr\";\nimport createLabelsArr from \"./createLabelsArr\";\nimport createBarDataArr from \"./createBarDataArr\";\nimport createPieDataArr from \"./createPieDataArr\";\nimport createFilteredData from \"./createFilteredData\";\nimport createFinalDataArr from \"./createFinalDataArr\";\n\nfunction createConfigObj(mainType, timeDuration, startingDate, endingDate, expenseData, mainCategory, subCategory, theme, showLabel = false, mainCategoryData = [], subCategoryData = []) {\n  const [labels, data] = createFinalDataArr(mainType, timeDuration, startingDate, endingDate, expenseData, mainCategory, subCategory, showLabel, mainCategoryData, subCategoryData);\n\n  if (mainType === \"time\") {\n    if (mainCategory === \"net\") {}\n\n    let legend = null;\n    /*\n    Only show chart label above when \n    1. In the big chart section\n    2. Chart is one week, six month or twelve month\n    Too many labels is messy\n    */\n\n    if (showLabel && (timeDuration === \"7\" || timeDuration === \"6\" || timeDuration === \"12\")) {\n      legend = {\n        onClick: (e, legendItem, legend) => {\n          const index = legend.chart.data.labels.indexOf(legendItem.text);\n          legend.chart.toggleDataVisibility(index);\n          legend.chart.update();\n        },\n        labels: {\n          generateLabels: chart => {\n            const colorLength = chart.data.datasets[0].borderColor.length;\n            const visibility = [];\n\n            for (let i = 0; i < chart.data.labels.length; i++) {\n              if (chart.getDataVisibility(i)) visibility.push(false);else visibility.push(true);\n            }\n\n            return chart.data.labels.map((label, index) => {\n              const newIndex = index % colorLength;\n              return {\n                text: label,\n                strokeStyle: chart.data.datasets[0].borderColor[newIndex],\n                fillStyle: chart.data.datasets[0].backgroundColor[newIndex],\n                hidden: visibility[index]\n              };\n            });\n          }\n        }\n      };\n    }\n\n    return {\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"\",\n          data: data,\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(255, 159, 64, 0.2)\", \"rgba(255, 205, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(201, 203, 207, 0.2)\"],\n          borderColor: [\"rgb(255, 99, 132)\", \"rgb(255, 159, 64)\", \"rgb(255, 205, 86)\", \"rgb(75, 192, 192)\", \"rgb(54, 162, 235)\", \"rgb(153, 102, 255)\", \"rgb(201, 203, 207)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        plugins: {\n          tooltip: {\n            yAlign: \"bottom\",\n            displayColors: false,\n            backgroundColor: tooltipItem => {\n              return tooltipItem.tooltip.labelColors[0].borderColor;\n            }\n          },\n          legend\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              color: `${theme === \"dark\" ? \"rgb(190,190,190)\" : \"rgb(70,70,70)\"}`\n            }\n          },\n          x: {\n            ticks: {\n              color: `${theme === \"dark\" ? \"rgb(190,190,190)\" : \"rgb(70,70,70)\"}`\n            }\n          }\n        }\n      }\n    };\n  } else {\n    return {\n      type: \"pie\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"My First Dataset\",\n          data: data,\n          backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(255, 159, 64)\", \"rgb(255, 205, 86)\", \"rgb(75, 192, 192)\", \"rgb(54, 162, 235)\", \"rgb(153, 102, 255)\", \"rgb(201, 203, 207)\"],\n          hoverOffset: 4\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                size: 14\n              },\n              color: `${theme === \"dark\" ? \"rgb(190,190,190)\" : \"rgb(70,70,70)\"}`\n            }\n          }\n        }\n      },\n      plugins: [100]\n    };\n  }\n}\n\nexport default createConfigObj;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateChartData/createConfigObj.js"],"names":["createStandardLabelsArr","createLabelsArr","createBarDataArr","createPieDataArr","createFilteredData","createFinalDataArr","createConfigObj","mainType","timeDuration","startingDate","endingDate","expenseData","mainCategory","subCategory","theme","showLabel","mainCategoryData","subCategoryData","labels","data","legend","onClick","e","legendItem","index","chart","indexOf","text","toggleDataVisibility","update","generateLabels","colorLength","datasets","borderColor","length","visibility","i","getDataVisibility","push","map","label","newIndex","strokeStyle","fillStyle","backgroundColor","hidden","type","borderWidth","options","maintainAspectRatio","plugins","tooltip","yAlign","displayColors","tooltipItem","labelColors","scales","y","beginAtZero","ticks","color","x","hoverOffset","font","size"],"mappings":"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","sourcesContent":["import createStandardLabelsArr from \"./createStandardLabelsArr\";\nimport createLabelsArr from \"./createLabelsArr\";\nimport createBarDataArr from \"./createBarDataArr\";\nimport createPieDataArr from \"./createPieDataArr\";\nimport createFilteredData from \"./createFilteredData\";\nimport createFinalDataArr from \"./createFinalDataArr\";\n\nfunction createConfigObj(\n  mainType,\n  timeDuration,\n  startingDate,\n  endingDate,\n  expenseData,\n  mainCategory,\n  subCategory,\n  theme,\n  showLabel = false,\n  mainCategoryData = [],\n  subCategoryData = []\n) {\n  const [labels, data] = createFinalDataArr(\n    mainType,\n    timeDuration,\n    startingDate,\n    endingDate,\n    expenseData,\n    mainCategory,\n    subCategory,\n    showLabel,\n    mainCategoryData,\n    subCategoryData\n  );\n  if (mainType === \"time\") {\n    if (mainCategory === \"net\") {\n    }\n\n    let legend = null;\n\n    /*\n    Only show chart label above when \n    1. In the big chart section\n    2. Chart is one week, six month or twelve month\n    Too many labels is messy\n    */\n    if (\n      showLabel &&\n      (timeDuration === \"7\" || timeDuration === \"6\" || timeDuration === \"12\")\n    ) {\n      legend = {\n        onClick: (e, legendItem, legend) => {\n          const index = legend.chart.data.labels.indexOf(legendItem.text);\n          legend.chart.toggleDataVisibility(index);\n          legend.chart.update();\n        },\n        labels: {\n          generateLabels: (chart) => {\n            const colorLength = chart.data.datasets[0].borderColor.length;\n            const visibility = [];\n            for (let i = 0; i < chart.data.labels.length; i++) {\n              if (chart.getDataVisibility(i)) visibility.push(false);\n              else visibility.push(true);\n            }\n            return chart.data.labels.map((label, index) => {\n              const newIndex = index % colorLength;\n              return {\n                text: label,\n                strokeStyle: chart.data.datasets[0].borderColor[newIndex],\n                fillStyle: chart.data.datasets[0].backgroundColor[newIndex],\n                hidden: visibility[index],\n              };\n            });\n          },\n        },\n      };\n    }\n\n    return {\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: \"\",\n            data: data,\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(255, 159, 64, 0.2)\",\n              \"rgba(255, 205, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n              \"rgba(201, 203, 207, 0.2)\",\n            ],\n            borderColor: [\n              \"rgb(255, 99, 132)\",\n              \"rgb(255, 159, 64)\",\n              \"rgb(255, 205, 86)\",\n              \"rgb(75, 192, 192)\",\n              \"rgb(54, 162, 235)\",\n              \"rgb(153, 102, 255)\",\n              \"rgb(201, 203, 207)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        plugins: {\n          tooltip: {\n            yAlign: \"bottom\",\n            displayColors: false,\n            backgroundColor: (tooltipItem) => {\n              return tooltipItem.tooltip.labelColors[0].borderColor;\n            },\n          },\n          legend,\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              color: `${\n                theme === \"dark\" ? \"rgb(190,190,190)\" : \"rgb(70,70,70)\"\n              }`,\n            },\n          },\n          x: {\n            ticks: {\n              color: `${\n                theme === \"dark\" ? \"rgb(190,190,190)\" : \"rgb(70,70,70)\"\n              }`,\n            },\n          },\n        },\n      },\n    };\n  } else {\n    return {\n      type: \"pie\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: \"My First Dataset\",\n            data: data,\n            backgroundColor: [\n              \"rgb(255, 99, 132)\",\n              \"rgb(255, 159, 64)\",\n              \"rgb(255, 205, 86)\",\n              \"rgb(75, 192, 192)\",\n              \"rgb(54, 162, 235)\",\n              \"rgb(153, 102, 255)\",\n              \"rgb(201, 203, 207)\",\n            ],\n            hoverOffset: 4,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              font: {\n                size: 14,\n              },\n              color: `${\n                theme === \"dark\" ? \"rgb(190,190,190)\" : \"rgb(70,70,70)\"\n              }`,\n            },\n          },\n        },\n      },\n      plugins: [100],\n    };\n  }\n}\n\nexport default createConfigObj;\n"]},"metadata":{},"sourceType":"module"}