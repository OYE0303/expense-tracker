{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/AddingSubCategoryModal/AddingSubCategoryModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddingSubCategoryModal(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n  const {\n    categoryExpense,\n    categoryIncome,\n    addSubCategory\n  } = useContext(CategoryContext); // the sub category has either to be in expense or income\n\n  const subCategoryNameArr = categoryExpense[props.mainCategory] || categoryIncome[props.mainCategory];\n\n  function inputTextChangeHandler(e) {\n    setName(e.target.value);\n    setDuplicate(subCategoryNameArr.includes(e.target.value));\n  }\n\n  function submitHandler(e) {\n    e.preventDefault(); // the logic here is exactly as same as adding main category\n\n    addSubCategory(name, props.category, props.mainCategory);\n    props.addSubCategoryAndModal(null, name);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: style.modal,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      className: style.title,\n      children: \"add sub category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"subtitle__container\"],\n      children: /*#__PURE__*/_jsxDEV(SubTitle, {\n        className: style.subtitle,\n        children: [\"you're adding sub category of \", props.mainCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"big__container\"],\n        children: [/*#__PURE__*/_jsxDEV(InputText, {\n          label: \"name\",\n          classInputContainer: style[\"input__container\"],\n          value: name,\n          onChange: inputTextChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), duplicate && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.warning,\n          children: [/*#__PURE__*/_jsxDEV(AiFillWarning, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }, this), \" duplicate category name\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"btn__container\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          className: `${style.btn} ${style[\"btn--isValid\"]}`,\n          onClick: props.addSubCategoryModalToggler,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button\n        /*\n        Note that \n        if disabled={true}, it means do NOT let user submit the form\n        so the logic would be, we only want it to be true if the data is NOT valid\n         in this case, if\n        1) there is no name (input)\n        2) the name is duplicate\n        then we want the button to be disabled\n         note that this condition is exactly opposite of the className below\n        */\n        , {\n          disabled: name.trim().length === 0 || duplicate,\n          type: \"submit\",\n          className: name.trim().length > 0 && !duplicate ? `${style.btn} ${style[\"btn--isValid\"]}` : `${style.btn}`,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddingSubCategoryModal, \"OqL0jQ2s/kqmRPR26zO5rW1C2HA=\");\n\n_c = AddingSubCategoryModal;\nexport default AddingSubCategoryModal;\n/*\nimport { useReducer, useEffect } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount + 1,\n      };\n    }\n    case \"REMOVE_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount - 1,\n      };\n    }\n\n    case \"INPUT_TEXT_CHANGE\": {\n      const nameArr = [...state.nameArr];\n\n      nameArr[action.id] = action.value;\n\n      return { ...state, nameArr, test: action.value };\n    }\n\n    case \"aa\": {\n      return { state };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction AddingSubCategoryModal(props) {\n  const [form, formDispatch] = useReducer(reducer, {\n    nameArr: [\"\"],\n    test: \"\",\n    inputTextAmount: 1,\n    inputTextChangeHandler,\n  });\n\n  function btnKeepAddingClickHandler() {\n    formDispatch({ type: \"ADD_INPUT_TEXT\" });\n  }\n\n  function btnRemoveAddingClickHandler() {\n    formDispatch({ type: \"REMOVE_INPUT_TEXT\" });\n  }\n\n  function inputTextChangeHandler(e) {\n    formDispatch({\n      type: \"INPUT_TEXT_CHANGE\",\n      id: e.target.dataset.id,\n      value: e.target.value,\n    });\n  }\n\n  let inputTextAmountArr = [];\n\n  for (let i = 0; i < form.inputTextAmount; i++) {\n    inputTextAmountArr.push(\n      <InputText\n        key={uuidv4()}\n        label=\"name\"\n        classInputContainer={style[\"input__container\"]}\n        dataID={i}\n      />\n    );\n  }\n\n  return (\n    <Modal>\n      <Title className={style.title}>add sub category</Title>\n      <HorizontalLine />\n      <div className={style[\"subtitle__container\"]}>\n        <SubTitle className={style.subtitle}>\n          you're adding sub category\n        </SubTitle>\n        <SubTitle className={style.subtitle}>of food</SubTitle>\n      </div>\n      <form\n        className={\n          inputTextAmountArr.length > 3\n            ? `${style.overflow} ${style.form}`\n            : `${style.form}`\n        }\n      >\n        {inputTextAmountArr}\n        <div className={style[\"btn__container--small\"]}>\n          <Button\n            disabled={inputTextAmountArr.length === 1}\n            className={\n              inputTextAmountArr.length === 1\n                ? `${style[\"btn--disabled--small\"]}`\n                : `${style[\"btn--small\"]}`\n            }\n            type=\"button\"\n            onClick={btnRemoveAddingClickHandler}\n          >\n            remove adding\n          </Button>\n          <Button\n            className={style[\"btn--small\"]}\n            type=\"button\"\n            onClick={btnKeepAddingClickHandler}\n          >\n            keep adding\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddingSubCategoryModal;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AddingSubCategoryModal\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/AddingSubCategoryModal/AddingSubCategoryModal.js"],"names":["useState","useContext","Modal","Title","SubTitle","HorizontalLine","InputText","Button","CategoryContext","style","AiFillWarning","AddingSubCategoryModal","props","name","setName","duplicate","setDuplicate","categoryExpense","categoryIncome","addSubCategory","subCategoryNameArr","mainCategory","inputTextChangeHandler","e","target","value","includes","submitHandler","preventDefault","category","addSubCategoryAndModal","modal","title","subtitle","warning","btn","addSubCategoryModalToggler","trim","length"],"mappings":"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":["import { useState, useContext } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport { AiFillWarning } from \"react-icons/ai\";\n\nfunction AddingSubCategoryModal(props) {\n  const [name, setName] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n\n  const { categoryExpense, categoryIncome, addSubCategory } =\n    useContext(CategoryContext);\n\n  // the sub category has either to be in expense or income\n  const subCategoryNameArr =\n    categoryExpense[props.mainCategory] || categoryIncome[props.mainCategory];\n\n  function inputTextChangeHandler(e) {\n    setName(e.target.value);\n\n    setDuplicate(subCategoryNameArr.includes(e.target.value));\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    // the logic here is exactly as same as adding main category\n\n    addSubCategory(name, props.category, props.mainCategory);\n\n    props.addSubCategoryAndModal(null, name);\n  }\n\n  return (\n    <Modal className={style.modal}>\n      <Title className={style.title}>add sub category</Title>\n      <HorizontalLine />\n      <div className={style[\"subtitle__container\"]}>\n        <SubTitle className={style.subtitle}>\n          you're adding sub category of {props.mainCategory}\n        </SubTitle>\n      </div>\n      <form onSubmit={submitHandler}>\n        <div className={style[\"big__container\"]}>\n          <InputText\n            label=\"name\"\n            classInputContainer={style[\"input__container\"]}\n            value={name}\n            onChange={inputTextChangeHandler}\n          />\n          {duplicate && (\n            <p className={style.warning}>\n              {<AiFillWarning />} duplicate category name\n            </p>\n          )}\n        </div>\n\n        <div className={style[\"btn__container\"]}>\n          <Button\n            type=\"button\"\n            className={`${style.btn} ${style[\"btn--isValid\"]}`}\n            onClick={props.addSubCategoryModalToggler}\n          >\n            cancel\n          </Button>\n          <Button\n            /*\n            Note that \n            if disabled={true}, it means do NOT let user submit the form\n            so the logic would be, we only want it to be true if the data is NOT valid\n\n            in this case, if\n            1) there is no name (input)\n            2) the name is duplicate\n            then we want the button to be disabled\n\n            note that this condition is exactly opposite of the className below\n            */\n            disabled={name.trim().length === 0 || duplicate}\n            type=\"submit\"\n            className={\n              name.trim().length > 0 && !duplicate\n                ? `${style.btn} ${style[\"btn--isValid\"]}`\n                : `${style.btn}`\n            }\n          >\n            add\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddingSubCategoryModal;\n\n/*\nimport { useReducer, useEffect } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport SubTitle from \"../SubTitle/SubTitle\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport InputText from \"../InputText/InputText\";\nimport Button from \"../Button\";\nimport style from \"./AddingSubCategoryModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount + 1,\n      };\n    }\n    case \"REMOVE_INPUT_TEXT\": {\n      return {\n        ...state,\n        inputTextAmount: state.inputTextAmount - 1,\n      };\n    }\n\n    case \"INPUT_TEXT_CHANGE\": {\n      const nameArr = [...state.nameArr];\n\n      nameArr[action.id] = action.value;\n\n      return { ...state, nameArr, test: action.value };\n    }\n\n    case \"aa\": {\n      return { state };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction AddingSubCategoryModal(props) {\n  const [form, formDispatch] = useReducer(reducer, {\n    nameArr: [\"\"],\n    test: \"\",\n    inputTextAmount: 1,\n    inputTextChangeHandler,\n  });\n\n  function btnKeepAddingClickHandler() {\n    formDispatch({ type: \"ADD_INPUT_TEXT\" });\n  }\n\n  function btnRemoveAddingClickHandler() {\n    formDispatch({ type: \"REMOVE_INPUT_TEXT\" });\n  }\n\n  function inputTextChangeHandler(e) {\n    formDispatch({\n      type: \"INPUT_TEXT_CHANGE\",\n      id: e.target.dataset.id,\n      value: e.target.value,\n    });\n  }\n\n  let inputTextAmountArr = [];\n\n  for (let i = 0; i < form.inputTextAmount; i++) {\n    inputTextAmountArr.push(\n      <InputText\n        key={uuidv4()}\n        label=\"name\"\n        classInputContainer={style[\"input__container\"]}\n        dataID={i}\n      />\n    );\n  }\n\n  return (\n    <Modal>\n      <Title className={style.title}>add sub category</Title>\n      <HorizontalLine />\n      <div className={style[\"subtitle__container\"]}>\n        <SubTitle className={style.subtitle}>\n          you're adding sub category\n        </SubTitle>\n        <SubTitle className={style.subtitle}>of food</SubTitle>\n      </div>\n      <form\n        className={\n          inputTextAmountArr.length > 3\n            ? `${style.overflow} ${style.form}`\n            : `${style.form}`\n        }\n      >\n        {inputTextAmountArr}\n        <div className={style[\"btn__container--small\"]}>\n          <Button\n            disabled={inputTextAmountArr.length === 1}\n            className={\n              inputTextAmountArr.length === 1\n                ? `${style[\"btn--disabled--small\"]}`\n                : `${style[\"btn--small\"]}`\n            }\n            type=\"button\"\n            onClick={btnRemoveAddingClickHandler}\n          >\n            remove adding\n          </Button>\n          <Button\n            className={style[\"btn--small\"]}\n            type=\"button\"\n            onClick={btnKeepAddingClickHandler}\n          >\n            keep adding\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddingSubCategoryModal;\n*/\n"]},"metadata":{},"sourceType":"module"}