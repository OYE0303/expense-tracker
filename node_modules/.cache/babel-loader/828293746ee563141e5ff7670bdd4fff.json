{"ast":null,"code":"import compareTimeWithRange from \"../compareTimeWithRange\";\n\nfunction createPieDataArr(startingDate, endingDate, expenseData, mainCategory, subCategory) {\n  const startingDateObj = new Date(startingDate);\n  const endingDateObj = new Date(endingDate);\n  const filteredData = expenseData.filter(element => compareTimeWithRange(element, startingDateObj, endingDateObj) && element.category === mainCategory);\n  const labelsSet = new Set();\n\n  for (let data of filteredData) {\n    if (labelsSet.size === subCategory.length) break;\n    labelsSet.add(data.mainCate);\n  }\n\n  const labels = Array.from(labelsSet);\n  const newFilteredData = {};\n  labels.forEach(label => {\n    newFilteredData[label] = [];\n  });\n  filteredData.forEach(data => {\n    if (newFilteredData[data.mainCate]) newFilteredData[data.mainCate].push(data);else newFilteredData[data.mainCate] = [data];\n  });\n  const dataArr = [];\n\n  for (const value of Object.values(newFilteredData)) {\n    if (value.length > 0) dataArr.push(value.reduce((acc, cur) => acc += Number(cur.price), 0));else dataArr.push(0);\n  } ////////////////////////////////////////////////\n\n\n  return [labels, dataArr];\n}\n\nexport default createPieDataArr;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateChartData/createPieDataArr.js"],"names":["compareTimeWithRange","createPieDataArr","startingDate","endingDate","expenseData","mainCategory","subCategory","startingDateObj","Date","endingDateObj","filteredData","filter","element","category","labelsSet","Set","data","size","length","add","mainCate","labels","Array","from","newFilteredData","forEach","label","push","dataArr","value","Object","values","reduce","acc","cur","Number","price"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,yBAAjC;;AAEA,SAASC,gBAAT,CACEC,YADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAME;AACA,QAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASN,YAAT,CAAxB;AACA,QAAMO,aAAa,GAAG,IAAID,IAAJ,CAASL,UAAT,CAAtB;AACA,QAAMO,YAAY,GAAGN,WAAW,CAACO,MAAZ,CAClBC,OAAD,IACEZ,oBAAoB,CAACY,OAAD,EAAUL,eAAV,EAA2BE,aAA3B,CAApB,IACAG,OAAO,CAACC,QAAR,KAAqBR,YAHJ,CAArB;AAMA,QAAMS,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AACA,OAAK,IAAIC,IAAT,IAAiBN,YAAjB,EAA+B;AAC7B,QAAII,SAAS,CAACG,IAAV,KAAmBX,WAAW,CAACY,MAAnC,EAA2C;AAC3CJ,IAAAA,SAAS,CAACK,GAAV,CAAcH,IAAI,CAACI,QAAnB;AACD;;AACD,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWT,SAAX,CAAf;AAEA,QAAMU,eAAe,GAAG,EAAxB;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAgBC,KAAD,IAAW;AACxBF,IAAAA,eAAe,CAACE,KAAD,CAAf,GAAyB,EAAzB;AACD,GAFD;AAIAhB,EAAAA,YAAY,CAACe,OAAb,CAAsBT,IAAD,IAAU;AAC7B,QAAIQ,eAAe,CAACR,IAAI,CAACI,QAAN,CAAnB,EACEI,eAAe,CAACR,IAAI,CAACI,QAAN,CAAf,CAA+BO,IAA/B,CAAoCX,IAApC,EADF,KAEKQ,eAAe,CAACR,IAAI,CAACI,QAAN,CAAf,GAAiC,CAACJ,IAAD,CAAjC;AACN,GAJD;AAMA,QAAMY,OAAO,GAAG,EAAhB;;AAEA,OAAK,MAAMC,KAAX,IAAoBC,MAAM,CAACC,MAAP,CAAcP,eAAd,CAApB,EAAoD;AAClD,QAAIK,KAAK,CAACX,MAAN,GAAe,CAAnB,EACEU,OAAO,CAACD,IAAR,CAAaE,KAAK,CAACG,MAAN,CAAa,CAACC,GAAD,EAAMC,GAAN,KAAeD,GAAG,IAAIE,MAAM,CAACD,GAAG,CAACE,KAAL,CAAzC,EAAuD,CAAvD,CAAb,EADF,KAEKR,OAAO,CAACD,IAAR,CAAa,CAAb;AACN,GAjCD,CAmCA;;;AAEA,SAAO,CAACN,MAAD,EAASO,OAAT,CAAP;AACD;;AAED,eAAe3B,gBAAf","sourcesContent":["import compareTimeWithRange from \"../compareTimeWithRange\";\n\nfunction createPieDataArr(\n  startingDate,\n  endingDate,\n  expenseData,\n  mainCategory,\n  subCategory\n) {\n  const startingDateObj = new Date(startingDate);\n  const endingDateObj = new Date(endingDate);\n  const filteredData = expenseData.filter(\n    (element) =>\n      compareTimeWithRange(element, startingDateObj, endingDateObj) &&\n      element.category === mainCategory\n  );\n\n  const labelsSet = new Set();\n  for (let data of filteredData) {\n    if (labelsSet.size === subCategory.length) break;\n    labelsSet.add(data.mainCate);\n  }\n  const labels = Array.from(labelsSet);\n\n  const newFilteredData = {};\n  labels.forEach((label) => {\n    newFilteredData[label] = [];\n  });\n\n  filteredData.forEach((data) => {\n    if (newFilteredData[data.mainCate])\n      newFilteredData[data.mainCate].push(data);\n    else newFilteredData[data.mainCate] = [data];\n  });\n\n  const dataArr = [];\n\n  for (const value of Object.values(newFilteredData)) {\n    if (value.length > 0)\n      dataArr.push(value.reduce((acc, cur) => (acc += Number(cur.price)), 0));\n    else dataArr.push(0);\n  }\n\n  ////////////////////////////////////////////////\n\n  return [labels, dataArr];\n}\n\nexport default createPieDataArr;\n"]},"metadata":{},"sourceType":"module"}