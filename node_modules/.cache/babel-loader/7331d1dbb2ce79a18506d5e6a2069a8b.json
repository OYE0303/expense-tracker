{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/UI/DeleteModal/DeleteModal.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport Button from \"../Button/Button\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport SearchListDataContext from \"../../../store/searchListData/searchListData--context\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport EditModalContext from \"../../../store/editModal/editModal--context\";\nimport DescriptionModal from \"../DescriptionModal/DescriptionModal\";\nimport { FaRegHandPointRight } from \"react-icons/fa\";\nimport style from \"./DeleteModal.module.css\"; // Reference 1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeleteModal(props) {\n  _s();\n\n  const {\n    removeExpenseData\n  } = useContext(ExpenseDataContext);\n  const {\n    setFilteredData\n  } = useContext(SearchListDataContext);\n  const [, setEditModal] = useContext(EditModalContext);\n  const [descriptionModal, setDescriptionModal] = useState(false);\n  const dataInfoKey = Object.keys(props.dataInfo);\n  const dataInfoValue = Object.values(props.dataInfo);\n  const infoItem = dataInfoValue.map((data, index) => {\n    let dataItemName;\n    if (dataInfoKey[index] === \"mainCate\") dataItemName = \"main category\";else if (dataInfoKey[index] === \"subCate\") dataItemName = \"sub category\";else dataItemName = dataInfoKey[index];\n    if (dataItemName === \"description\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: descriptionModalToggler,\n      className: style[\"info__item\"],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style[\"info__category\"],\n        children: [/*#__PURE__*/_jsxDEV(FaRegHandPointRight, {\n          className: style.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), \" \", dataItemName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, dataInfoKey[index], true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"info__item\"],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style[\"info__category\"],\n        children: [/*#__PURE__*/_jsxDEV(FaRegHandPointRight, {\n          className: style.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), \" \", dataItemName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, dataInfoKey[index], true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  });\n\n  function descriptionModalToggler() {\n    setDescriptionModal(prev => !prev);\n  }\n\n  function closeDeleteModal() {\n    props.setDeleteModal(false);\n  }\n\n  function removeExpenseItemHandler() {\n    props.setDeleteModal(false); // remove from expense data provider\n\n    removeExpenseData(props.id); // remove from Search List\n\n    if (setFilteredData) setFilteredData({\n      type: \"DELETE\",\n      id: props.id\n    });\n    setEditModal({\n      show: true,\n      type: \"data\",\n      value: \"delete\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [descriptionModal && /*#__PURE__*/_jsxDEV(DescriptionModal, {\n      descriptionModalToggler: descriptionModalToggler,\n      children: props.dataInfo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      classModal: style.modal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: style.title,\n          children: [\"are you sure \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 26\n          }, this), \" to delete this data?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"info__container\"],\n        children: infoItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.description,\n        children: [\"there is no way getting back this data \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 50\n        }, this), \" once you delete it\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"btn__container\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: closeDeleteModal,\n          className: `${style.btn} uppercase`,\n          children: \"no\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: removeExpenseItemHandler,\n          className: `${style.btn} uppercase`,\n          children: \"yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DeleteModal, \"SfE9udx1BqQ+VcPVDXikkJY4mUk=\");\n\n_c = DeleteModal;\nexport default DeleteModal;\n/*\nReference 1\nThere are three different places need DeleteModal component\n1. Home\n2. Calendar List Modal\n3. Search List\nSo we need different function to handle the data once user delete the data\n\nNote that DeleteModal only from \"DeleteModal\" because there's only way to show this modal\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/UI/DeleteModal/DeleteModal.js"],"names":["useContext","useState","Modal","Title","Button","ExpenseDataContext","SearchListDataContext","HorizontalLine","EditModalContext","DescriptionModal","FaRegHandPointRight","style","DeleteModal","props","removeExpenseData","setFilteredData","setEditModal","descriptionModal","setDescriptionModal","dataInfoKey","Object","keys","dataInfo","dataInfoValue","values","infoItem","map","data","index","dataItemName","descriptionModalToggler","icon","prev","closeDeleteModal","setDeleteModal","removeExpenseItemHandler","id","type","show","value","description","modal","title","btn"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Title from \"../Title/Title\";\nimport Button from \"../Button/Button\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport SearchListDataContext from \"../../../store/searchListData/searchListData--context\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport EditModalContext from \"../../../store/editModal/editModal--context\";\nimport DescriptionModal from \"../DescriptionModal/DescriptionModal\";\nimport { FaRegHandPointRight } from \"react-icons/fa\";\nimport style from \"./DeleteModal.module.css\";\n\n// Reference 1\nfunction DeleteModal(props) {\n  const { removeExpenseData } = useContext(ExpenseDataContext);\n  const { setFilteredData } = useContext(SearchListDataContext);\n  const [, setEditModal] = useContext(EditModalContext);\n  const [descriptionModal, setDescriptionModal] = useState(false);\n  const dataInfoKey = Object.keys(props.dataInfo);\n  const dataInfoValue = Object.values(props.dataInfo);\n\n  const infoItem = dataInfoValue.map((data, index) => {\n    let dataItemName;\n    if (dataInfoKey[index] === \"mainCate\") dataItemName = \"main category\";\n    else if (dataInfoKey[index] === \"subCate\") dataItemName = \"sub category\";\n    else dataItemName = dataInfoKey[index];\n\n    if (dataItemName === \"description\")\n      return (\n        <div\n          onClick={descriptionModalToggler}\n          key={dataInfoKey[index]}\n          className={style[\"info__item\"]}\n        >\n          <p className={style[\"info__category\"]}>\n            <FaRegHandPointRight className={style.icon} /> {dataItemName}:\n          </p>\n          <p>{data}</p>\n        </div>\n      );\n    else\n      return (\n        <div key={dataInfoKey[index]} className={style[\"info__item\"]}>\n          <p className={style[\"info__category\"]}>\n            <FaRegHandPointRight className={style.icon} /> {dataItemName}:\n          </p>\n          <p>{data}</p>\n        </div>\n      );\n  });\n\n  function descriptionModalToggler() {\n    setDescriptionModal((prev) => !prev);\n  }\n\n  function closeDeleteModal() {\n    props.setDeleteModal(false);\n  }\n\n  function removeExpenseItemHandler() {\n    props.setDeleteModal(false);\n\n    // remove from expense data provider\n    removeExpenseData(props.id);\n\n    // remove from Search List\n    if (setFilteredData) setFilteredData({ type: \"DELETE\", id: props.id });\n\n    setEditModal({\n      show: true,\n      type: \"data\",\n      value: \"delete\",\n    });\n  }\n\n  return (\n    <>\n      {descriptionModal && (\n        <DescriptionModal descriptionModalToggler={descriptionModalToggler}>\n          {props.dataInfo.description}\n        </DescriptionModal>\n      )}\n      <Modal classModal={style.modal}>\n        <div>\n          <Title className={style.title}>\n            are you sure <br /> to delete this data?\n          </Title>\n          <HorizontalLine />\n        </div>\n\n        <div className={style[\"info__container\"]}>{infoItem}</div>\n\n        <p className={style.description}>\n          there is no way getting back this data <br /> once you delete it\n        </p>\n        <div className={style[\"btn__container\"]}>\n          <Button\n            type=\"button\"\n            onClick={closeDeleteModal}\n            className={`${style.btn} uppercase`}\n          >\n            no\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={removeExpenseItemHandler}\n            className={`${style.btn} uppercase`}\n          >\n            yes\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default DeleteModal;\n\n/*\nReference 1\nThere are three different places need DeleteModal component\n1. Home\n2. Calendar List Modal\n3. Search List\nSo we need different function to handle the data once user delete the data\n\nNote that DeleteModal only from \"DeleteModal\" because there's only way to show this modal\n*/\n"]},"metadata":{},"sourceType":"module"}