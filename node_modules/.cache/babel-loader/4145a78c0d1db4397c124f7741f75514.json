{"ast":null,"code":"import compareTimeWithRange from \"../CompareTime/compareTimeWithRange\";\n\nfunction createPieDataArr(startingDate, endingDate, expenseData, mainCategory) {\n  const filteredData = expenseData.filter(element => compareTimeWithRange(element, new Date(startingDate), new Date(endingDate)) && element.category === mainCategory);\n  console.log(mainCategory);\n  console.log(filteredData); // Reference 1\n\n  const dataObj = {};\n\n  for (let data of filteredData) {\n    if (dataObj[data.mainCate] !== undefined) dataObj[data.mainCate] += Number(data.price);else dataObj[data.mainCate] = Number(data.price);\n  }\n\n  return [Object.keys(dataObj), Object.values(dataObj)];\n}\n\nexport default createPieDataArr;\n/*\nReference 1\nKey Part\nAlong with the process iterating the filteredData\n1. add the new label as key if the label hasn't been added before\n2. accumulate the price to corresponding label if the label has been added\n*/","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateChartData/createPieDataArr.js"],"names":["compareTimeWithRange","createPieDataArr","startingDate","endingDate","expenseData","mainCategory","filteredData","filter","element","Date","category","console","log","dataObj","data","mainCate","undefined","Number","price","Object","keys","values"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,qCAAjC;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwCC,UAAxC,EAAoDC,WAApD,EAAiEC,YAAjE,EAA+E;AAC7E,QAAMC,YAAY,GAAGF,WAAW,CAACG,MAAZ,CAClBC,OAAD,IACER,oBAAoB,CAClBQ,OADkB,EAElB,IAAIC,IAAJ,CAASP,YAAT,CAFkB,EAGlB,IAAIO,IAAJ,CAASN,UAAT,CAHkB,CAApB,IAIKK,OAAO,CAACE,QAAR,KAAqBL,YANT,CAArB;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ,EAV6E,CAY7E;;AACA,QAAMO,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIC,IAAT,IAAiBR,YAAjB,EAA+B;AAC7B,QAAIO,OAAO,CAACC,IAAI,CAACC,QAAN,CAAP,KAA2BC,SAA/B,EACEH,OAAO,CAACC,IAAI,CAACC,QAAN,CAAP,IAA0BE,MAAM,CAACH,IAAI,CAACI,KAAN,CAAhC,CADF,KAEKL,OAAO,CAACC,IAAI,CAACC,QAAN,CAAP,GAAyBE,MAAM,CAACH,IAAI,CAACI,KAAN,CAA/B;AACN;;AAED,SAAO,CAACC,MAAM,CAACC,IAAP,CAAYP,OAAZ,CAAD,EAAuBM,MAAM,CAACE,MAAP,CAAcR,OAAd,CAAvB,CAAP;AACD;;AAED,eAAeZ,gBAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import compareTimeWithRange from \"../CompareTime/compareTimeWithRange\";\n\nfunction createPieDataArr(startingDate, endingDate, expenseData, mainCategory) {\n  const filteredData = expenseData.filter(\n    (element) =>\n      compareTimeWithRange(\n        element,\n        new Date(startingDate),\n        new Date(endingDate)\n      ) && element.category === mainCategory\n  );\n  console.log(mainCategory);\n  console.log(filteredData);\n\n  // Reference 1\n  const dataObj = {};\n  for (let data of filteredData) {\n    if (dataObj[data.mainCate] !== undefined)\n      dataObj[data.mainCate] += Number(data.price);\n    else dataObj[data.mainCate] = Number(data.price);\n  }\n\n  return [Object.keys(dataObj), Object.values(dataObj)];\n}\n\nexport default createPieDataArr;\n\n/*\nReference 1\nKey Part\nAlong with the process iterating the filteredData\n1. add the new label as key if the label hasn't been added before\n2. accumulate the price to corresponding label if the label has been added\n*/\n"]},"metadata":{},"sourceType":"module"}