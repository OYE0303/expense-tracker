{"ast":null,"code":"import compareTimeWithRange from \"../compareTimeWithRange\";\n\nfunction createFilteredData(labels, expensData) {\n  const numStartingDate = Number(new Date(labels[0]));\n  const numEndingDate = Number(new Date(labels[labels.length - 1]));\n  const test = expensData.filter(element => Number(new Date(element.time)) >= numStartingDate && Number(new Date(element.time)) <= numEndingDate).sort((elementA, elementB) => Number(new Date(elementA.time)) - Number(new Date(elementB.time)));\n  const test1 = compareTimeWithRange(expensData, new Date(labels[0]), new Date(labels[labels.length - 1]));\n  console.log(test);\n  console.log(test1);\n  return expensData.filter(element => Number(new Date(element.time)) >= numStartingDate && Number(new Date(element.time)) <= numEndingDate).sort((elementA, elementB) => Number(new Date(elementA.time)) - Number(new Date(elementB.time)));\n}\n\nexport default createFilteredData;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateChartData/createFilteredData.js"],"names":["compareTimeWithRange","createFilteredData","labels","expensData","numStartingDate","Number","Date","numEndingDate","length","test","filter","element","time","sort","elementA","elementB","test1","console","log"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,yBAAjC;;AAEA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,UAApC,EAAgD;AAC9C,QAAMC,eAAe,GAAGC,MAAM,CAAC,IAAIC,IAAJ,CAASJ,MAAM,CAAC,CAAD,CAAf,CAAD,CAA9B;AACA,QAAMK,aAAa,GAAGF,MAAM,CAAC,IAAIC,IAAJ,CAASJ,MAAM,CAACA,MAAM,CAACM,MAAP,GAAgB,CAAjB,CAAf,CAAD,CAA5B;AAEA,QAAMC,IAAI,GAAGN,UAAU,CACpBO,MADU,CAERC,OAAD,IACEN,MAAM,CAAC,IAAIC,IAAJ,CAASK,OAAO,CAACC,IAAjB,CAAD,CAAN,IAAkCR,eAAlC,IACAC,MAAM,CAAC,IAAIC,IAAJ,CAASK,OAAO,CAACC,IAAjB,CAAD,CAAN,IAAkCL,aAJ3B,EAMVM,IANU,CAOT,CAACC,QAAD,EAAWC,QAAX,KACEV,MAAM,CAAC,IAAIC,IAAJ,CAASQ,QAAQ,CAACF,IAAlB,CAAD,CAAN,GAAkCP,MAAM,CAAC,IAAIC,IAAJ,CAASS,QAAQ,CAACH,IAAlB,CAAD,CARjC,CAAb;AAWA,QAAMI,KAAK,GAAGhB,oBAAoB,CAChCG,UADgC,EAEhC,IAAIG,IAAJ,CAASJ,MAAM,CAAC,CAAD,CAAf,CAFgC,EAGhC,IAAII,IAAJ,CAASJ,MAAM,CAACA,MAAM,CAACM,MAAP,GAAgB,CAAjB,CAAf,CAHgC,CAAlC;AAMAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SAAOb,UAAU,CACdO,MADI,CAEFC,OAAD,IACEN,MAAM,CAAC,IAAIC,IAAJ,CAASK,OAAO,CAACC,IAAjB,CAAD,CAAN,IAAkCR,eAAlC,IACAC,MAAM,CAAC,IAAIC,IAAJ,CAASK,OAAO,CAACC,IAAjB,CAAD,CAAN,IAAkCL,aAJjC,EAMJM,IANI,CAOH,CAACC,QAAD,EAAWC,QAAX,KACEV,MAAM,CAAC,IAAIC,IAAJ,CAASQ,QAAQ,CAACF,IAAlB,CAAD,CAAN,GAAkCP,MAAM,CAAC,IAAIC,IAAJ,CAASS,QAAQ,CAACH,IAAlB,CAAD,CARvC,CAAP;AAUD;;AAED,eAAeX,kBAAf","sourcesContent":["import compareTimeWithRange from \"../compareTimeWithRange\";\n\nfunction createFilteredData(labels, expensData) {\n  const numStartingDate = Number(new Date(labels[0]));\n  const numEndingDate = Number(new Date(labels[labels.length - 1]));\n\n  const test = expensData\n    .filter(\n      (element) =>\n        Number(new Date(element.time)) >= numStartingDate &&\n        Number(new Date(element.time)) <= numEndingDate\n    )\n    .sort(\n      (elementA, elementB) =>\n        Number(new Date(elementA.time)) - Number(new Date(elementB.time))\n    );\n\n  const test1 = compareTimeWithRange(\n    expensData,\n    new Date(labels[0]),\n    new Date(labels[labels.length - 1])\n  );\n\n  console.log(test);\n  console.log(test1);\n\n  return expensData\n    .filter(\n      (element) =>\n        Number(new Date(element.time)) >= numStartingDate &&\n        Number(new Date(element.time)) <= numEndingDate\n    )\n    .sort(\n      (elementA, elementB) =>\n        Number(new Date(elementA.time)) - Number(new Date(elementB.time))\n    );\n}\n\nexport default createFilteredData;\n"]},"metadata":{},"sourceType":"module"}