{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountOverview/AccountOverview.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport SubTitle from \"../../../UI/SubTitle/SubTitle\";\nimport AccountCard from \"./AccountCard\";\nimport AccountChart from \"./AccountChart\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createFilteredData from \"../../../Others/CreateChartData/createFilteredData\";\nimport createDateFormat from \"../../../Others/createDateFormat\";\nimport style from \"./AccountOverview.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountOverview(props) {\n  _s();\n\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const [chartData, setChartData] = useState(createChartDataArr(initialLabels, expenseData));\n  const [chartLabel, setChartLabel] = useState(initialLabels);\n\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n    const labels = createLabelsAccount(today, TODAY);\n    const chartData = createChartDataArr(labels, expenseData);\n    setChartData(chartData);\n    setChartLabel(labels);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.accountOverview,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"title__section\"],\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"account overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n        className: style.subTitle,\n        children: \"hi, username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: chartRadioChangeHandler,\n      className: style[\"radio__container\"],\n      children: chartRadioArr.map((element, index) => /*#__PURE__*/_jsxDEV(InputRadio, {\n        label: element,\n        id: element,\n        value: element,\n        name: \"chart__btn\",\n        classLabel: style.label,\n        classInput: style.input,\n        classCheck: style.check\n      }, element, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountChart, {\n      labels: chartLabel,\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountOverview, \"ktsaxqoGARrsNVsyLhVJgg2Nfhg=\");\n\n_c = AccountOverview;\nexport default AccountOverview;\n\nfunction createChartDataArr(labels, expenseData) {\n  const newExpenseData = createFilteredData(labels, expenseData);\n  const newExpenseDataExpense = newExpenseData.filter(element => element.category === \"expense\");\n  const newExpenseDataIncome = newExpenseData.filter(element => element.category === \"income\");\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n  const finalDataArr = [];\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense);\n  });\n  return finalDataArr;\n}\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      var _expensData$indexData, _expensData$indexData2, _expensData$indexData3;\n\n      yearDate = (_expensData$indexData = expensData[indexData]) === null || _expensData$indexData === void 0 ? void 0 : _expensData$indexData.time.slice(0, 4);\n      monthData = (_expensData$indexData2 = expensData[indexData]) === null || _expensData$indexData2 === void 0 ? void 0 : _expensData$indexData2.time.slice(5, 7);\n      dayData = (_expensData$indexData3 = expensData[indexData]) === null || _expensData$indexData3 === void 0 ? void 0 : _expensData$indexData3.time.slice(8);\n\n      if (yearLabel === yearDate && monthLabel === monthData && dayLabel >= dayData) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / (1000 * 3600 * 24));\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;else {\n    eachDiffAmount = (diff - diff % 7) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n  let tmpDate;\n\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0) tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));else tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n  label.push(createDateFormat(tmpDate));\n  return label;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountOverview\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountOverview/AccountOverview.js"],"names":["useContext","useState","Title","SubTitle","AccountCard","AccountChart","InputRadio","ExpenseDataContext","createFilteredData","createDateFormat","style","AccountOverview","props","expenseData","chartData","setChartData","createChartDataArr","initialLabels","chartLabel","setChartLabel","chartRadioChangeHandler","e","today","Date","value","target","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","labels","createLabelsAccount","TODAY","accountOverview","subTitle","chartRadioArr","map","element","index","label","input","check","newExpenseData","newExpenseDataExpense","filter","category","newExpenseDataIncome","dataArrExpense","createDataArrAccount","dataArrIncome","finalDataArr","forEach","expense","push","expensData","data","indexCurrentDate","currentAmount","indexData","yearLabel","monthLabel","dayLabel","yearDate","monthData","dayData","i","length","slice","time","Number","price","startDate","endDate","diff","Math","round","getTime","eachDiffAmount","lastDiffAmount","tmpDate"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport SubTitle from \"../../../UI/SubTitle/SubTitle\";\nimport AccountCard from \"./AccountCard\";\nimport AccountChart from \"./AccountChart\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createFilteredData from \"../../../Others/CreateChartData/createFilteredData\";\nimport createDateFormat from \"../../../Others/createDateFormat\";\nimport style from \"./AccountOverview.module.css\";\n\nfunction AccountOverview(props) {\n  const { expenseData } = useContext(ExpenseDataContext);\n  const [chartData, setChartData] = useState(\n    createChartDataArr(initialLabels, expenseData)\n  );\n  const [chartLabel, setChartLabel] = useState(initialLabels);\n\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n\n    const labels = createLabelsAccount(today, TODAY);\n    const chartData = createChartDataArr(labels, expenseData);\n\n    setChartData(chartData);\n    setChartLabel(labels);\n  }\n\n  return (\n    <div className={style.accountOverview}>\n      <div className={style[\"title__section\"]}>\n        <Title>account overview</Title>\n        <SubTitle className={style.subTitle}>hi, username</SubTitle>\n      </div>\n      <AccountCard />\n      <div\n        onChange={chartRadioChangeHandler}\n        className={style[\"radio__container\"]}\n      >\n        {chartRadioArr.map((element, index) => (\n          <InputRadio\n            key={element}\n            label={element}\n            id={element}\n            value={element}\n            name=\"chart__btn\"\n            classLabel={style.label}\n            classInput={style.input}\n            classCheck={style.check}\n          />\n        ))}\n      </div>\n      <AccountChart labels={chartLabel} data={chartData} />\n    </div>\n  );\n}\n\nexport default AccountOverview;\n\nfunction createChartDataArr(labels, expenseData) {\n  const newExpenseData = createFilteredData(labels, expenseData);\n\n  const newExpenseDataExpense = newExpenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n\n  const newExpenseDataIncome = newExpenseData.filter(\n    (element) => element.category === \"income\"\n  );\n\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n\n  const finalDataArr = [];\n\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense);\n  });\n\n  return finalDataArr;\n}\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      yearDate = expensData[indexData]?.time.slice(0, 4);\n      monthData = expensData[indexData]?.time.slice(5, 7);\n      dayData = expensData[indexData]?.time.slice(8);\n\n      if (\n        yearLabel === yearDate &&\n        monthLabel === monthData &&\n        dayLabel >= dayData\n      ) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round(\n    (new Date(endDate).getTime() - new Date(startDate).getTime()) /\n      (1000 * 3600 * 24)\n  );\n\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;\n  else {\n    eachDiffAmount = (diff - (diff % 7)) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n\n  let tmpDate;\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0)\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n  else\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n\n  label.push(createDateFormat(tmpDate));\n\n  return label;\n}\n"]},"metadata":{},"sourceType":"module"}