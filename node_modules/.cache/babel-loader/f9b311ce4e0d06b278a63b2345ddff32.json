{"ast":null,"code":"/*\nThe logic is \n1. If the year of data is less than current year, we can guarantee this data is within the range, so immediately return true\n2. If both year are the same, then need to compare month and day\n\nNote that we do NOT use any explicit coercion \nBecause we can make sure that\n1) the value in data object are always string (from form)\n2) assume curYear, curMonth and curDay are either string or number\n\nRecall the rull of comparison operator\nfor both \"<\" and \">\"\nIf both of value are string, it directly compares character by character\n=> \"01\" > \"10\" -> true, \"05\" < \"01\" -> true\nIf one of value is string, and the other one is number, then it converts both value to number, and do the comparison\n\nSo the reason without explicit coercion is because we're familiar with these rulls\n*/\nfunction compareTime(data, dateObj, curYear, curMonth, curDay) {\n  const {\n    year,\n    month,\n    day\n  } = data;\n  const yearNum = year - 0;\n  const monthNum = month - 0;\n  const dayNum = day - 0;\n  if (!dateObj) return yearNum < curYear || yearNum === curYear && month < curMonth || yearNum === curYear && month === curMonth && day <= curDay;else {\n    const curYear1 = dateObj.getFullYear(),\n          curMonth1 = dateObj.getMonth() + 1,\n          curDay1 = dateObj.getDate();\n    return yearNum < curYear1 || yearNum === curYear1 && monthNum < curMonth1 || yearNum === curYear1 && monthNum === curMonth1 && dayNum <= curDay1;\n  }\n}\n\nexport default compareTime;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/compareTime.js"],"names":["compareTime","data","dateObj","curYear","curMonth","curDay","year","month","day","yearNum","monthNum","dayNum","curYear1","getFullYear","curMonth1","getMonth","curDay1","getDate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,OAApC,EAA6CC,QAA7C,EAAuDC,MAAvD,EAA+D;AAC7D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAuBP,IAA7B;AACA,QAAMQ,OAAO,GAAGH,IAAI,GAAG,CAAvB;AACA,QAAMI,QAAQ,GAAGH,KAAK,GAAG,CAAzB;AACA,QAAMI,MAAM,GAAGH,GAAG,GAAG,CAArB;AAEA,MAAI,CAACN,OAAL,EACE,OACEO,OAAO,GAAGN,OAAV,IACCM,OAAO,KAAKN,OAAZ,IAAuBI,KAAK,GAAGH,QADhC,IAECK,OAAO,KAAKN,OAAZ,IAAuBI,KAAK,KAAKH,QAAjC,IAA6CI,GAAG,IAAIH,MAHvD,CADF,KAMK;AACH,UAAMO,QAAQ,GAAGV,OAAO,CAACW,WAAR,EAAjB;AAAA,UACEC,SAAS,GAAGZ,OAAO,CAACa,QAAR,KAAqB,CADnC;AAAA,UAEEC,OAAO,GAAGd,OAAO,CAACe,OAAR,EAFZ;AAIA,WACER,OAAO,GAAGG,QAAV,IACCH,OAAO,KAAKG,QAAZ,IAAwBF,QAAQ,GAAGI,SADpC,IAECL,OAAO,KAAKG,QAAZ,IAAwBF,QAAQ,KAAKI,SAArC,IAAkDH,MAAM,IAAIK,OAH/D;AAKD;AACF;;AAED,eAAehB,WAAf","sourcesContent":["/*\nThe logic is \n1. If the year of data is less than current year, we can guarantee this data is within the range, so immediately return true\n2. If both year are the same, then need to compare month and day\n\nNote that we do NOT use any explicit coercion \nBecause we can make sure that\n1) the value in data object are always string (from form)\n2) assume curYear, curMonth and curDay are either string or number\n\nRecall the rull of comparison operator\nfor both \"<\" and \">\"\nIf both of value are string, it directly compares character by character\n=> \"01\" > \"10\" -> true, \"05\" < \"01\" -> true\nIf one of value is string, and the other one is number, then it converts both value to number, and do the comparison\n\nSo the reason without explicit coercion is because we're familiar with these rulls\n*/\nfunction compareTime(data, dateObj, curYear, curMonth, curDay) {\n  const { year, month, day } = data;\n  const yearNum = year - 0;\n  const monthNum = month - 0;\n  const dayNum = day - 0;\n\n  if (!dateObj)\n    return (\n      yearNum < curYear ||\n      (yearNum === curYear && month < curMonth) ||\n      (yearNum === curYear && month === curMonth && day <= curDay)\n    );\n  else {\n    const curYear1 = dateObj.getFullYear(),\n      curMonth1 = dateObj.getMonth() + 1,\n      curDay1 = dateObj.getDate();\n\n    return (\n      yearNum < curYear1 ||\n      (yearNum === curYear1 && monthNum < curMonth1) ||\n      (yearNum === curYear1 && monthNum === curMonth1 && dayNum <= curDay1)\n    );\n  }\n}\n\nexport default compareTime;\n"]},"metadata":{},"sourceType":"module"}