{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/store/searchListData/SearchListDataProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useContext, useState } from \"react\";\nimport ExpenseDataContext from \"../expenseData/expenseData--context\";\nimport SearchListDataContext from \"./searchListData--context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\nlet orginalObj;\nconst checkboxTime = [{\n  category: \"time\",\n  text: \"today\",\n  value: 0,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"yesterady\",\n  value: 1,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"three days ago\",\n  value: 3,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a week ago\",\n  value: 7,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a month ago\",\n  value: 30,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"three months ago\",\n  value: 90,\n  checked: false\n}, {\n  category: \"time\",\n  text: \"a year ago\",\n  value: 100,\n  checked: false\n}, {\n  category: \"price\",\n  text: \"0 ~ $100\",\n  value: [0, 100],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$100 ~ $300\",\n  value: [100, 300],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$300 ~ $500\",\n  value: [300, 500],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"$500 ~ $1000\",\n  value: [500, 1000],\n  checked: false\n}, {\n  category: \"price\",\n  text: \"above $1000\",\n  value: [1000, Infinity],\n  checked: false\n}];\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"TIME\":\n      {\n        return reducerTime(state, action);\n      }\n\n    case \"PRICE\":\n      {\n        return reducerPrice(state, action);\n      }\n\n    case \"CATEGORY\":\n      {\n        return reducerCategory(state, action);\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction reducer1(state, action) {\n  switch (action.type) {\n    case \"ADD\":\n      {\n        const value = action.value;\n        const newObj = { ...state.constraintObj\n        };\n        newObj[`${action.id}-${action.value}`] = value;\n        let currentType;\n        let currentKey;\n        let timeArr = [];\n        let priceArr = [];\n        let categoryArr = [];\n\n        for (const key of Object.keys(newObj)) {\n          [currentType, currentKey] = key.split(\"-\");\n          if (currentType === \"category\") categoryArr.push(currentKey);else if (currentType === \"time\") timeArr.push(currentKey);else priceArr.push(currentKey);\n        }\n\n        filterTime(orginalObj, timeArr);\n        const newState = filterCategory(filterPrice(orginalObj, priceArr), categoryArr);\n        return {\n          expenseData: newState,\n          constraintObj: newObj\n        };\n      }\n\n    case \"REMOVE\":\n      {\n        const id = `${action.id}-${action.value}`;\n        const newObj = { ...state.constraintObj\n        };\n        delete newObj[id];\n        let newState;\n        if (newObj.length === 0) newState = orginalObj;else {\n          let currentType;\n          let currentKey;\n          let timeArr = [];\n          let priceArr = [];\n          let categoryArr = [];\n\n          for (const key of Object.keys(newObj)) {\n            [currentType, currentKey] = key.split(\"-\");\n            if (currentType === \"category\") categoryArr.push(currentKey);else if (currentType === \"time\") timeArr.push(currentKey);else priceArr.push(currentKey);\n          }\n\n          filterTime(orginalObj, timeArr);\n          newState = filterCategory(filterPrice(orginalObj, priceArr), categoryArr);\n        }\n        return {\n          expenseData: newState,\n          constraintObj: newObj\n        };\n      }\n\n    default:\n      break;\n  }\n}\n\nfunction filterData(data, constraint) {}\n\nfunction SearchListDataProvider(props) {\n  _s();\n\n  const expenseDataCtx = useContext(ExpenseDataContext);\n  const [expenseDataState, dispatchExpenseDataAction] = useReducer(reducer, {\n    checkTimeCount: 0,\n    checkPriceCount: 0,\n    checkCategoryCount: 0,\n    checkTotalCount: 0,\n    expenseData: expenseDataCtx.EXPENSE_DATA\n  });\n  const [bundleData, setBundleData] = useReducer(reducer1, {\n    constraintObj: {},\n    expenseData: expenseDataCtx.EXPENSE_DATA\n  });\n  orginalObj = expenseDataCtx.EXPENSE_DATA;\n  const SearchListDataContextInitialObject = {\n    expenseData: expenseDataState.expenseData,\n    dispatchExpenseDataAction,\n    setBundleData,\n    expenseDataTest: bundleData.expenseData\n  };\n  return /*#__PURE__*/_jsxDEV(SearchListDataContext.Provider, {\n    value: SearchListDataContextInitialObject,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchListDataProvider, \"9280KtmVHTsWY9sXvKtMUwseBv0=\");\n\n_c = SearchListDataProvider;\nexport default SearchListDataProvider;\n\nfunction filterTime(data, filterArr) {\n  if (filterArr.length === 0) return data;\n  const date = new Date();\n  let dayArr = [];\n  let monthArr = [];\n  let yearArr = [];\n  filterArr.forEach(element => {\n    if (element[0] === \"d\") dayArr.push(element.split(\",\")[1]);\n    if (element[0] === \"m\") monthArr.push(element.split(\",\")[1]);\n    if (element[0] === \"y\") yearArr.push(element.split(\",\")[1]);\n  });\n  console.log(dayArr, monthArr, yearArr);\n\n  if (dayArr.length > 0) {\n    const newDayState = data.filter(element => Number(element.time.slice(8)) < Number(Math.min(...dayArr)) && Number(element.time.slice(5, 7)) === date.getMonth() + 1);\n  }\n\n  if (monthArr.length > 0) {} // let min = Infinity;\n  // let max = 0;\n  // filterArr.forEach((element) => {\n  //   if (Number(element) < min) min = Number(element);\n  //   if (Number(element) > max) max = Number(element);\n  // });\n  // // min day\n  // if (min <= 7) {\n  // }\n\n}\n\nfunction filterCategory(data, filterArr) {\n  if (filterArr.length === 0) return data;\n  return data.filter(element => filterArr.includes(element.mainCate));\n}\n\nfunction filterPrice(data, filterArr) {\n  if (filterArr.length === 0) return data;\n  let min = Infinity;\n  let max = 0;\n  let tmpMin;\n  let tmpMax;\n  const newFilterArr = filterArr.map(arr => arr.split(\",\"));\n  newFilterArr.forEach(element => {\n    [tmpMin, tmpMax] = element;\n    if (Number(tmpMin) < min) min = Number(tmpMin);\n    if (Number(tmpMax) > max) max = Number(tmpMax);\n  });\n  return data.filter(element => Number(element.price) >= Number(min) && Number(element.price) <= Number(max));\n}\n\nfunction reducerCategory(state, action) {\n  let newState;\n  let totalCount = state.checkTotalCount;\n  let categoryCount = state.checkCategoryCount;\n\n  if (action.checked) {\n    if (totalCount === 0) {\n      totalCount++;\n      categoryCount++;\n      newState = state.expenseData.filter(element => element.mainCate === action.value);\n    } else {\n      totalCount++;\n      categoryCount++;\n\n      if (state.checkPriceCount !== 0 || state.checkTimeCount !== 0) {\n        newState = state.expenseData.filter(element => element.mainCate === action.value);\n      } else {\n        const concatArr = orginalObj.filter(element => element.mainCate === action.value);\n        newState = state.expenseData.concat(concatArr);\n      }\n    }\n  } else {\n    totalCount--;\n    categoryCount--;\n    if (totalCount === 0) newState = orginalObj;else {\n      newState = state.expenseData.filter(element => element.mainCate !== action.value);\n    }\n  }\n\n  return {\n    checkTotalCount: totalCount,\n    checkTimeCount: state.checkTimeCount,\n    checkPriceCount: state.checkPriceCount,\n    checkCategoryCount: categoryCount,\n    expenseData: newState\n  };\n}\n\nfunction reducerPrice(state, action) {\n  const [lowestPrice, highestPrice] = action.value.split(\",\");\n  let newState;\n  let totalCount = state.checkTotalCount;\n  let priceCount = state.checkPriceCount;\n\n  if (action.checked) {\n    if (totalCount === 0) {\n      totalCount++;\n      priceCount++;\n      newState = state.expenseData.filter(element => Number(element.price) >= lowestPrice && Number(element.price) <= highestPrice);\n    } else {\n      totalCount++;\n      priceCount++;\n\n      if (state.checkTimeCount !== 0 || state.checkCategoryCount !== 0) {\n        newState = state.expenseData.filter(element => Number(element.price) >= lowestPrice && Number(element.price) <= highestPrice);\n      } else {\n        const concatArr = orginalObj.filter(element => Number(element.price) >= lowestPrice && Number(element.price) <= highestPrice);\n        newState = state.expenseData.concat(concatArr);\n      }\n    }\n  } else {\n    totalCount--;\n    priceCount--;\n    if (totalCount === 0) newState = orginalObj;else {\n      newState = state.expenseData.filter(element => Number(element.price) < lowestPrice || Number(element.price) > highestPrice);\n    }\n  }\n\n  return {\n    checkTotalCount: totalCount,\n    checkTimeCount: state.checkTimeCount,\n    checkPriceCount: priceCount,\n    checkCategoryCount: state.checkCategoryCount,\n    expenseData: newState\n  };\n}\n\nfunction reducerTime(state, action) {\n  let dateArr = [];\n  let newState; // days\n\n  if (action.value < 30) {\n    const currenDate = date.getDate();\n    if (action.value === 0) dateArr.push(currenDate);else for (let i = 1; i <= action.value; i++) {\n      dateArr.push(currenDate - i);\n    }\n\n    if (action.checked) {\n      newState = state.expenseData.filter(element => dateArr.includes(Number(element.time.slice(8))) && Number(element.time.slice(5, 7)) === date.getMonth() + 1);\n    } else {\n      const concatArr = orginalObj.filter(element => !dateArr.includes(Number(element.time.slice(8))) || !(Number(element.time.slice(5, 7)) === date.getMonth() + 1));\n      newState = state.expenseData.concat(concatArr);\n    }\n  } // months\n  else if (action.value === 30 || action.value === 90) {\n    if (action.value === 30) dateArr.push(date.getMonth());else {\n      for (let i = 0; i < 3; i++) {\n        dateArr.push(date.getMonth() - i);\n      }\n    }\n\n    if (action.checked) {\n      newState = state.expenseData.filter(element => dateArr.includes(Number(element.time.slice(5, 7))));\n    } else {\n      const concatArr = orginalObj.filter(element => !dateArr.includes(Number(element.time.slice(5, 7))));\n      newState = state.expenseData.concat(concatArr);\n    }\n  } // years\n  else {\n    dateArr.push(date.getFullYear() - 1);\n\n    if (action.checked) {\n      newState = state.expenseData.filter(element => dateArr.includes(Number(element.time.slice(0, 4))));\n    } else {\n      const concatArr = orginalObj.filter(element => !dateArr.includes(Number(element.time.slice(0, 4))));\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n\n  return { ...state,\n    expenseData: newState\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchListDataProvider\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/store/searchListData/SearchListDataProvider.js"],"names":["useReducer","useContext","useState","ExpenseDataContext","SearchListDataContext","date","Date","orginalObj","checkboxTime","category","text","value","checked","Infinity","reducer","state","action","type","reducerTime","reducerPrice","reducerCategory","reducer1","newObj","constraintObj","id","currentType","currentKey","timeArr","priceArr","categoryArr","key","Object","keys","split","push","filterTime","newState","filterCategory","filterPrice","expenseData","length","filterData","data","constraint","SearchListDataProvider","props","expenseDataCtx","expenseDataState","dispatchExpenseDataAction","checkTimeCount","checkPriceCount","checkCategoryCount","checkTotalCount","EXPENSE_DATA","bundleData","setBundleData","SearchListDataContextInitialObject","expenseDataTest","children","filterArr","dayArr","monthArr","yearArr","forEach","element","console","log","newDayState","filter","Number","time","slice","Math","min","getMonth","includes","mainCate","max","tmpMin","tmpMax","newFilterArr","map","arr","price","totalCount","categoryCount","concatArr","concat","lowestPrice","highestPrice","priceCount","dateArr","currenDate","getDate","i","getFullYear"],"mappings":"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","sourcesContent":["import { useReducer, useContext, useState } from \"react\";\nimport ExpenseDataContext from \"../expenseData/expenseData--context\";\nimport SearchListDataContext from \"./searchListData--context\";\n\nconst date = new Date();\n\nlet orginalObj;\n\nconst checkboxTime = [\n  { category: \"time\", text: \"today\", value: 0, checked: false },\n  { category: \"time\", text: \"yesterady\", value: 1, checked: false },\n  { category: \"time\", text: \"three days ago\", value: 3, checked: false },\n  { category: \"time\", text: \"a week ago\", value: 7, checked: false },\n  { category: \"time\", text: \"a month ago\", value: 30, checked: false },\n  { category: \"time\", text: \"three months ago\", value: 90, checked: false },\n  { category: \"time\", text: \"a year ago\", value: 100, checked: false },\n  { category: \"price\", text: \"0 ~ $100\", value: [0, 100], checked: false },\n  { category: \"price\", text: \"$100 ~ $300\", value: [100, 300], checked: false },\n  { category: \"price\", text: \"$300 ~ $500\", value: [300, 500], checked: false },\n  {\n    category: \"price\",\n    text: \"$500 ~ $1000\",\n    value: [500, 1000],\n    checked: false,\n  },\n  {\n    category: \"price\",\n    text: \"above $1000\",\n    value: [1000, Infinity],\n    checked: false,\n  },\n];\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"TIME\": {\n      return reducerTime(state, action);\n    }\n\n    case \"PRICE\": {\n      return reducerPrice(state, action);\n    }\n\n    case \"CATEGORY\": {\n      return reducerCategory(state, action);\n    }\n\n    default:\n      break;\n  }\n}\n\nfunction reducer1(state, action) {\n  switch (action.type) {\n    case \"ADD\": {\n      const value = action.value;\n\n      const newObj = { ...state.constraintObj };\n      newObj[`${action.id}-${action.value}`] = value;\n\n      let currentType;\n      let currentKey;\n      let timeArr = [];\n      let priceArr = [];\n      let categoryArr = [];\n      for (const key of Object.keys(newObj)) {\n        [currentType, currentKey] = key.split(\"-\");\n\n        if (currentType === \"category\") categoryArr.push(currentKey);\n        else if (currentType === \"time\") timeArr.push(currentKey);\n        else priceArr.push(currentKey);\n      }\n\n      filterTime(orginalObj, timeArr);\n\n      const newState = filterCategory(\n        filterPrice(orginalObj, priceArr),\n        categoryArr\n      );\n\n      return { expenseData: newState, constraintObj: newObj };\n    }\n    case \"REMOVE\": {\n      const id = `${action.id}-${action.value}`;\n\n      const newObj = { ...state.constraintObj };\n\n      delete newObj[id];\n\n      let newState;\n      if (newObj.length === 0) newState = orginalObj;\n      else {\n        let currentType;\n        let currentKey;\n        let timeArr = [];\n        let priceArr = [];\n        let categoryArr = [];\n        for (const key of Object.keys(newObj)) {\n          [currentType, currentKey] = key.split(\"-\");\n\n          if (currentType === \"category\") categoryArr.push(currentKey);\n          else if (currentType === \"time\") timeArr.push(currentKey);\n          else priceArr.push(currentKey);\n        }\n\n        filterTime(orginalObj, timeArr);\n\n        newState = filterCategory(\n          filterPrice(orginalObj, priceArr),\n          categoryArr\n        );\n      }\n\n      return { expenseData: newState, constraintObj: newObj };\n    }\n    default:\n      break;\n  }\n}\n\nfunction filterData(data, constraint) {}\n\nfunction SearchListDataProvider(props) {\n  const expenseDataCtx = useContext(ExpenseDataContext);\n  const [expenseDataState, dispatchExpenseDataAction] = useReducer(reducer, {\n    checkTimeCount: 0,\n    checkPriceCount: 0,\n    checkCategoryCount: 0,\n    checkTotalCount: 0,\n    expenseData: expenseDataCtx.EXPENSE_DATA,\n  });\n\n  const [bundleData, setBundleData] = useReducer(reducer1, {\n    constraintObj: {},\n    expenseData: expenseDataCtx.EXPENSE_DATA,\n  });\n\n  orginalObj = expenseDataCtx.EXPENSE_DATA;\n\n  const SearchListDataContextInitialObject = {\n    expenseData: expenseDataState.expenseData,\n    dispatchExpenseDataAction,\n    setBundleData,\n    expenseDataTest: bundleData.expenseData,\n  };\n\n  return (\n    <SearchListDataContext.Provider value={SearchListDataContextInitialObject}>\n      {props.children}\n    </SearchListDataContext.Provider>\n  );\n}\n\nexport default SearchListDataProvider;\n\nfunction filterTime(data, filterArr) {\n  if (filterArr.length === 0) return data;\n  const date = new Date();\n\n  let dayArr = [];\n  let monthArr = [];\n  let yearArr = [];\n  filterArr.forEach((element) => {\n    if (element[0] === \"d\") dayArr.push(element.split(\",\")[1]);\n    if (element[0] === \"m\") monthArr.push(element.split(\",\")[1]);\n    if (element[0] === \"y\") yearArr.push(element.split(\",\")[1]);\n  });\n\n  console.log(dayArr, monthArr, yearArr);\n\n  if (dayArr.length > 0) {\n    const newDayState = data.filter(\n      (element) =>\n        Number(element.time.slice(8)) < Number(Math.min(...dayArr)) &&\n        Number(element.time.slice(5, 7)) === date.getMonth() + 1\n    );\n  }\n\n  if (monthArr.length > 0) {\n  }\n\n  // let min = Infinity;\n  // let max = 0;\n  // filterArr.forEach((element) => {\n  //   if (Number(element) < min) min = Number(element);\n  //   if (Number(element) > max) max = Number(element);\n  // });\n\n  // // min day\n  // if (min <= 7) {\n  // }\n}\n\nfunction filterCategory(data, filterArr) {\n  if (filterArr.length === 0) return data;\n\n  return data.filter((element) => filterArr.includes(element.mainCate));\n}\n\nfunction filterPrice(data, filterArr) {\n  if (filterArr.length === 0) return data;\n\n  let min = Infinity;\n  let max = 0;\n  let tmpMin;\n  let tmpMax;\n  const newFilterArr = filterArr.map((arr) => arr.split(\",\"));\n  newFilterArr.forEach((element) => {\n    [tmpMin, tmpMax] = element;\n\n    if (Number(tmpMin) < min) min = Number(tmpMin);\n    if (Number(tmpMax) > max) max = Number(tmpMax);\n  });\n\n  return data.filter(\n    (element) =>\n      Number(element.price) >= Number(min) &&\n      Number(element.price) <= Number(max)\n  );\n}\n\nfunction reducerCategory(state, action) {\n  let newState;\n  let totalCount = state.checkTotalCount;\n  let categoryCount = state.checkCategoryCount;\n\n  if (action.checked) {\n    if (totalCount === 0) {\n      totalCount++;\n      categoryCount++;\n\n      newState = state.expenseData.filter(\n        (element) => element.mainCate === action.value\n      );\n    } else {\n      totalCount++;\n      categoryCount++;\n\n      if (state.checkPriceCount !== 0 || state.checkTimeCount !== 0) {\n        newState = state.expenseData.filter(\n          (element) => element.mainCate === action.value\n        );\n      } else {\n        const concatArr = orginalObj.filter(\n          (element) => element.mainCate === action.value\n        );\n\n        newState = state.expenseData.concat(concatArr);\n      }\n    }\n  } else {\n    totalCount--;\n    categoryCount--;\n\n    if (totalCount === 0) newState = orginalObj;\n    else {\n      newState = state.expenseData.filter(\n        (element) => element.mainCate !== action.value\n      );\n    }\n  }\n\n  return {\n    checkTotalCount: totalCount,\n    checkTimeCount: state.checkTimeCount,\n    checkPriceCount: state.checkPriceCount,\n    checkCategoryCount: categoryCount,\n    expenseData: newState,\n  };\n}\n\nfunction reducerPrice(state, action) {\n  const [lowestPrice, highestPrice] = action.value.split(\",\");\n  let newState;\n  let totalCount = state.checkTotalCount;\n  let priceCount = state.checkPriceCount;\n\n  if (action.checked) {\n    if (totalCount === 0) {\n      totalCount++;\n      priceCount++;\n\n      newState = state.expenseData.filter(\n        (element) =>\n          Number(element.price) >= lowestPrice &&\n          Number(element.price) <= highestPrice\n      );\n    } else {\n      totalCount++;\n      priceCount++;\n\n      if (state.checkTimeCount !== 0 || state.checkCategoryCount !== 0) {\n        newState = state.expenseData.filter(\n          (element) =>\n            Number(element.price) >= lowestPrice &&\n            Number(element.price) <= highestPrice\n        );\n      } else {\n        const concatArr = orginalObj.filter(\n          (element) =>\n            Number(element.price) >= lowestPrice &&\n            Number(element.price) <= highestPrice\n        );\n\n        newState = state.expenseData.concat(concatArr);\n      }\n    }\n  } else {\n    totalCount--;\n    priceCount--;\n\n    if (totalCount === 0) newState = orginalObj;\n    else {\n      newState = state.expenseData.filter(\n        (element) =>\n          Number(element.price) < lowestPrice ||\n          Number(element.price) > highestPrice\n      );\n    }\n  }\n\n  return {\n    checkTotalCount: totalCount,\n    checkTimeCount: state.checkTimeCount,\n    checkPriceCount: priceCount,\n    checkCategoryCount: state.checkCategoryCount,\n    expenseData: newState,\n  };\n}\n\nfunction reducerTime(state, action) {\n  let dateArr = [];\n  let newState;\n\n  // days\n  if (action.value < 30) {\n    const currenDate = date.getDate();\n\n    if (action.value === 0) dateArr.push(currenDate);\n    else\n      for (let i = 1; i <= action.value; i++) {\n        dateArr.push(currenDate - i);\n      }\n\n    if (action.checked) {\n      newState = state.expenseData.filter(\n        (element) =>\n          dateArr.includes(Number(element.time.slice(8))) &&\n          Number(element.time.slice(5, 7)) === date.getMonth() + 1\n      );\n    } else {\n      const concatArr = orginalObj.filter(\n        (element) =>\n          !dateArr.includes(Number(element.time.slice(8))) ||\n          !(Number(element.time.slice(5, 7)) === date.getMonth() + 1)\n      );\n\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n  // months\n  else if (action.value === 30 || action.value === 90) {\n    if (action.value === 30) dateArr.push(date.getMonth());\n    else {\n      for (let i = 0; i < 3; i++) {\n        dateArr.push(date.getMonth() - i);\n      }\n    }\n\n    if (action.checked) {\n      newState = state.expenseData.filter((element) =>\n        dateArr.includes(Number(element.time.slice(5, 7)))\n      );\n    } else {\n      const concatArr = orginalObj.filter(\n        (element) => !dateArr.includes(Number(element.time.slice(5, 7)))\n      );\n\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n  // years\n  else {\n    dateArr.push(date.getFullYear() - 1);\n\n    if (action.checked) {\n      newState = state.expenseData.filter((element) =>\n        dateArr.includes(Number(element.time.slice(0, 4)))\n      );\n    } else {\n      const concatArr = orginalObj.filter(\n        (element) => !dateArr.includes(Number(element.time.slice(0, 4)))\n      );\n\n      newState = state.expenseData.concat(concatArr);\n    }\n  }\n\n  return { ...state, expenseData: newState };\n}\n"]},"metadata":{},"sourceType":"module"}