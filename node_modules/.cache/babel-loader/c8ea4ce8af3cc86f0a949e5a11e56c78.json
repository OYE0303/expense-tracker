{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Home/Weekly/Weekly.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport AccountSection from \"../../../UI/AccountSection/AccountSection\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createDateFormat from \"../../../Others/createDateFormat\";\nimport style from \"./Weekly.module.css\"; // const currentTime = new Date();\n// const optionDemo = {\n//   // hour: 'numeric',\n//   // minute: 'numeric',\n//   day: \"numeric\",\n//   month: \"short\", // long, numeric, 2-digit\n//   year: \"numeric\", // 2-digit\n//   weekday: \"short\", // long, numeric, 2-digit\n// };\n// const time = new Intl.DateTimeFormat(\"en-US\", optionDemo).format(currentTime);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = [\"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SUN\", \"SAT\"];\nconst configArea = {\n  type: \"line\",\n  data: {\n    labels: labels,\n    datasets: [{\n      fill: {\n        target: \"origin\"\n      },\n      label: \"My First Dataset\",\n      data: [65, 59, 80, 81, 56, 55, 40],\n      backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n      borderColor: [\"rgb(54, 162, 235)\"],\n      borderWidth: 1,\n      pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n    }]\n  },\n  options: {\n    elements: {\n      line: {\n        tension: 0.5\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  }\n};\nconst configLine = {\n  type: \"line\",\n  data: {\n    labels: labels,\n    datasets: [{\n      label: \"My First Dataset\",\n      data: [65, 59, 80, 81, 56, 55, 40],\n      backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n      borderColor: [\"rgb(54, 162, 235)\"],\n      borderWidth: 1,\n      pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n    }]\n  },\n  options: {\n    elements: {\n      line: {\n        tension: 0.1\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  }\n};\nconst configPie = {\n  type: \"pie\",\n  data: {\n    labels: [\"Red\", \"Blue\", \"Yellow\"],\n    datasets: [{\n      label: \"My First Dataset\",\n      data: [300, 50, 100],\n      backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\"],\n      hoverOffset: 4\n    }]\n  }\n};\nconst chartConfigArr = [configLine, configArea, configPie];\nconst today = new Date(); // get current date\n\nconst first = today.getDate() - today.getDay(); // First day is the day of the month - the day of the week\n\nconst last = first + 6; // last day is the first day + 6\n\nconst firstForLabels = `${today.getFullYear()}-${today.getMonth() > 10 ? today.getMonth() : `0${today.getMonth()}`}-${first > 10 ? first : `0${first}`}`;\nconst lastForLabels = `${today.getFullYear()}-${today.getMonth() > 10 ? today.getMonth() : `0${today.getMonth()}`}-${last > 10 ? last : `0${last}`}`;\n\nfunction Weekly() {\n  _s();\n\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const filteredData = expenseData.filter(element => Number(new Date(element.time).getFullYear() === new Date().getFullYear()) && Number(new Date(element.time).getMonth() === new Date().getMonth()) && Number(new Date(element.time).getDate() <= last && Number(new Date(element.time).getDate() >= first)));\n  const labels = createLabelsAccount(new Date(firstForLabels), new Date(lastForLabels));\n  const data1 = createDataArrAccount(labels, filteredData);\n  console.log(labels);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.weekly,\n    children: /*#__PURE__*/_jsxDEV(AccountSection, {\n      title: \"Weekly Overview\",\n      income: \"1000\",\n      expense: \"600\",\n      configArr: chartConfigArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weekly, \"stxSkmagoO9hcL7i8htN9vzsRDQ=\");\n\n_c = Weekly;\nexport default Weekly;\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      var _expensData$indexData, _expensData$indexData2, _expensData$indexData3;\n\n      yearDate = (_expensData$indexData = expensData[indexData]) === null || _expensData$indexData === void 0 ? void 0 : _expensData$indexData.time.slice(0, 4);\n      monthData = (_expensData$indexData2 = expensData[indexData]) === null || _expensData$indexData2 === void 0 ? void 0 : _expensData$indexData2.time.slice(5, 7);\n      dayData = (_expensData$indexData3 = expensData[indexData]) === null || _expensData$indexData3 === void 0 ? void 0 : _expensData$indexData3.time.slice(8);\n\n      if (yearLabel === yearDate && monthLabel === monthData && dayLabel >= dayData) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / (1000 * 3600 * 24));\n  console.log(diff);\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;else {\n    eachDiffAmount = (diff - diff % 7) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n  let tmpDate;\n\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0) tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));else tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n  label.push(createDateFormat(tmpDate));\n  return label;\n}\n/*\n// area chart\n// const dataArea = {\n//   labels: labels,\n//   datasets: [\n//     {\n//       fill: {\n//         target: \"origin\",\n//       },\n//       label: \"My First Dataset\",\n//       data: [65, 59, 80, 81, 56, 55, 40],\n//       backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n//       borderColor: [\"rgb(54, 162, 235)\"],\n//       borderWidth: 1,\n//       pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n//     },\n//   ],\n// };\n// line chart\n// const dataLine = {\n//   labels: labels,\n//   datasets: [\n//     {\n//       label: \"My First Dataset\",\n//       data: [65, 59, 80, 81, 56, 55, 40],\n//       backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n//       borderColor: [\"rgb(54, 162, 235)\"],\n//       borderWidth: 1,\n//       pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n//     },\n//   ],\n// };\n// bar chart\n// const dataBar = {\n//   labels: labels,\n//   datasets: [\n//     {\n//       label: \"My First Dataset\",\n//       data: [65, 59, 80, 81, 56, 55, 40],\n//       backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n//       borderColor: [\"rgb(54, 162, 235)\"],\n//       borderWidth: 1,\n//       pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n//     },\n//   ],\n// };\nconst data = {\n//   labels: [\"Red\", \"Blue\", \"Yellow\"],\n//   datasets: [\n//     {\n//       label: \"My First Dataset\",\n//       data: [300, 50, 100],\n//       backgroundColor: [\n//         \"rgb(255, 99, 132)\",\n//         \"rgb(54, 162, 235)\",\n//         \"rgb(255, 205, 86)\",\n//       ],\n//       hoverOffset: 4,\n//     },\n//   ],\n// };\n*/\n\n\nvar _c;\n\n$RefreshReg$(_c, \"Weekly\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Home/Weekly/Weekly.js"],"names":["useContext","AccountSection","ExpenseDataContext","createDateFormat","style","labels","configArea","type","data","datasets","fill","target","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","elements","line","tension","scales","y","beginAtZero","configLine","configPie","hoverOffset","chartConfigArr","today","Date","first","getDate","getDay","last","firstForLabels","getFullYear","getMonth","lastForLabels","Weekly","expenseData","filteredData","filter","element","Number","time","createLabelsAccount","data1","createDataArrAccount","console","log","weekly","expensData","indexCurrentDate","currentAmount","indexData","yearLabel","monthLabel","dayLabel","yearDate","monthData","dayData","i","length","slice","price","push","startDate","endDate","diff","Math","round","getTime","eachDiffAmount","lastDiffAmount","tmpDate","setDate"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport AccountSection from \"../../../UI/AccountSection/AccountSection\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createDateFormat from \"../../../Others/createDateFormat\";\nimport style from \"./Weekly.module.css\";\n\n// const currentTime = new Date();\n\n// const optionDemo = {\n//   // hour: 'numeric',\n//   // minute: 'numeric',\n//   day: \"numeric\",\n//   month: \"short\", // long, numeric, 2-digit\n//   year: \"numeric\", // 2-digit\n//   weekday: \"short\", // long, numeric, 2-digit\n// };\n\n// const time = new Intl.DateTimeFormat(\"en-US\", optionDemo).format(currentTime);\n\nconst labels = [\"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SUN\", \"SAT\"];\n\nconst configArea = {\n  type: \"line\",\n  data: {\n    labels: labels,\n    datasets: [\n      {\n        fill: {\n          target: \"origin\",\n        },\n        label: \"My First Dataset\",\n        data: [65, 59, 80, 81, 56, 55, 40],\n        backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n        borderColor: [\"rgb(54, 162, 235)\"],\n        borderWidth: 1,\n        pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n      },\n    ],\n  },\n  options: {\n    elements: {\n      line: {\n        tension: 0.5,\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  },\n};\n\nconst configLine = {\n  type: \"line\",\n  data: {\n    labels: labels,\n    datasets: [\n      {\n        label: \"My First Dataset\",\n        data: [65, 59, 80, 81, 56, 55, 40],\n        backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n        borderColor: [\"rgb(54, 162, 235)\"],\n        borderWidth: 1,\n        pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n      },\n    ],\n  },\n  options: {\n    elements: {\n      line: {\n        tension: 0.1,\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  },\n};\n\nconst configPie = {\n  type: \"pie\",\n  data: {\n    labels: [\"Red\", \"Blue\", \"Yellow\"],\n    datasets: [\n      {\n        label: \"My First Dataset\",\n        data: [300, 50, 100],\n        backgroundColor: [\n          \"rgb(255, 99, 132)\",\n          \"rgb(54, 162, 235)\",\n          \"rgb(255, 205, 86)\",\n        ],\n        hoverOffset: 4,\n      },\n    ],\n  },\n};\n\nconst chartConfigArr = [configLine, configArea, configPie];\n\nconst today = new Date(); // get current date\nconst first = today.getDate() - today.getDay(); // First day is the day of the month - the day of the week\nconst last = first + 6; // last day is the first day + 6\n\nconst firstForLabels = `${today.getFullYear()}-${\n  today.getMonth() > 10 ? today.getMonth() : `0${today.getMonth()}`\n}-${first > 10 ? first : `0${first}`}`;\n\nconst lastForLabels = `${today.getFullYear()}-${\n  today.getMonth() > 10 ? today.getMonth() : `0${today.getMonth()}`\n}-${last > 10 ? last : `0${last}`}`;\n\nfunction Weekly() {\n  const { expenseData } = useContext(ExpenseDataContext);\n\n  const filteredData = expenseData.filter(\n    (element) =>\n      Number(\n        new Date(element.time).getFullYear() === new Date().getFullYear()\n      ) &&\n      Number(new Date(element.time).getMonth() === new Date().getMonth()) &&\n      Number(\n        new Date(element.time).getDate() <= last &&\n          Number(new Date(element.time).getDate() >= first)\n      )\n  );\n\n  const labels = createLabelsAccount(\n    new Date(firstForLabels),\n    new Date(lastForLabels)\n  );\n\n  const data1 = createDataArrAccount(labels, filteredData);\n\n  console.log(labels);\n\n  return (\n    <div className={style.weekly}>\n      <AccountSection\n        title=\"Weekly Overview\"\n        income=\"1000\"\n        expense=\"600\"\n        configArr={chartConfigArr}\n      />\n    </div>\n  );\n}\n\nexport default Weekly;\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      yearDate = expensData[indexData]?.time.slice(0, 4);\n      monthData = expensData[indexData]?.time.slice(5, 7);\n      dayData = expensData[indexData]?.time.slice(8);\n\n      if (\n        yearLabel === yearDate &&\n        monthLabel === monthData &&\n        dayLabel >= dayData\n      ) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round(\n    (new Date(endDate).getTime() - new Date(startDate).getTime()) /\n      (1000 * 3600 * 24)\n  );\n\n  console.log(diff);\n\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;\n  else {\n    eachDiffAmount = (diff - (diff % 7)) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n\n  let tmpDate;\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0)\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n  else\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n\n  label.push(createDateFormat(tmpDate));\n\n  return label;\n}\n\n/*\n// area chart\n// const dataArea = {\n//   labels: labels,\n//   datasets: [\n//     {\n//       fill: {\n//         target: \"origin\",\n//       },\n//       label: \"My First Dataset\",\n//       data: [65, 59, 80, 81, 56, 55, 40],\n//       backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n//       borderColor: [\"rgb(54, 162, 235)\"],\n//       borderWidth: 1,\n//       pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n//     },\n//   ],\n// };\n// line chart\n// const dataLine = {\n//   labels: labels,\n//   datasets: [\n//     {\n//       label: \"My First Dataset\",\n//       data: [65, 59, 80, 81, 56, 55, 40],\n//       backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n//       borderColor: [\"rgb(54, 162, 235)\"],\n//       borderWidth: 1,\n//       pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n//     },\n//   ],\n// };\n// bar chart\n// const dataBar = {\n//   labels: labels,\n//   datasets: [\n//     {\n//       label: \"My First Dataset\",\n//       data: [65, 59, 80, 81, 56, 55, 40],\n//       backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n//       borderColor: [\"rgb(54, 162, 235)\"],\n//       borderWidth: 1,\n//       pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n//     },\n//   ],\n// };\nconst data = {\n//   labels: [\"Red\", \"Blue\", \"Yellow\"],\n//   datasets: [\n//     {\n//       label: \"My First Dataset\",\n//       data: [300, 50, 100],\n//       backgroundColor: [\n//         \"rgb(255, 99, 132)\",\n//         \"rgb(54, 162, 235)\",\n//         \"rgb(255, 205, 86)\",\n//       ],\n//       hoverOffset: 4,\n//     },\n//   ],\n// };\n*/\n"]},"metadata":{},"sourceType":"module"}