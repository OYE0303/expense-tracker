{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Calendar/MonthlyInfo/MonthlyInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport AccountSection from \"../../../UI/AccountSection/AccountSection\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport DisplayThemeContext from \"../../../../store/displayTheme/displayTheme--context\";\nimport createAccAmount from \"../../../../Others/CreateAccountCardData/createAccAmount\";\nimport createAccountCardPreData from \"../../../../Others/CreateAccountCardData/createAccountCardPreData\";\nimport createSmallChartData from \"../../../../Others/CreateAccountCardData/createSmallChartData\";\nimport style from \"./MonthlyInfo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CalendarInfo(props) {\n  _s();\n\n  const {\n    expenseData,\n    categoryExpense\n  } = useContext(ExpenseDataContext);\n  const {\n    displayTheme\n  } = useContext(DisplayThemeContext);\n  const [startingDateObj, endingDateObj, startingDateString, endingDateString] = createAccountCardPreData(\"month\");\n  const [configBar, configPie] = createSmallChartData(expenseData, \"30\", startingDateString, endingDateString, categoryExpense, displayTheme);\n  const [accIncome, accExpense] = createAccAmount(expenseData, true, startingDateObj, endingDateObj);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.monthly,\n    children: /*#__PURE__*/_jsxDEV(AccountSection, {\n      title: \"Monthly Overview\",\n      income: accIncome,\n      expense: accExpense,\n      configBar: configBar,\n      configPie: configPie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarInfo, \"PKUYTe6UyVO5edtv2wQNRJHFhyQ=\");\n\n_c = CalendarInfo;\nexport default CalendarInfo;\n/*\n  const accIncome = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"income\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n\n  const accExpense = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"expense\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarInfo\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Calendar/MonthlyInfo/MonthlyInfo.js"],"names":["useContext","AccountSection","ExpenseDataContext","DisplayThemeContext","createAccAmount","createAccountCardPreData","createSmallChartData","style","CalendarInfo","props","expenseData","categoryExpense","displayTheme","startingDateObj","endingDateObj","startingDateString","endingDateString","configBar","configPie","accIncome","accExpense","monthly"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,kBAAP,MAA+B,oDAA/B;AACA,OAAOC,mBAAP,MAAgC,sDAAhC;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AACA,OAAOC,wBAAP,MAAqC,mEAArC;AACA,OAAOC,oBAAP,MAAiC,+DAAjC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCX,UAAU,CAACE,kBAAD,CAAnD;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAmBZ,UAAU,CAACG,mBAAD,CAAnC;AAEA,QAAM,CAACU,eAAD,EAAkBC,aAAlB,EAAiCC,kBAAjC,EAAqDC,gBAArD,IACJX,wBAAwB,CAAC,OAAD,CAD1B;AAGA,QAAM,CAACY,SAAD,EAAYC,SAAZ,IAAyBZ,oBAAoB,CACjDI,WADiD,EAEjD,IAFiD,EAGjDK,kBAHiD,EAIjDC,gBAJiD,EAKjDL,eALiD,EAMjDC,YANiD,CAAnD;AASA,QAAM,CAACO,SAAD,EAAYC,UAAZ,IAA0BhB,eAAe,CAC7CM,WAD6C,EAE7C,IAF6C,EAG7CG,eAH6C,EAI7CC,aAJ6C,CAA/C;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEP,KAAK,CAACc,OAAtB;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,MAAM,EAAEF,SAFV;AAGE,MAAA,OAAO,EAAEC,UAHX;AAIE,MAAA,SAAS,EAAEH,SAJb;AAKE,MAAA,SAAS,EAAEC;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAlCQV,Y;;KAAAA,Y;AAoCT,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useContext } from \"react\";\nimport AccountSection from \"../../../UI/AccountSection/AccountSection\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport DisplayThemeContext from \"../../../../store/displayTheme/displayTheme--context\";\nimport createAccAmount from \"../../../../Others/CreateAccountCardData/createAccAmount\";\nimport createAccountCardPreData from \"../../../../Others/CreateAccountCardData/createAccountCardPreData\";\nimport createSmallChartData from \"../../../../Others/CreateAccountCardData/createSmallChartData\";\nimport style from \"./MonthlyInfo.module.css\";\n\nfunction CalendarInfo(props) {\n  const { expenseData, categoryExpense } = useContext(ExpenseDataContext);\n  const { displayTheme } = useContext(DisplayThemeContext);\n\n  const [startingDateObj, endingDateObj, startingDateString, endingDateString] =\n    createAccountCardPreData(\"month\");\n\n  const [configBar, configPie] = createSmallChartData(\n    expenseData,\n    \"30\",\n    startingDateString,\n    endingDateString,\n    categoryExpense,\n    displayTheme\n  );\n\n  const [accIncome, accExpense] = createAccAmount(\n    expenseData,\n    true,\n    startingDateObj,\n    endingDateObj\n  );\n\n  return (\n    <div className={style.monthly}>\n      <AccountSection\n        title=\"Monthly Overview\"\n        income={accIncome}\n        expense={accExpense}\n        configBar={configBar}\n        configPie={configPie}\n      />\n    </div>\n  );\n}\n\nexport default CalendarInfo;\n\n/*\n  const accIncome = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"income\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n\n  const accExpense = expenseData\n    .filter((expenseData) => {\n      const timeNumber = Number(new Date(expenseData.time));\n\n      return (\n        timeNumber >= Number(firstDayStringFormat) &&\n        timeNumber <= Number(lastDayStringFormat) &&\n        expenseData.category === \"expense\"\n      );\n    })\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n*/\n"]},"metadata":{},"sourceType":"module"}