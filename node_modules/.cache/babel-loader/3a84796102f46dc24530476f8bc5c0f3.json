{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Chart/ChartOption/ChartOption.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer, useContext } from \"react\";\nimport style from \"./ChartOption.module.css\";\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport OptionCheckboxExpense from \"./OptionCheckbox/OptionCheckboxExpense\";\nimport OptionCheckboxIncome from \"./OptionCheckbox/OptionCheckBoxIncome\";\nimport CategoryContext from \"../../../../store/category/category--context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\":\n      {\n        return { ...state,\n          mainType: action.value\n        };\n      }\n\n    case \"STARTING_DATE\":\n      {\n        return { ...state,\n          startingDate: action.value\n        };\n      }\n\n    case \"ENDING_DATE\":\n      {\n        return { ...state,\n          endingDate: action.value\n        };\n      }\n\n    case \"TIME_DURATION\":\n      {\n        return { ...state,\n          timeDuration: action.value\n        };\n      }\n\n    case \"MAIN_CATEGORY\":\n      {\n        let subCategoryArr = [];\n        if (action.value === \"income\") subCategoryArr = [\"salary\", \"investment\"];\n        if (action.value === \"expense\") subCategoryArr = [\"food\", \"transportation\", \"clothing\", \"entertainment\", \"housing\", \"education\"];\n        return { ...state,\n          mainCategory: action.value,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"SUB_CATEGORY\":\n      {\n        let subCategoryArr; // add\n\n        if (action.check) {\n          // first check if the items has been in the array(avoid duplicate)\n          if (!state.subCategory.includes(action.value)) subCategoryArr = [...state.subCategory, action.value];\n        } // remove\n        else {\n          subCategoryArr = state.subCategory.filter(element => element !== action.value);\n        }\n\n        return { ...state,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"ISVALID\":\n      {\n        return { ...state,\n          isValid: true\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction ChartOption(props) {\n  _s();\n\n  const {\n    categoryExpense,\n    categoryIncome\n  } = useContext(CategoryContext);\n  const initialObj = {\n    mainType: \"\",\n    startingDate: \"\",\n    endingDate: \"\",\n    timeDuration: \"7\",\n    mainCategory: \"\",\n    subCategory: \"\",\n    isValid: false,\n    categoryExpense,\n    categoryIncome\n  };\n  const [optionMainData, setOptionMainData] = useState();\n  const [optionSubData, setOptionSubData] = useState();\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj); // it has to be three different index(helps to show the warning icon in ChartTime component)\n  // 1. for checking if user has chosen both starting and ending date\n\n  const timeValidIndex = chartData.startingDate && chartData.endingDate; // 2. for checking if user did NOT select the wrong order\n\n  const timeOrderValidIndex = Number(new Date(chartData.startingDate)) < Number(new Date(chartData.endingDate)); // 3. for check all the data in the form (includes above two indexes)\n\n  let validIndex = optionMainData && optionSubData && timeValidIndex && timeOrderValidIndex;\n  let checkboxContent = \"\";\n\n  if (optionMainData === \"time\") {\n    if (optionSubData === \"income\") checkboxContent = /*#__PURE__*/_jsxDEV(OptionCheckboxIncome, {\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this);\n    if (optionSubData === \"expense\") checkboxContent = /*#__PURE__*/_jsxDEV(OptionCheckboxExpense, {\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n    validIndex = optionMainData && optionSubData && chartData.startingDate;\n  }\n\n  function submitFormHandler(e) {\n    e.preventDefault();\n    props.setChartData(chartData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      className: style.chartOption,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: style[\"chartOption__title\"],\n          children: \"Analyize By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OptionRadioMain, {\n          dispatchChartData: dispatchChartData,\n          setOptionMainData: setOptionMainData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), optionMainData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(OptionTime, {\n            classColor: optionMainData,\n            dispatchChartData: dispatchChartData,\n            valueStarting: chartData.startingDate,\n            valueEnding: chartData.endingDate,\n            optionMainData: optionMainData,\n            timeValidIndex: timeValidIndex,\n            timeOrderValidIndex: timeOrderValidIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OptionRadioSub, {\n            classColor: optionMainData,\n            setOptionSubData: setOptionSubData,\n            dispatchChartData: dispatchChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), checkboxContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !validIndex,\n        className: !validIndex ? `${style.btn}` : `${style.btn} ${style[\"btn--active\"]}`,\n        children: \"Show Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartOption, \"w7CW3RoJIbVUv6kkP9SutjHfVTo=\");\n\n_c = ChartOption;\nexport default ChartOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartOption\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Chart/ChartOption/ChartOption.js"],"names":["useState","useReducer","useContext","style","Title","Button","Card","OptionRadioMain","OptionTime","OptionRadioSub","OptionCheckboxExpense","OptionCheckboxIncome","CategoryContext","reducer","state","action","type","mainType","value","startingDate","endingDate","timeDuration","subCategoryArr","mainCategory","subCategory","check","includes","filter","element","isValid","ChartOption","props","categoryExpense","categoryIncome","initialObj","optionMainData","setOptionMainData","optionSubData","setOptionSubData","chartData","dispatchChartData","timeValidIndex","timeOrderValidIndex","Number","Date","validIndex","checkboxContent","submitFormHandler","e","preventDefault","setChartData","chartOption","btn"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,OAAOC,eAAP,MAA4B,8CAA5B;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AAAkB;AAChB,eAAO,EAAE,GAAGF,KAAL;AAAYG,UAAAA,QAAQ,EAAEF,MAAM,CAACG;AAA7B,SAAP;AACD;;AAED,SAAK,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGJ,KAAL;AAAYK,UAAAA,YAAY,EAAEJ,MAAM,CAACG;AAAjC,SAAP;AACD;;AAED,SAAK,aAAL;AAAoB;AAClB,eAAO,EAAE,GAAGJ,KAAL;AAAYM,UAAAA,UAAU,EAAEL,MAAM,CAACG;AAA/B,SAAP;AACD;;AAED,SAAK,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGJ,KAAL;AAAYO,UAAAA,YAAY,EAAEN,MAAM,CAACG;AAAjC,SAAP;AACD;;AAED,SAAK,eAAL;AAAsB;AACpB,YAAII,cAAc,GAAG,EAArB;AACA,YAAIP,MAAM,CAACG,KAAP,KAAiB,QAArB,EAA+BI,cAAc,GAAG,CAAC,QAAD,EAAW,YAAX,CAAjB;AAC/B,YAAIP,MAAM,CAACG,KAAP,KAAiB,SAArB,EACEI,cAAc,GAAG,CACf,MADe,EAEf,gBAFe,EAGf,UAHe,EAIf,eAJe,EAKf,SALe,EAMf,WANe,CAAjB;AASF,eAAO,EACL,GAAGR,KADE;AAELS,UAAAA,YAAY,EAAER,MAAM,CAACG,KAFhB;AAGLM,UAAAA,WAAW,EAAEF;AAHR,SAAP;AAKD;;AAED,SAAK,cAAL;AAAqB;AACnB,YAAIA,cAAJ,CADmB,CAEnB;;AACA,YAAIP,MAAM,CAACU,KAAX,EAAkB;AAChB;AACA,cAAI,CAACX,KAAK,CAACU,WAAN,CAAkBE,QAAlB,CAA2BX,MAAM,CAACG,KAAlC,CAAL,EACEI,cAAc,GAAG,CAAC,GAAGR,KAAK,CAACU,WAAV,EAAuBT,MAAM,CAACG,KAA9B,CAAjB;AACH,SAJD,CAMA;AANA,aAOK;AACHI,UAAAA,cAAc,GAAGR,KAAK,CAACU,WAAN,CAAkBG,MAAlB,CACdC,OAAD,IAAaA,OAAO,KAAKb,MAAM,CAACG,KADjB,CAAjB;AAGD;;AAED,eAAO,EACL,GAAGJ,KADE;AAELU,UAAAA,WAAW,EAAEF;AAFR,SAAP;AAID;;AAED,SAAK,SAAL;AAAgB;AACd,eAAO,EAAE,GAAGR,KAAL;AAAYe,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AAED;AACE,aAAOf,KAAP;AAhEJ;AAkED;;AAED,SAASgB,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAsC/B,UAAU,CAACU,eAAD,CAAtD;AAEA,QAAMsB,UAAU,GAAG;AACjBjB,IAAAA,QAAQ,EAAE,EADO;AAEjBE,IAAAA,YAAY,EAAE,EAFG;AAGjBC,IAAAA,UAAU,EAAE,EAHK;AAIjBC,IAAAA,YAAY,EAAE,GAJG;AAKjBE,IAAAA,YAAY,EAAE,EALG;AAMjBC,IAAAA,WAAW,EAAE,EANI;AAOjBK,IAAAA,OAAO,EAAE,KAPQ;AAQjBG,IAAAA,eARiB;AASjBC,IAAAA;AATiB,GAAnB;AAYA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCpC,QAAQ,EAApD;AACA,QAAM,CAACqC,aAAD,EAAgBC,gBAAhB,IAAoCtC,QAAQ,EAAlD;AACA,QAAM,CAACuC,SAAD,EAAYC,iBAAZ,IAAiCvC,UAAU,CAACY,OAAD,EAAUqB,UAAV,CAAjD,CAjB0B,CAmB1B;AACA;;AACA,QAAMO,cAAc,GAAGF,SAAS,CAACpB,YAAV,IAA0BoB,SAAS,CAACnB,UAA3D,CArB0B,CAuB1B;;AACA,QAAMsB,mBAAmB,GACvBC,MAAM,CAAC,IAAIC,IAAJ,CAASL,SAAS,CAACpB,YAAnB,CAAD,CAAN,GACAwB,MAAM,CAAC,IAAIC,IAAJ,CAASL,SAAS,CAACnB,UAAnB,CAAD,CAFR,CAxB0B,CA4B1B;;AACA,MAAIyB,UAAU,GACZV,cAAc,IAAIE,aAAlB,IAAmCI,cAAnC,IAAqDC,mBADvD;AAGA,MAAII,eAAe,GAAG,EAAtB;;AAEA,MAAIX,cAAc,KAAK,MAAvB,EAA+B;AAC7B,QAAIE,aAAa,KAAK,QAAtB,EACES,eAAe,gBACb,QAAC,oBAAD;AAAsB,MAAA,iBAAiB,EAAEN;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF;AAGF,QAAIH,aAAa,KAAK,SAAtB,EACES,eAAe,gBACb,QAAC,qBAAD;AAAuB,MAAA,iBAAiB,EAAEN;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF;AAIFK,IAAAA,UAAU,GAAGV,cAAc,IAAIE,aAAlB,IAAmCE,SAAS,CAACpB,YAA1D;AACD;;AAED,WAAS4B,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,KAAK,CAACmB,YAAN,CAAmBX,SAAnB;AACD;;AAED,sBACE,QAAC,IAAD;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEQ,iBAAhB;AAAmC,MAAA,SAAS,EAAE5C,KAAK,CAACgD,WAApD;AAAA,8BACE;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEhD,KAAK,CAAC,oBAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,eAAD;AACE,UAAA,iBAAiB,EAAEqC,iBADrB;AAEE,UAAA,iBAAiB,EAAEJ;AAFrB;AAAA;AAAA;AAAA;AAAA,gBAHF,EAQGD,cAAc,iBACb;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,UAAU,EAAEA,cADd;AAEE,YAAA,iBAAiB,EAAEK,iBAFrB;AAGE,YAAA,aAAa,EAAED,SAAS,CAACpB,YAH3B;AAIE,YAAA,WAAW,EAAEoB,SAAS,CAACnB,UAJzB;AAKE,YAAA,cAAc,EAAEe,cALlB;AAME,YAAA,cAAc,EAAEM,cANlB;AAOE,YAAA,mBAAmB,EAAEC;AAPvB;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,cAAD;AACE,YAAA,UAAU,EAAEP,cADd;AAEE,YAAA,gBAAgB,EAAEG,gBAFpB;AAGE,YAAA,iBAAiB,EAAEE;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAVF,EAeGM,eAfH;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAE,CAACD,UADb;AAEE,QAAA,SAAS,EACP,CAACA,UAAD,GACK,GAAE1C,KAAK,CAACiD,GAAI,EADjB,GAEK,GAAEjD,KAAK,CAACiD,GAAI,IAAGjD,KAAK,CAAC,aAAD,CAAgB,EAL7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GAjGQ2B,W;;KAAAA,W;AAmGT,eAAeA,WAAf","sourcesContent":["import { useState, useReducer, useContext } from \"react\";\nimport style from \"./ChartOption.module.css\";\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport OptionCheckboxExpense from \"./OptionCheckbox/OptionCheckboxExpense\";\nimport OptionCheckboxIncome from \"./OptionCheckbox/OptionCheckBoxIncome\";\nimport CategoryContext from \"../../../../store/category/category--context\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\": {\n      return { ...state, mainType: action.value };\n    }\n\n    case \"STARTING_DATE\": {\n      return { ...state, startingDate: action.value };\n    }\n\n    case \"ENDING_DATE\": {\n      return { ...state, endingDate: action.value };\n    }\n\n    case \"TIME_DURATION\": {\n      return { ...state, timeDuration: action.value };\n    }\n\n    case \"MAIN_CATEGORY\": {\n      let subCategoryArr = [];\n      if (action.value === \"income\") subCategoryArr = [\"salary\", \"investment\"];\n      if (action.value === \"expense\")\n        subCategoryArr = [\n          \"food\",\n          \"transportation\",\n          \"clothing\",\n          \"entertainment\",\n          \"housing\",\n          \"education\",\n        ];\n\n      return {\n        ...state,\n        mainCategory: action.value,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"SUB_CATEGORY\": {\n      let subCategoryArr;\n      // add\n      if (action.check) {\n        // first check if the items has been in the array(avoid duplicate)\n        if (!state.subCategory.includes(action.value))\n          subCategoryArr = [...state.subCategory, action.value];\n      }\n\n      // remove\n      else {\n        subCategoryArr = state.subCategory.filter(\n          (element) => element !== action.value\n        );\n      }\n\n      return {\n        ...state,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"ISVALID\": {\n      return { ...state, isValid: true };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction ChartOption(props) {\n  const { categoryExpense, categoryIncome } = useContext(CategoryContext);\n\n  const initialObj = {\n    mainType: \"\",\n    startingDate: \"\",\n    endingDate: \"\",\n    timeDuration: \"7\",\n    mainCategory: \"\",\n    subCategory: \"\",\n    isValid: false,\n    categoryExpense,\n    categoryIncome,\n  };\n\n  const [optionMainData, setOptionMainData] = useState();\n  const [optionSubData, setOptionSubData] = useState();\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n\n  // it has to be three different index(helps to show the warning icon in ChartTime component)\n  // 1. for checking if user has chosen both starting and ending date\n  const timeValidIndex = chartData.startingDate && chartData.endingDate;\n\n  // 2. for checking if user did NOT select the wrong order\n  const timeOrderValidIndex =\n    Number(new Date(chartData.startingDate)) <\n    Number(new Date(chartData.endingDate));\n\n  // 3. for check all the data in the form (includes above two indexes)\n  let validIndex =\n    optionMainData && optionSubData && timeValidIndex && timeOrderValidIndex;\n\n  let checkboxContent = \"\";\n\n  if (optionMainData === \"time\") {\n    if (optionSubData === \"income\")\n      checkboxContent = (\n        <OptionCheckboxIncome dispatchChartData={dispatchChartData} />\n      );\n    if (optionSubData === \"expense\")\n      checkboxContent = (\n        <OptionCheckboxExpense dispatchChartData={dispatchChartData} />\n      );\n\n    validIndex = optionMainData && optionSubData && chartData.startingDate;\n  }\n\n  function submitFormHandler(e) {\n    e.preventDefault();\n    props.setChartData(chartData);\n  }\n\n  return (\n    <Card>\n      <form onSubmit={submitFormHandler} className={style.chartOption}>\n        <div>\n          <Title className={style[\"chartOption__title\"]}>Analyize By</Title>\n\n          <OptionRadioMain\n            dispatchChartData={dispatchChartData}\n            setOptionMainData={setOptionMainData}\n          />\n\n          {optionMainData && (\n            <div>\n              <OptionTime\n                classColor={optionMainData}\n                dispatchChartData={dispatchChartData}\n                valueStarting={chartData.startingDate}\n                valueEnding={chartData.endingDate}\n                optionMainData={optionMainData}\n                timeValidIndex={timeValidIndex}\n                timeOrderValidIndex={timeOrderValidIndex}\n              />\n              <OptionRadioSub\n                classColor={optionMainData}\n                setOptionSubData={setOptionSubData}\n                dispatchChartData={dispatchChartData}\n              />\n              {checkboxContent}\n            </div>\n          )}\n        </div>\n\n        <Button\n          disabled={!validIndex}\n          className={\n            !validIndex\n              ? `${style.btn}`\n              : `${style.btn} ${style[\"btn--active\"]}`\n          }\n        >\n          Show Chart\n        </Button>\n      </form>\n    </Card>\n  );\n}\n\nexport default ChartOption;\n"]},"metadata":{},"sourceType":"module"}