{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Chart/ChartOption/ChartOption.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer, useEffect } from \"react\";\nimport style from \"./ChartOption.module.css\";\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport OptionCheckboxExpense from \"./OptionCheckbox/OptionCheckboxExpense\";\nimport OptionCheckboxIncome from \"./OptionCheckbox/OptionCheckBoxIncome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialObj = {\n  mainType: \"\",\n  startingDate: \"\",\n  endingDate: \"\",\n  timeDuration: \"7\",\n  mainCategory: \"\",\n  subCategory: \"\",\n  isValid: false\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\":\n      {\n        return { ...state,\n          mainType: action.value\n        };\n      }\n\n    case \"STARTING_DATE\":\n      {\n        return { ...state,\n          startingDate: action.value\n        };\n      }\n\n    case \"ENDING_DATE\":\n      {\n        return { ...state,\n          endingDate: action.value\n        };\n      }\n\n    case \"TIME_DURATION\":\n      {\n        return { ...state,\n          timeDuration: action.value\n        };\n      }\n\n    case \"MAIN_CATEGORY\":\n      {\n        let subCategoryArr = [];\n        if (action.value === \"income\") subCategoryArr = [\"salary\", \"investment\"];\n        if (action.value === \"expense\") subCategoryArr = [\"food\", \"transportation\", \"clothing\", \"entertainment\", \"housing\", \"education\"];\n        return { ...state,\n          mainCategory: action.value,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"SUB_CATEGORY\":\n      {\n        let subCategoryArr; // add\n\n        if (action.check) {\n          // first check if the items has been in the array(avoid duplicate)\n          if (!state.subCategory.includes(action.value)) subCategoryArr = [...state.subCategory, action.value];\n        } // remove\n        else {\n          subCategoryArr = state.subCategory.filter(element => element !== action.value);\n        }\n\n        return { ...state,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"ISVALID\":\n      {\n        return { ...state,\n          isValid: true\n        };\n      }\n    // case \"RESET\": {\n    //   return {\n    //     mainType: action.value,\n    //     startingDate: \"\",\n    //     endingDate: \"\",\n    //     timeDuration: \"7\",\n    //     mainCategory: \"\",\n    //     subCategory: \"\",\n    //     isValid: false,\n    //   };\n    // }\n\n    default:\n      return state;\n  }\n}\n\nfunction ChartOption(props) {\n  _s();\n\n  const [optionMainData, setOptionMainData] = useState();\n  const [optionSubData, setOptionSubData] = useState();\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n  let checkboxContent = \"\";\n  let validIndex = optionMainData && optionSubData && chartData.startingDate && chartData.endingDate;\n\n  if (optionMainData === \"time\") {\n    if (optionSubData === \"income\") checkboxContent = /*#__PURE__*/_jsxDEV(OptionCheckboxIncome, {\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this);\n    if (optionSubData === \"expense\") checkboxContent = /*#__PURE__*/_jsxDEV(OptionCheckboxExpense, {\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this);\n    validIndex = optionMainData && optionSubData && chartData.startingDate;\n  }\n\n  function submitFormHandler(e) {\n    e.preventDefault();\n    props.setChartData(chartData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitFormHandler,\n      className: style.chartOption,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: style[\"chartOption__title\"],\n          children: \"Analyize By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OptionRadioMain, {\n          dispatchChartData: dispatchChartData,\n          setOptionMainData: setOptionMainData,\n          optionMainData: optionMainData,\n          chartData: chartData,\n          setOptionSubData: setOptionSubData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), optionMainData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(OptionTime, {\n            classColor: optionMainData,\n            dispatchChartData: dispatchChartData,\n            valueStarting: chartData.startingDate,\n            valueEnding: chartData.endingDate,\n            optionMainData: optionMainData,\n            chartData: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OptionRadioSub, {\n            classColor: optionMainData,\n            setOptionSubData: setOptionSubData,\n            dispatchChartData: dispatchChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), checkboxContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !validIndex,\n        className: !validIndex ? `${style.btn}` : `${style.btn} ${style[\"btn--active\"]}`,\n        children: \"Show Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartOption, \"pjaYv+T4le0ug4cvO0A+hAoX44s=\");\n\n_c = ChartOption;\nexport default ChartOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartOption\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Chart/ChartOption/ChartOption.js"],"names":["useState","useReducer","useEffect","style","Title","Button","Card","OptionRadioMain","OptionTime","OptionRadioSub","OptionCheckboxExpense","OptionCheckboxIncome","initialObj","mainType","startingDate","endingDate","timeDuration","mainCategory","subCategory","isValid","reducer","state","action","type","value","subCategoryArr","check","includes","filter","element","ChartOption","props","optionMainData","setOptionMainData","optionSubData","setOptionSubData","chartData","dispatchChartData","checkboxContent","validIndex","submitFormHandler","e","preventDefault","setChartData","chartOption","btn"],"mappings":"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","sourcesContent":["import { useState, useReducer, useEffect } from \"react\";\n\nimport style from \"./ChartOption.module.css\";\n\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport OptionCheckboxExpense from \"./OptionCheckbox/OptionCheckboxExpense\";\nimport OptionCheckboxIncome from \"./OptionCheckbox/OptionCheckBoxIncome\";\n\nconst initialObj = {\n  mainType: \"\",\n  startingDate: \"\",\n  endingDate: \"\",\n  timeDuration: \"7\",\n  mainCategory: \"\",\n  subCategory: \"\",\n  isValid: false,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\": {\n      return { ...state, mainType: action.value };\n    }\n\n    case \"STARTING_DATE\": {\n      return { ...state, startingDate: action.value };\n    }\n\n    case \"ENDING_DATE\": {\n      return { ...state, endingDate: action.value };\n    }\n\n    case \"TIME_DURATION\": {\n      return { ...state, timeDuration: action.value };\n    }\n\n    case \"MAIN_CATEGORY\": {\n      let subCategoryArr = [];\n      if (action.value === \"income\") subCategoryArr = [\"salary\", \"investment\"];\n      if (action.value === \"expense\")\n        subCategoryArr = [\n          \"food\",\n          \"transportation\",\n          \"clothing\",\n          \"entertainment\",\n          \"housing\",\n          \"education\",\n        ];\n\n      return {\n        ...state,\n        mainCategory: action.value,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"SUB_CATEGORY\": {\n      let subCategoryArr;\n      // add\n      if (action.check) {\n        // first check if the items has been in the array(avoid duplicate)\n        if (!state.subCategory.includes(action.value))\n          subCategoryArr = [...state.subCategory, action.value];\n      }\n\n      // remove\n      else {\n        subCategoryArr = state.subCategory.filter(\n          (element) => element !== action.value\n        );\n      }\n\n      return {\n        ...state,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"ISVALID\": {\n      return { ...state, isValid: true };\n    }\n\n    // case \"RESET\": {\n    //   return {\n    //     mainType: action.value,\n    //     startingDate: \"\",\n    //     endingDate: \"\",\n    //     timeDuration: \"7\",\n    //     mainCategory: \"\",\n    //     subCategory: \"\",\n    //     isValid: false,\n    //   };\n    // }\n\n    default:\n      return state;\n  }\n}\n\nfunction ChartOption(props) {\n  const [optionMainData, setOptionMainData] = useState();\n  const [optionSubData, setOptionSubData] = useState();\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n\n  let checkboxContent = \"\";\n\n  let validIndex =\n    optionMainData &&\n    optionSubData &&\n    chartData.startingDate &&\n    chartData.endingDate;\n\n  if (optionMainData === \"time\") {\n    if (optionSubData === \"income\")\n      checkboxContent = (\n        <OptionCheckboxIncome dispatchChartData={dispatchChartData} />\n      );\n    if (optionSubData === \"expense\")\n      checkboxContent = (\n        <OptionCheckboxExpense dispatchChartData={dispatchChartData} />\n      );\n\n    validIndex = optionMainData && optionSubData && chartData.startingDate;\n  }\n\n  function submitFormHandler(e) {\n    e.preventDefault();\n    props.setChartData(chartData);\n  }\n\n  return (\n    <Card>\n      <form onSubmit={submitFormHandler} className={style.chartOption}>\n        <div>\n          <Title className={style[\"chartOption__title\"]}>Analyize By</Title>\n\n          <OptionRadioMain\n            dispatchChartData={dispatchChartData}\n            setOptionMainData={setOptionMainData}\n            optionMainData={optionMainData}\n            chartData={chartData}\n            setOptionSubData={setOptionSubData}\n          />\n\n          {optionMainData && (\n            <div>\n              <OptionTime\n                classColor={optionMainData}\n                dispatchChartData={dispatchChartData}\n                valueStarting={chartData.startingDate}\n                valueEnding={chartData.endingDate}\n                optionMainData={optionMainData}\n                chartData={chartData}\n              />\n              <OptionRadioSub\n                classColor={optionMainData}\n                setOptionSubData={setOptionSubData}\n                dispatchChartData={dispatchChartData}\n              />\n              {checkboxContent}\n            </div>\n          )}\n        </div>\n\n        <div>\n          <p>warning</p>\n        </div>\n\n        <Button\n          disabled={!validIndex}\n          className={\n            !validIndex\n              ? `${style.btn}`\n              : `${style.btn} ${style[\"btn--active\"]}`\n          }\n        >\n          Show Chart\n        </Button>\n      </form>\n    </Card>\n  );\n}\n\nexport default ChartOption;\n"]},"metadata":{},"sourceType":"module"}