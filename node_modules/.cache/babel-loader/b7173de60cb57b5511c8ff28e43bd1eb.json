{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Title from \"../SubTitle/SubTitle\";\nimport InputCheckbox from \"../InputCheckbox/InputCheckbox\";\nimport Backdrop from \"./Backdrop\";\nimport AddDataForm from \"../AddDataForm/AddDateForm\";\nimport InputRadio from \"../InputRadio/InputRadio\";\nimport Button from \"../Button\";\nimport style from \"./Modal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXPENSE_CATEGORY = {\n  food: [\"breakfast\", \"brunch\", \"lunch\", \"dinner\", \"snack\", \"drink\"],\n  clothing: [\"clothes\", \"pants\", \"shoes\", \"accessories\", \"underwear\"],\n  housing: [\"rent\", \"water  bill\", \"electricity bill\", \"gas bill\", \"cable bill\", \"internet bill\"],\n  transportation: [\"gasoline\", \"parking\", \"maintenance\"],\n  education: [\"books\", \"course\"],\n  entertainment: [\"video games\", \"computer games\", \"party\"]\n};\nconst INCOME_CATEGORY = {\n  salary: [\"salary\", \"bonus\"],\n  stock: [\"stock\"]\n};\n\nfunction PopupModal(props) {\n  _s();\n\n  const [mainCategoryState, setMainCategoryState] = useState(\"expense\");\n  const [subCategoryState, setSubCategoryState] = useState(EXPENSE_CATEGORY[\"food\"]);\n  const [animation, setAnimation] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  useEffect(() => {\n    setAnimation(mainCategoryState);\n    const time = setTimeout(() => {\n      setAnimation(false);\n    }, 500);\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [mainCategoryState]);\n  let mainCategoryArr = [];\n  if (mainCategoryState === \"expense\") mainCategoryArr = Object.keys(EXPENSE_CATEGORY);\n  if (mainCategoryState === \"income\") mainCategoryArr = Object.keys(INCOME_CATEGORY);\n\n  function mainCategoryChangeHandler(e) {\n    setMainCategoryState(e.target.value);\n    if (e.target.value === \"expense\") setSubCategoryState(EXPENSE_CATEGORY[\"food\"]);\n    if (e.target.value === \"income\") setSubCategoryState(INCOME_CATEGORY[\"salary\"]);\n  }\n\n  function subCategoryChangeHandler(e) {\n    if (mainCategoryState === \"expense\") setSubCategoryState(EXPENSE_CATEGORY[e.target.value]);\n    if (mainCategoryState === \"income\") setSubCategoryState(INCOME_CATEGORY[e.target.value]);\n  }\n\n  function dateChangeHandler(e) {\n    console.log(e.target.value);\n  }\n\n  function priceChangeHandler(e) {\n    if (e.target.value.length > 0 && !Object.is(-0, Number(e.target.value)) && Number(e.target.value) >= 0) setIsValid(true);else setIsValid(false);\n  }\n\n  function cancelClickHandler() {\n    props.setModalShown(false);\n  }\n\n  let classNameAnimation = !animation ? \"\" : animation === \"expense\" ? \"bump--blue\" : \"bump--pink\";\n  return /*#__PURE__*/_jsxDEV(Backdrop, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.modal,\n      children: /*#__PURE__*/_jsxDEV(AddDataForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopupModal, \"ywPzQarhjKpSPG2Z2gAA4Fkan9Y=\");\n\n_c = PopupModal;\n\nfunction Modal(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(PopupModal, {\n      setModalShown: props.setModalShown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), document.querySelector(\"#modal\"))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Modal;\nexport default Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopupModal\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/UI/Modal/Modal.js"],"names":["useState","Fragment","useEffect","ReactDOM","Title","InputCheckbox","Backdrop","AddDataForm","InputRadio","Button","style","EXPENSE_CATEGORY","food","clothing","housing","transportation","education","entertainment","INCOME_CATEGORY","salary","stock","PopupModal","props","mainCategoryState","setMainCategoryState","subCategoryState","setSubCategoryState","animation","setAnimation","isValid","setIsValid","time","setTimeout","cleanUp","clearTimeout","mainCategoryArr","Object","keys","mainCategoryChangeHandler","e","target","value","subCategoryChangeHandler","dateChangeHandler","console","log","priceChangeHandler","length","is","Number","cancelClickHandler","setModalShown","classNameAnimation","modal","Modal","createPortal","document","querySelector"],"mappings":"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","sourcesContent":["import { useState, Fragment, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Title from \"../SubTitle/SubTitle\";\nimport InputCheckbox from \"../InputCheckbox/InputCheckbox\";\nimport Backdrop from \"./Backdrop\";\nimport AddDataForm from \"../AddDataForm/AddDateForm\";\nimport InputRadio from \"../InputRadio/InputRadio\";\nimport Button from \"../Button\";\n\nimport style from \"./Modal.module.css\";\n\nconst EXPENSE_CATEGORY = {\n  food: [\"breakfast\", \"brunch\", \"lunch\", \"dinner\", \"snack\", \"drink\"],\n  clothing: [\"clothes\", \"pants\", \"shoes\", \"accessories\", \"underwear\"],\n  housing: [\n    \"rent\",\n    \"water  bill\",\n    \"electricity bill\",\n    \"gas bill\",\n    \"cable bill\",\n    \"internet bill\",\n  ],\n  transportation: [\"gasoline\", \"parking\", \"maintenance\"],\n  education: [\"books\", \"course\"],\n  entertainment: [\"video games\", \"computer games\", \"party\"],\n};\n\nconst INCOME_CATEGORY = {\n  salary: [\"salary\", \"bonus\"],\n  stock: [\"stock\"],\n};\n\nfunction PopupModal(props) {\n  const [mainCategoryState, setMainCategoryState] = useState(\"expense\");\n  const [subCategoryState, setSubCategoryState] = useState(\n    EXPENSE_CATEGORY[\"food\"]\n  );\n  const [animation, setAnimation] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    setAnimation(mainCategoryState);\n\n    const time = setTimeout(() => {\n      setAnimation(false);\n    }, 500);\n\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [mainCategoryState]);\n\n  let mainCategoryArr = [];\n  if (mainCategoryState === \"expense\")\n    mainCategoryArr = Object.keys(EXPENSE_CATEGORY);\n  if (mainCategoryState === \"income\")\n    mainCategoryArr = Object.keys(INCOME_CATEGORY);\n\n  function mainCategoryChangeHandler(e) {\n    setMainCategoryState(e.target.value);\n\n    if (e.target.value === \"expense\")\n      setSubCategoryState(EXPENSE_CATEGORY[\"food\"]);\n\n    if (e.target.value === \"income\")\n      setSubCategoryState(INCOME_CATEGORY[\"salary\"]);\n  }\n\n  function subCategoryChangeHandler(e) {\n    if (mainCategoryState === \"expense\")\n      setSubCategoryState(EXPENSE_CATEGORY[e.target.value]);\n    if (mainCategoryState === \"income\")\n      setSubCategoryState(INCOME_CATEGORY[e.target.value]);\n  }\n\n  function dateChangeHandler(e) {\n    console.log(e.target.value);\n  }\n\n  function priceChangeHandler(e) {\n    if (\n      e.target.value.length > 0 &&\n      !Object.is(-0, Number(e.target.value)) &&\n      Number(e.target.value) >= 0\n    )\n      setIsValid(true);\n    else setIsValid(false);\n  }\n\n  function cancelClickHandler() {\n    props.setModalShown(false);\n  }\n\n  let classNameAnimation = !animation\n    ? \"\"\n    : animation === \"expense\"\n    ? \"bump--blue\"\n    : \"bump--pink\";\n\n  return (\n    <Backdrop>\n      <div className={style.modal}>\n        <AddDataForm />\n        {/* <form className={style.form}>\n          <div className={style[\"title__container\"]}>\n            <InputRadio\n              classInput={style.input}\n              classCheck={`${style.expense} ${style.check}`}\n              classLabel={style.title}\n              label=\"expense\"\n              name=\"title\"\n              value=\"expense\"\n              onChange={mainCategoryChangeHandler}\n              checked={mainCategoryState === \"expense\"}\n            />\n            <InputRadio\n              classInput={style.input}\n              classCheck={`${style.income} ${style.check}`}\n              classLabel={style.title}\n              label=\"income\"\n              name=\"title\"\n              value=\"income\"\n              onChange={mainCategoryChangeHandler}\n              check={mainCategoryState === \"income\"}\n            />\n          </div>\n          <hr className={style.line}></hr>\n          <div className={style[\"form__container\"]}>\n            <div className={style[\"container\"]}>\n              <label className={`${style.label} ${style[classNameAnimation]}`}>\n                main category\n              </label>\n              <select\n                onChange={subCategoryChangeHandler}\n                className={style.input}\n                type=\"select\"\n              >\n                {mainCategoryArr.map((element) => (\n                  <option value={element} key={element}>\n                    {element}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className={style[\"container\"]}>\n              <label className={`${style.label} ${style[classNameAnimation]}`}>\n                sub category\n              </label>\n\n              <select className={style.input} type=\"select\">\n                {subCategoryState.map((element) => (\n                  <option key={element}>{element}</option>\n                ))}\n              </select>\n            </div>\n            <div className={style[\"container\"]}>\n              <label className={`${style.label} ${style[classNameAnimation]}`}>\n                description (optional)\n              </label>\n              <input className={style.input} type=\"text\"></input>\n            </div>\n\n            <div className={style[\"container\"]}>\n              <label className={`${style.label} ${style[classNameAnimation]}`}>\n                date\n              </label>\n              <input\n                className={style.input}\n                type=\"date\"\n                onChange={dateChangeHandler}\n                defaultValue={new Date().toISOString().substr(0, 10)}\n              ></input>\n            </div>\n\n            <div\n              className={`${style[\"container\"]} ${style[\"container--last\"]}`}\n            >\n              <label className={`${style.label} ${style[classNameAnimation]}`}>\n                price\n              </label>\n              <input\n                onChange={priceChangeHandler}\n                className={style.input}\n                type=\"number\"\n              ></input>\n            </div>\n\n            <div className={`${style[\"btn__container\"]} `}>\n              <Button\n                type=\"button\"\n                className={`${style.btn} ${style[\"btn--isValid\"]}`}\n                onClick={cancelClickHandler}\n              >\n                cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                className={\n                  isValid\n                    ? `${style[\"btn--isValid\"]} ${style.btn}`\n                    : `${style.btn}`\n                }\n                disabled={!isValid}\n              >\n                add\n              </Button>\n            </div>\n          </div>\n        </form> */}\n      </div>\n    </Backdrop>\n  );\n}\n\nfunction Modal(props) {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <PopupModal setModalShown={props.setModalShown} />,\n        document.querySelector(\"#modal\")\n      )}\n    </Fragment>\n  );\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}