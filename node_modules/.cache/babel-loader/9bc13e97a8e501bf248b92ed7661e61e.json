{"ast":null,"code":"const dateOptions = {\n  weekday: \"short\"\n};\n\nfunction createWeeklyData(currentDate) {\n  const dateArr = [];\n\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(currentDate.setDate(currentDate.getDate() - currentDate.getDay() + i));\n    dateArr.push({\n      weekDay: new Intl.DateTimeFormat(\"en-US\", dateOptions).format(date).toUpperCase(),\n      monthDay: date.getDate(),\n      month: date.getMonth(),\n      dateObj: date\n    });\n  }\n\n  return dateArr;\n}\n\nexport default createWeeklyData;\nconsole.log(\"test\");\nconsole.log(new Date(\"2021-11-11\"));","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/Others/createWeeklyData.js"],"names":["dateOptions","weekday","createWeeklyData","currentDate","dateArr","i","date","Date","setDate","getDate","getDay","push","weekDay","Intl","DateTimeFormat","format","toUpperCase","monthDay","month","getMonth","dateObj","console","log"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE;AADS,CAApB;;AAIA,SAASC,gBAAT,CAA0BC,WAA1B,EAAuC;AACrC,QAAMC,OAAO,GAAG,EAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CACXJ,WAAW,CAACK,OAAZ,CAAoBL,WAAW,CAACM,OAAZ,KAAwBN,WAAW,CAACO,MAAZ,EAAxB,GAA+CL,CAAnE,CADW,CAAb;AAIAD,IAAAA,OAAO,CAACO,IAAR,CAAa;AACXC,MAAAA,OAAO,EAAE,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCd,WAAjC,EACNe,MADM,CACCT,IADD,EAENU,WAFM,EADE;AAIXC,MAAAA,QAAQ,EAAEX,IAAI,CAACG,OAAL,EAJC;AAKXS,MAAAA,KAAK,EAAEZ,IAAI,CAACa,QAAL,EALI;AAMXC,MAAAA,OAAO,EAAEd;AANE,KAAb;AAQD;;AAED,SAAOF,OAAP;AACD;;AAED,eAAeF,gBAAf;AAEAmB,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,OAAO,CAACC,GAAR,CAAY,IAAIf,IAAJ,CAAS,YAAT,CAAZ","sourcesContent":["const dateOptions = {\n  weekday: \"short\",\n};\n\nfunction createWeeklyData(currentDate) {\n  const dateArr = [];\n\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(\n      currentDate.setDate(currentDate.getDate() - currentDate.getDay() + i)\n    );\n\n    dateArr.push({\n      weekDay: new Intl.DateTimeFormat(\"en-US\", dateOptions)\n        .format(date)\n        .toUpperCase(),\n      monthDay: date.getDate(),\n      month: date.getMonth(),\n      dateObj: date,\n    });\n  }\n\n  return dateArr;\n}\n\nexport default createWeeklyData;\n\nconsole.log(\"test\");\nconsole.log(new Date(\"2021-11-11\"));\n"]},"metadata":{},"sourceType":"module"}