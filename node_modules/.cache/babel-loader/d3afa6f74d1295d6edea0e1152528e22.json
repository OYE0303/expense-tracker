{"ast":null,"code":"import createStandardLabelsArr from \"./createStandardLabelsArr\";\nimport createLineLabels from \"./createLineLabels\";\nimport createLabelsArr from \"./createLabelsArr\";\nimport createBarDataArr from \"./createBarDataArr\";\nimport createPieDataArr from \"./createPieDataArr\";\nimport createLineDataArr from \"./createLineDataArr\";\nimport createFilteredData from \"./createFilteredData\"; // Reference 1\n\nfunction createChartDataArr(mainType, timeDuration, startingDate, endingDate, expenseData, mainCategory, subCategory, showLabel = false, mainCategoryData = [], subCategoryData = [], displayTheme) {\n  const standardLabels = createStandardLabelsArr(timeDuration, startingDate);\n  let labels, data;\n\n  if (mainType === \"time\" && mainCategory === \"net\") {\n    labels = createLineLabels(new Date(standardLabels[0]), new Date(standardLabels[standardLabels.length - 1]));\n    data = createLineDataArr(labels, createFilteredData(standardLabels, expenseData));\n  } else if (mainType === \"time\") {} else {} // Reference 2\n\n\n  if (mainType === \"time\") {\n    labels = createLabelsArr(standardLabels, timeDuration);\n\n    if (mainCategory === \"net\") {\n      labels = createLineLabels(new Date(standardLabels[0]), new Date(standardLabels[standardLabels.length - 1]));\n      data = createLineDataArr(labels, createFilteredData(standardLabels, expenseData));\n    } else {\n      data = createBarDataArr(standardLabels, createFilteredData(standardLabels, expenseData), timeDuration, mainCategory, subCategory, showLabel, mainCategoryData, subCategoryData);\n    }\n  } else {\n    [labels, data] = createPieDataArr(startingDate, endingDate, expenseData, mainCategory);\n  }\n\n  return [labels, data, displayTheme, mainType, mainCategory, timeDuration, showLabel];\n}\n\nexport default createChartDataArr;\n/*\nReference 1\nthe main purpose of this function is to create \ndifferent type of date based on different type of chart\nWe have three different type of charts\n1. line\n2. bar\n3. pie\n\nat first, it may seem that line and bar should have same labels and data\nBUT, it's not\nimagine when user choose 90 days, \nwe know that there are a lot of labels\nit's okay to have many labels when chart is bar\nBUT, it's not good when chart is line\nthe chart is just not look good\nwe'll always fix the labels at 7 length for line-chart\nSo line-chart will have different labels and data\n*/\n\n/*\nReference 2\nIt seems it's not good to have nested if-statement\nBUT, we indeed need this here\nbecause \n*/","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateChartData/createChartDataArr.js"],"names":["createStandardLabelsArr","createLineLabels","createLabelsArr","createBarDataArr","createPieDataArr","createLineDataArr","createFilteredData","createChartDataArr","mainType","timeDuration","startingDate","endingDate","expenseData","mainCategory","subCategory","showLabel","mainCategoryData","subCategoryData","displayTheme","standardLabels","labels","data","Date","length"],"mappings":"AAAA,OAAOA,uBAAP,MAAoC,2BAApC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B,C,CAEA;;AACA,SAASC,kBAAT,CACEC,QADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,SAAS,GAAG,KARd,EASEC,gBAAgB,GAAG,EATrB,EAUEC,eAAe,GAAG,EAVpB,EAWEC,YAXF,EAYE;AACA,QAAMC,cAAc,GAAGnB,uBAAuB,CAACS,YAAD,EAAeC,YAAf,CAA9C;AACA,MAAIU,MAAJ,EAAYC,IAAZ;;AAEA,MAAIb,QAAQ,KAAK,MAAb,IAAuBK,YAAY,KAAK,KAA5C,EAAmD;AACjDO,IAAAA,MAAM,GAAGnB,gBAAgB,CACvB,IAAIqB,IAAJ,CAASH,cAAc,CAAC,CAAD,CAAvB,CADuB,EAEvB,IAAIG,IAAJ,CAASH,cAAc,CAACA,cAAc,CAACI,MAAf,GAAwB,CAAzB,CAAvB,CAFuB,CAAzB;AAKAF,IAAAA,IAAI,GAAGhB,iBAAiB,CACtBe,MADsB,EAEtBd,kBAAkB,CAACa,cAAD,EAAiBP,WAAjB,CAFI,CAAxB;AAID,GAVD,MAUO,IAAIJ,QAAQ,KAAK,MAAjB,EAAyB,CAC/B,CADM,MACA,CACN,CAhBD,CAkBA;;;AACA,MAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvBY,IAAAA,MAAM,GAAGlB,eAAe,CAACiB,cAAD,EAAiBV,YAAjB,CAAxB;;AAEA,QAAII,YAAY,KAAK,KAArB,EAA4B;AAC1BO,MAAAA,MAAM,GAAGnB,gBAAgB,CACvB,IAAIqB,IAAJ,CAASH,cAAc,CAAC,CAAD,CAAvB,CADuB,EAEvB,IAAIG,IAAJ,CAASH,cAAc,CAACA,cAAc,CAACI,MAAf,GAAwB,CAAzB,CAAvB,CAFuB,CAAzB;AAKAF,MAAAA,IAAI,GAAGhB,iBAAiB,CACtBe,MADsB,EAEtBd,kBAAkB,CAACa,cAAD,EAAiBP,WAAjB,CAFI,CAAxB;AAID,KAVD,MAUO;AACLS,MAAAA,IAAI,GAAGlB,gBAAgB,CACrBgB,cADqB,EAErBb,kBAAkB,CAACa,cAAD,EAAiBP,WAAjB,CAFG,EAGrBH,YAHqB,EAIrBI,YAJqB,EAKrBC,WALqB,EAMrBC,SANqB,EAOrBC,gBAPqB,EAQrBC,eARqB,CAAvB;AAUD;AACF,GAzBD,MAyBO;AACL,KAACG,MAAD,EAASC,IAAT,IAAiBjB,gBAAgB,CAC/BM,YAD+B,EAE/BC,UAF+B,EAG/BC,WAH+B,EAI/BC,YAJ+B,CAAjC;AAMD;;AAED,SAAO,CACLO,MADK,EAELC,IAFK,EAGLH,YAHK,EAILV,QAJK,EAKLK,YALK,EAMLJ,YANK,EAOLM,SAPK,CAAP;AASD;;AAED,eAAeR,kBAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import createStandardLabelsArr from \"./createStandardLabelsArr\";\nimport createLineLabels from \"./createLineLabels\";\nimport createLabelsArr from \"./createLabelsArr\";\nimport createBarDataArr from \"./createBarDataArr\";\nimport createPieDataArr from \"./createPieDataArr\";\nimport createLineDataArr from \"./createLineDataArr\";\nimport createFilteredData from \"./createFilteredData\";\n\n// Reference 1\nfunction createChartDataArr(\n  mainType,\n  timeDuration,\n  startingDate,\n  endingDate,\n  expenseData,\n  mainCategory,\n  subCategory,\n  showLabel = false,\n  mainCategoryData = [],\n  subCategoryData = [],\n  displayTheme\n) {\n  const standardLabels = createStandardLabelsArr(timeDuration, startingDate);\n  let labels, data;\n\n  if (mainType === \"time\" && mainCategory === \"net\") {\n    labels = createLineLabels(\n      new Date(standardLabels[0]),\n      new Date(standardLabels[standardLabels.length - 1])\n    );\n\n    data = createLineDataArr(\n      labels,\n      createFilteredData(standardLabels, expenseData)\n    );\n  } else if (mainType === \"time\") {\n  } else {\n  }\n\n  // Reference 2\n  if (mainType === \"time\") {\n    labels = createLabelsArr(standardLabels, timeDuration);\n\n    if (mainCategory === \"net\") {\n      labels = createLineLabels(\n        new Date(standardLabels[0]),\n        new Date(standardLabels[standardLabels.length - 1])\n      );\n\n      data = createLineDataArr(\n        labels,\n        createFilteredData(standardLabels, expenseData)\n      );\n    } else {\n      data = createBarDataArr(\n        standardLabels,\n        createFilteredData(standardLabels, expenseData),\n        timeDuration,\n        mainCategory,\n        subCategory,\n        showLabel,\n        mainCategoryData,\n        subCategoryData\n      );\n    }\n  } else {\n    [labels, data] = createPieDataArr(\n      startingDate,\n      endingDate,\n      expenseData,\n      mainCategory\n    );\n  }\n\n  return [\n    labels,\n    data,\n    displayTheme,\n    mainType,\n    mainCategory,\n    timeDuration,\n    showLabel,\n  ];\n}\n\nexport default createChartDataArr;\n/*\nReference 1\nthe main purpose of this function is to create \ndifferent type of date based on different type of chart\nWe have three different type of charts\n1. line\n2. bar\n3. pie\n\nat first, it may seem that line and bar should have same labels and data\nBUT, it's not\nimagine when user choose 90 days, \nwe know that there are a lot of labels\nit's okay to have many labels when chart is bar\nBUT, it's not good when chart is line\nthe chart is just not look good\nwe'll always fix the labels at 7 length for line-chart\nSo line-chart will have different labels and data\n*/\n\n/*\nReference 2\nIt seems it's not good to have nested if-statement\nBUT, we indeed need this here\nbecause \n*/\n"]},"metadata":{},"sourceType":"module"}