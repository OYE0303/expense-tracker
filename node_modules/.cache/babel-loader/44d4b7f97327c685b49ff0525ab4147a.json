{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Chart/ChartOption/OptionTime/OptionTime.js\";\nimport { AiFillWarning } from \"react-icons/ai\";\nimport SubTitle from \"../../../../UI/SubTitle/SubTitle\";\nimport Warning from \"../../../../UI/Warning/Warning\";\nimport style from \"./OptionTime.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OptionTime(props) {\n  function startingDateChangeHandler(e) {\n    props.dispatchChartData({\n      type: \"STARTING_DATE\",\n      value: e.target.value\n    });\n  }\n\n  function endingDateChangeHandler(e) {\n    props.dispatchChartData({\n      type: \"ENDING_DATE\",\n      value: e.target.value\n    });\n  }\n\n  function timeDurationChangeHandler(e) {\n    props.dispatchChartData({\n      type: \"TIME_DURATION\",\n      value: e.target.value\n    });\n  }\n\n  let startingDate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style[\"time__container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"starting date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: style[\"time__input\"],\n      onChange: startingDateChangeHandler,\n      type: \"date\",\n      value: props.valueStarting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n\n  let timeContent; // Note that only show the warning icon when\n  // 1. user has already choose both starting date and ending date\n  // 2. user choose the wrong order of the date\n\n  const invalidIndex = props.timeValidIndex && !props.timeOrderValidIndex;\n  if (props.optionMainData === \"category\") timeContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [startingDate, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.timeValidIndex && !props.timeOrderValidIndex ? `${style[\"time__container\"]} ${style[\"time__container--ending\"]}` : `${style[\"time__container\"]}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ending date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style[\"time__input\"],\n        onChange: endingDateChangeHandler,\n        type: \"date\",\n        value: props.valueEnding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Warning, {\n        className: style.warning,\n        index: props.timeValidIndex && !props.timeOrderValidIndex,\n        children: \"ending date should be greater than starting date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);else timeContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"time__container\"],\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"time duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: timeDurationChangeHandler,\n        className: style[\"time__input\"],\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7\",\n          children: \"one week(7days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"14\",\n          children: \"two weeks(14days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"30\",\n          children: \"one month(30days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"90\",\n          children: \"three months(90days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6\",\n          children: \"six months(6months)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"12\",\n          children: \"one year(12months)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), startingDate]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.time,\n    children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n      className: props.classColor === \"time\" ? `${style[\"subTitle--blue\"]}` : `${style[\"subTitle--green\"]}`,\n      children: \"Select Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), timeContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_c = OptionTime;\nexport default OptionTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionTime\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Chart/ChartOption/OptionTime/OptionTime.js"],"names":["AiFillWarning","SubTitle","Warning","style","OptionTime","props","startingDateChangeHandler","e","dispatchChartData","type","value","target","endingDateChangeHandler","timeDurationChangeHandler","startingDate","valueStarting","timeContent","invalidIndex","timeValidIndex","timeOrderValidIndex","optionMainData","valueEnding","warning","time","classColor"],"mappings":"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","sourcesContent":["import { AiFillWarning } from \"react-icons/ai\";\nimport SubTitle from \"../../../../UI/SubTitle/SubTitle\";\nimport Warning from \"../../../../UI/Warning/Warning\";\nimport style from \"./OptionTime.module.css\";\n\nfunction OptionTime(props) {\n  function startingDateChangeHandler(e) {\n    props.dispatchChartData({ type: \"STARTING_DATE\", value: e.target.value });\n  }\n\n  function endingDateChangeHandler(e) {\n    props.dispatchChartData({ type: \"ENDING_DATE\", value: e.target.value });\n  }\n\n  function timeDurationChangeHandler(e) {\n    props.dispatchChartData({ type: \"TIME_DURATION\", value: e.target.value });\n  }\n\n  let startingDate = (\n    <div className={style[\"time__container\"]}>\n      <label>starting date</label>\n      <input\n        className={style[\"time__input\"]}\n        onChange={startingDateChangeHandler}\n        type=\"date\"\n        value={props.valueStarting}\n      />\n    </div>\n  );\n\n  let timeContent;\n\n  // Note that only show the warning icon when\n  // 1. user has already choose both starting date and ending date\n  // 2. user choose the wrong order of the date\n  const invalidIndex = props.timeValidIndex && !props.timeOrderValidIndex;\n\n  if (props.optionMainData === \"category\")\n    timeContent = (\n      <>\n        {startingDate}\n        <div\n          className={\n            props.timeValidIndex && !props.timeOrderValidIndex\n              ? `${style[\"time__container\"]} ${style[\"time__container--ending\"]}`\n              : `${style[\"time__container\"]}`\n          }\n        >\n          <label>ending date</label>\n          <input\n            className={style[\"time__input\"]}\n            onChange={endingDateChangeHandler}\n            type=\"date\"\n            value={props.valueEnding}\n          />\n          <Warning\n            className={style.warning}\n            index={props.timeValidIndex && !props.timeOrderValidIndex}\n          >\n            ending date should be greater than starting date\n          </Warning>\n        </div>\n      </>\n    );\n  else\n    timeContent = (\n      <>\n        <div className={style[\"time__container\"]}>\n          <label>time duration</label>\n          <select\n            onChange={timeDurationChangeHandler}\n            className={style[\"time__input\"]}\n          >\n            <option value=\"7\">one week(7days)</option>\n            <option value=\"14\">two weeks(14days)</option>\n            <option value=\"30\">one month(30days)</option>\n            <option value=\"90\">three months(90days)</option>\n            <option value=\"6\">six months(6months)</option>\n            <option value=\"12\">one year(12months)</option>\n          </select>\n        </div>\n        {startingDate}\n      </>\n    );\n\n  return (\n    <div className={style.time}>\n      <SubTitle\n        className={\n          props.classColor === \"time\"\n            ? `${style[\"subTitle--blue\"]}`\n            : `${style[\"subTitle--green\"]}`\n        }\n      >\n        Select Time\n      </SubTitle>\n      {timeContent}\n    </div>\n  );\n}\n\nexport default OptionTime;\n"]},"metadata":{},"sourceType":"module"}