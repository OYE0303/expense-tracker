{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Setting/SettingContent/SettingAccount/SettingAccount.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useReducer } from \"react\";\nimport Button from \"../../../../UI/Button/Button\";\nimport InputText from \"../../../../UI/InputText/InputText\";\nimport AccountInfoContext from \"../../../../../store/accountInfo/accountInfo--context\";\nimport Warning from \"../../../../UI/Warning/Warning\";\nimport createUserID from \"../../../../../Others/CreateUserID/createUserID\";\nimport { auth } from \"../../../../../firebase-config\";\nimport style from \"./SettingAccount.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\":\n      {\n        let validText = true;\n        if (action.value.length === 0) validText = false;\n        return { ...state,\n          name: action.value,\n          validText\n        };\n      }\n\n    case \"email\":\n      {\n        let validEmail = true;\n        if (action.value.length === 0 || !action.value.includes(\"@\")) validEmail = false;\n        return { ...state,\n          email: action.value,\n          validEmail\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction SettingAccount() {\n  _s();\n\n  const {\n    accountInfo,\n    setAccountInfo\n  } = useContext(AccountInfoContext);\n  const {\n    displayName,\n    email\n  } = auth.currentUser;\n  const [infoValidation, setInfoValidation] = useReducer(reducer, {\n    name: accountInfo.name,\n    email: accountInfo.email,\n    validText: true,\n    validEmail: true\n  });\n\n  function nameChangeHandler(e) {\n    setInfoValidation({\n      type: \"name\",\n      value: e.target.value\n    });\n  }\n\n  function emailChangeHandler(e) {\n    setInfoValidation({\n      type: \"email\",\n      value: e.target.value\n    });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    setAccountInfo({\n      name: infoValidation.name,\n      email: infoValidation.email\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SettingAccount, \"6Q7KOujahMvIng2m9Vit4XJFfA4=\");\n\n_c = SettingAccount;\nexport default SettingAccount;\n/*\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\": {\n      let validText = true;\n      if (action.value.length === 0) validText = false;\n\n      return { ...state, name: action.value, validText };\n    }\n\n    case \"email\": {\n      let validEmail = true;\n      if (action.value.length === 0 || !action.value.includes(\"@\"))\n        validEmail = false;\n      return { ...state, email: action.value, validEmail };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction SettingAccount() {\n  const { accountInfo, setAccountInfo } = useContext(AccountInfoContext);\n  const { displayName, email } = auth.currentUser;\n\n  const [infoValidation, setInfoValidation] = useReducer(reducer, {\n    name: accountInfo.name,\n    email: accountInfo.email,\n    validText: true,\n    validEmail: true,\n  });\n\n  function nameChangeHandler(e) {\n    setInfoValidation({ type: \"name\", value: e.target.value });\n  }\n\n  function emailChangeHandler(e) {\n    setInfoValidation({ type: \"email\", value: e.target.value });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    setAccountInfo({\n      name: infoValidation.name,\n      email: infoValidation.email,\n    });\n  }\n\n  return (\n    <form className={style.form} onSubmit={submitHandler}>\n      <div>\n        <InputText\n          id=\"name\"\n          label=\"name\"\n          name=\"name\"\n          type=\"text\"\n          value={infoValidation.name}\n          classInput={\n            infoValidation.validText\n              ? `${style.input}`\n              : `${style.input} input--invalid`\n          }\n          classLabel={`${style.label} capitalize`}\n          onChange={nameChangeHandler}\n        />\n        <Warning className={style.warnning} index={!infoValidation.validText}>\n          the length of name has to be at least greater than 1\n        </Warning>\n      </div>\n\n      <div>\n        <InputText\n          id=\"email\"\n          label=\"email\"\n          name=\"email\"\n          type=\"email\"\n          value={infoValidation.email}\n          classInput={\n            infoValidation.validEmail\n              ? `${style.input}`\n              : `${style.input} input--invalid`\n          }\n          classLabel={`${style.label} capitalize`}\n          onChange={emailChangeHandler}\n        />\n        <Warning className={style.warnning} index={!infoValidation.validEmail}>\n          invalid email format\n        </Warning>\n      </div>\n\n      <Button\n        type=\"submit\"\n        disabled={!(infoValidation.validText && infoValidation.validEmail)}\n        className={`${style.btn} uppercase transition--25 ${\n          infoValidation.validText && infoValidation.validEmail\n            ? `btn--valid`\n            : `btn--invalid`\n        }`}\n      >\n        change\n      </Button>\n    </form>\n  );\n}\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingAccount\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Setting/SettingContent/SettingAccount/SettingAccount.js"],"names":["useContext","useReducer","Button","InputText","AccountInfoContext","Warning","createUserID","auth","style","reducer","state","action","type","validText","value","length","name","validEmail","includes","email","SettingAccount","accountInfo","setAccountInfo","displayName","currentUser","infoValidation","setInfoValidation","nameChangeHandler","e","target","emailChangeHandler","submitHandler","preventDefault"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,kBAAP,MAA+B,uDAA/B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,SAASC,IAAT,QAAqB,gCAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACX,YAAIC,SAAS,GAAG,IAAhB;AACA,YAAIF,MAAM,CAACG,KAAP,CAAaC,MAAb,KAAwB,CAA5B,EAA+BF,SAAS,GAAG,KAAZ;AAE/B,eAAO,EAAE,GAAGH,KAAL;AAAYM,UAAAA,IAAI,EAAEL,MAAM,CAACG,KAAzB;AAAgCD,UAAAA;AAAhC,SAAP;AACD;;AAED,SAAK,OAAL;AAAc;AACZ,YAAII,UAAU,GAAG,IAAjB;AACA,YAAIN,MAAM,CAACG,KAAP,CAAaC,MAAb,KAAwB,CAAxB,IAA6B,CAACJ,MAAM,CAACG,KAAP,CAAaI,QAAb,CAAsB,GAAtB,CAAlC,EACED,UAAU,GAAG,KAAb;AACF,eAAO,EAAE,GAAGP,KAAL;AAAYS,UAAAA,KAAK,EAAER,MAAM,CAACG,KAA1B;AAAiCG,UAAAA;AAAjC,SAAP;AACD;;AAED;AACE,aAAOP,KAAP;AAhBJ;AAkBD;;AAED,SAASU,cAAT,GAA0B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCtB,UAAU,CAACI,kBAAD,CAAlD;AACA,QAAM;AAAEmB,IAAAA,WAAF;AAAeJ,IAAAA;AAAf,MAAyBZ,IAAI,CAACiB,WAApC;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCzB,UAAU,CAACQ,OAAD,EAAU;AAC9DO,IAAAA,IAAI,EAAEK,WAAW,CAACL,IAD4C;AAE9DG,IAAAA,KAAK,EAAEE,WAAW,CAACF,KAF2C;AAG9DN,IAAAA,SAAS,EAAE,IAHmD;AAI9DI,IAAAA,UAAU,EAAE;AAJkD,GAAV,CAAtD;;AAOA,WAASU,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BF,IAAAA,iBAAiB,CAAC;AAAEd,MAAAA,IAAI,EAAE,MAAR;AAAgBE,MAAAA,KAAK,EAAEc,CAAC,CAACC,MAAF,CAASf;AAAhC,KAAD,CAAjB;AACD;;AAED,WAASgB,kBAAT,CAA4BF,CAA5B,EAA+B;AAC7BF,IAAAA,iBAAiB,CAAC;AAAEd,MAAAA,IAAI,EAAE,OAAR;AAAiBE,MAAAA,KAAK,EAAEc,CAAC,CAACC,MAAF,CAASf;AAAjC,KAAD,CAAjB;AACD;;AAED,WAASiB,aAAT,CAAuBH,CAAvB,EAA0B;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAV,IAAAA,cAAc,CAAC;AACbN,MAAAA,IAAI,EAAES,cAAc,CAACT,IADR;AAEbG,MAAAA,KAAK,EAAEM,cAAc,CAACN;AAFT,KAAD,CAAd;AAID;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7BQC,c;;KAAAA,c;AA+BT,eAAeA,cAAfsourcesContent":["import { useContext, useReducer } from \"react\";\nimport Button from \"../../../../UI/Button/Button\";\nimport InputText from \"../../../../UI/InputText/InputText\";\nimport AccountInfoContext from \"../../../../../store/accountInfo/accountInfo--context\";\nimport Warning from \"../../../../UI/Warning/Warning\";\nimport createUserID from \"../../../../../Others/CreateUserID/createUserID\";\nimport { auth } from \"../../../../../firebase-config\";\nimport style from \"./SettingAccount.module.css\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\": {\n      let validText = true;\n      if (action.value.length === 0) validText = false;\n\n      return { ...state, name: action.value, validText };\n    }\n\n    case \"email\": {\n      let validEmail = true;\n      if (action.value.length === 0 || !action.value.includes(\"@\"))\n        validEmail = false;\n      return { ...state, email: action.value, validEmail };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction SettingAccount() {\n  const { accountInfo, setAccountInfo } = useContext(AccountInfoContext);\n  const { displayName, email } = auth.currentUser;\n\n  const [infoValidation, setInfoValidation] = useReducer(reducer, {\n    name: accountInfo.name,\n    email: accountInfo.email,\n    validText: true,\n    validEmail: true,\n  });\n\n  function nameChangeHandler(e) {\n    setInfoValidation({ type: \"name\", value: e.target.value });\n  }\n\n  function emailChangeHandler(e) {\n    setInfoValidation({ type: \"email\", value: e.target.value });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    setAccountInfo({\n      name: infoValidation.name,\n      email: infoValidation.email,\n    });\n  }\n\n  return <div></div>;\n}\n\nexport default SettingAccount;\n\n/*\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\": {\n      let validText = true;\n      if (action.value.length === 0) validText = false;\n\n      return { ...state, name: action.value, validText };\n    }\n\n    case \"email\": {\n      let validEmail = true;\n      if (action.value.length === 0 || !action.value.includes(\"@\"))\n        validEmail = false;\n      return { ...state, email: action.value, validEmail };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction SettingAccount() {\n  const { accountInfo, setAccountInfo } = useContext(AccountInfoContext);\n  const { displayName, email } = auth.currentUser;\n\n  const [infoValidation, setInfoValidation] = useReducer(reducer, {\n    name: accountInfo.name,\n    email: accountInfo.email,\n    validText: true,\n    validEmail: true,\n  });\n\n  function nameChangeHandler(e) {\n    setInfoValidation({ type: \"name\", value: e.target.value });\n  }\n\n  function emailChangeHandler(e) {\n    setInfoValidation({ type: \"email\", value: e.target.value });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    setAccountInfo({\n      name: infoValidation.name,\n      email: infoValidation.email,\n    });\n  }\n\n  return (\n    <form className={style.form} onSubmit={submitHandler}>\n      <div>\n        <InputText\n          id=\"name\"\n          label=\"name\"\n          name=\"name\"\n          type=\"text\"\n          value={infoValidation.name}\n          classInput={\n            infoValidation.validText\n              ? `${style.input}`\n              : `${style.input} input--invalid`\n          }\n          classLabel={`${style.label} capitalize`}\n          onChange={nameChangeHandler}\n        />\n        <Warning className={style.warnning} index={!infoValidation.validText}>\n          the length of name has to be at least greater than 1\n        </Warning>\n      </div>\n\n      <div>\n        <InputText\n          id=\"email\"\n          label=\"email\"\n          name=\"email\"\n          type=\"email\"\n          value={infoValidation.email}\n          classInput={\n            infoValidation.validEmail\n              ? `${style.input}`\n              : `${style.input} input--invalid`\n          }\n          classLabel={`${style.label} capitalize`}\n          onChange={emailChangeHandler}\n        />\n        <Warning className={style.warnning} index={!infoValidation.validEmail}>\n          invalid email format\n        </Warning>\n      </div>\n\n      <Button\n        type=\"submit\"\n        disabled={!(infoValidation.validText && infoValidation.validEmail)}\n        className={`${style.btn} uppercase transition--25 ${\n          infoValidation.validText && infoValidation.validEmail\n            ? `btn--valid`\n            : `btn--invalid`\n        }`}\n      >\n        change\n      </Button>\n    </form>\n  );\n}\n\n*/\n"]},"metadata":{},"sourceType":"module"}