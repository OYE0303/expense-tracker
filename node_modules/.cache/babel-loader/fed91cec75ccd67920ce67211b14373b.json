{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountOverview/AccountChart.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createDateFormat from \"../../../Others/createDateFormat\";\nimport createFilteredData from \"../../../Others/CreateChartData/createFilteredData\";\nimport style from \"./AccountChart.module.css\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartRadioArr = [\"1wk\", \"1mo\", \"3mo\", \"6mo\", \"1yr\", \"select date\"];\nconst TODAY = new Date();\nconst initialObj = new Date(new Date().setDate(new Date() - 7));\nlet weekAgo = new Date();\nweekAgo.setDate(weekAgo.getDate() - 7);\n\nfunction AccountChart(props) {\n  _s();\n\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const [chartData, setChartData] = useState(createChartDataArr(weekAgo, TODAY, expenseData));\n  const chartRef = useRef(null);\n  const [data, labels] = chartData;\n  const configAreaAccount = {\n    type: \"line\",\n    data: {\n      labels: labels,\n      datasets: [{\n        fill: {\n          target: \"origin\"\n        },\n        label: \"\",\n        data: data,\n        backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n        borderColor: [\"rgb(54, 162, 235)\"],\n        borderWidth: 1,\n        pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n      }]\n    },\n    options: {\n      elements: {\n        line: {\n          tension: 0.5\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, configAreaAccount);\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [chartData]);\n\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n    const chartData = createChartDataArr(today, TODAY, expenseData);\n    setChartData(chartData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style[\"chart__container\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: chartRadioChangeHandler,\n      className: style[\"radio__container\"],\n      children: chartRadioArr.map((element, index) => /*#__PURE__*/_jsxDEV(InputRadio, {\n        label: element,\n        id: element,\n        value: element,\n        name: \"chart__btn\",\n        classLabel: style.label,\n        classInput: style.input,\n        classCheck: style.check\n      }, element, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.chart,\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountChart, \"ScpULOkFhgwVhrxhZJ7j2fe3hr0=\");\n\n_c = AccountChart;\nexport default AccountChart;\n\nfunction createChartDataArr(startDate, endDate, expenseData) {\n  console.log(startDate, \"/\", endDate);\n  const labels = createLabelsAccount(startDate, endDate);\n  const newExpenseData = createFilteredData(labels, expenseData);\n  const newExpenseDataExpense = newExpenseData.filter(element => element.category === \"expense\");\n  const newExpenseDataIncome = newExpenseData.filter(element => element.category === \"income\");\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n  const finalDataArr = [];\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense);\n  });\n  return [finalDataArr, labels];\n}\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      var _expensData$indexData, _expensData$indexData2, _expensData$indexData3;\n\n      yearDate = (_expensData$indexData = expensData[indexData]) === null || _expensData$indexData === void 0 ? void 0 : _expensData$indexData.time.slice(0, 4);\n      monthData = (_expensData$indexData2 = expensData[indexData]) === null || _expensData$indexData2 === void 0 ? void 0 : _expensData$indexData2.time.slice(5, 7);\n      dayData = (_expensData$indexData3 = expensData[indexData]) === null || _expensData$indexData3 === void 0 ? void 0 : _expensData$indexData3.time.slice(8);\n\n      if (yearLabel === yearDate && monthLabel === monthData && dayLabel >= dayData) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / (1000 * 3600 * 24));\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;else {\n    eachDiffAmount = (diff - diff % 7) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n  let tmpDate;\n\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0) tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));else tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n  label.push(createDateFormat(tmpDate));\n  return label;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountChart\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountOverview/AccountChart.js"],"names":["useRef","useEffect","useState","useContext","InputRadio","ExpenseDataContext","createDateFormat","createFilteredData","style","Chart","chartRadioArr","TODAY","Date","initialObj","setDate","weekAgo","getDate","AccountChart","props","expenseData","chartData","setChartData","createChartDataArr","chartRef","data","labels","configAreaAccount","type","datasets","fill","target","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","elements","line","tension","scales","y","beginAtZero","chart","current","cleanUp","destroy","chartRadioChangeHandler","e","today","value","setMonth","getMonth","setFullYear","getFullYear","map","element","index","input","check","startDate","endDate","console","log","createLabelsAccount","newExpenseData","newExpenseDataExpense","filter","category","newExpenseDataIncome","dataArrExpense","createDataArrAccount","dataArrIncome","finalDataArr","forEach","expense","push","expensData","indexCurrentDate","currentAmount","indexData","yearLabel","monthLabel","dayLabel","yearDate","monthData","dayData","i","length","slice","time","Number","price","diff","Math","round","getTime","eachDiffAmount","lastDiffAmount","tmpDate"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useContext } from \"react\";\nimport InputRadio from \"../../../UI/InputRadio/InputRadio\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport createDateFormat from \"../../../Others/createDateFormat\";\nimport createFilteredData from \"../../../Others/CreateChartData/createFilteredData\";\nimport style from \"./AccountChart.module.css\";\nimport Chart from \"chart.js/auto\";\n\nconst chartRadioArr = [\"1wk\", \"1mo\", \"3mo\", \"6mo\", \"1yr\", \"select date\"];\n\nconst TODAY = new Date();\nconst initialObj = new Date(new Date().setDate(new Date() - 7));\nlet weekAgo = new Date();\nweekAgo.setDate(weekAgo.getDate() - 7);\n\nfunction AccountChart(props) {\n  const { expenseData } = useContext(ExpenseDataContext);\n  const [chartData, setChartData] = useState(\n    createChartDataArr(weekAgo, TODAY, expenseData)\n  );\n  const chartRef = useRef(null);\n\n  const [data, labels] = chartData;\n\n  const configAreaAccount = {\n    type: \"line\",\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          fill: {\n            target: \"origin\",\n          },\n          label: \"\",\n          data: data,\n          backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n          borderColor: [\"rgb(54, 162, 235)\"],\n          borderWidth: 1,\n          pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n        },\n      ],\n    },\n    options: {\n      elements: {\n        line: {\n          tension: 0.5,\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  };\n\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, configAreaAccount);\n\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [chartData]);\n\n  function chartRadioChangeHandler(e) {\n    const today = new Date();\n    const value = e.target.value;\n\n    if (value === \"1wk\") today.setDate(today.getDate() - 7);\n    if (value === \"1mo\") today.setMonth(today.getMonth() - 1);\n    if (value === \"3mo\") today.setMonth(today.getMonth() - 3);\n    if (value === \"6mo\") today.setMonth(today.getMonth() - 6);\n    if (value === \"1yr\") today.setFullYear(today.getFullYear() - 1);\n\n    const chartData = createChartDataArr(today, TODAY, expenseData);\n    setChartData(chartData);\n  }\n\n  return (\n    <div className={style[\"chart__container\"]}>\n      <div\n        onChange={chartRadioChangeHandler}\n        className={style[\"radio__container\"]}\n      >\n        {chartRadioArr.map((element, index) => (\n          <InputRadio\n            key={element}\n            label={element}\n            id={element}\n            value={element}\n            name=\"chart__btn\"\n            classLabel={style.label}\n            classInput={style.input}\n            classCheck={style.check}\n          />\n        ))}\n      </div>\n      <div className={style.chart}>\n        <canvas ref={chartRef}></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountChart;\n\nfunction createChartDataArr(startDate, endDate, expenseData) {\n  console.log(startDate, \"/\", endDate);\n  const labels = createLabelsAccount(startDate, endDate);\n  const newExpenseData = createFilteredData(labels, expenseData);\n\n  const newExpenseDataExpense = newExpenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n\n  const newExpenseDataIncome = newExpenseData.filter(\n    (element) => element.category === \"income\"\n  );\n\n  const dataArrExpense = createDataArrAccount(labels, newExpenseDataExpense);\n  const dataArrIncome = createDataArrAccount(labels, newExpenseDataIncome);\n\n  const finalDataArr = [];\n\n  dataArrExpense.forEach((expense, index) => {\n    finalDataArr.push(dataArrIncome[index] - expense);\n  });\n\n  return [finalDataArr, labels];\n}\n\nfunction createDataArrAccount(labels, expensData) {\n  const data = [];\n  let indexCurrentDate = true;\n  let currentAmount = 0;\n  let indexData = 0;\n  let yearLabel, monthLabel, dayLabel, yearDate, monthData, dayData;\n\n  for (let i = 0; i < labels.length; i++) {\n    yearLabel = labels[i].slice(0, 4);\n    monthLabel = labels[i].slice(5, 7);\n    dayLabel = labels[i].slice(8);\n\n    while (indexCurrentDate) {\n      yearDate = expensData[indexData]?.time.slice(0, 4);\n      monthData = expensData[indexData]?.time.slice(5, 7);\n      dayData = expensData[indexData]?.time.slice(8);\n\n      if (\n        yearLabel === yearDate &&\n        monthLabel === monthData &&\n        dayLabel >= dayData\n      ) {\n        currentAmount += Number(expensData[indexData].price);\n        indexData++;\n      } else indexCurrentDate = false;\n    }\n\n    data.push(currentAmount);\n    indexCurrentDate = true;\n  }\n\n  return data;\n}\n\nfunction createLabelsAccount(startDate, endDate) {\n  const label = [];\n  const diff = Math.round(\n    (new Date(endDate).getTime() - new Date(startDate).getTime()) /\n      (1000 * 3600 * 24)\n  );\n\n  let eachDiffAmount;\n  let lastDiffAmount = 0;\n  if (diff % 7 === 0) eachDiffAmount = diff / 7;\n  else {\n    eachDiffAmount = (diff - (diff % 7)) / 7;\n    lastDiffAmount = diff - eachDiffAmount * 6;\n  }\n\n  let tmpDate;\n  for (let i = 0; i < 6; i++) {\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n    label.push(createDateFormat(tmpDate));\n  }\n\n  if (lastDiffAmount === 0)\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + eachDiffAmount));\n  else\n    tmpDate = new Date(startDate.setDate(startDate.getDate() + lastDiffAmount));\n\n  label.push(createDateFormat(tmpDate));\n\n  return label;\n}\n"]},"metadata":{},"sourceType":"module"}