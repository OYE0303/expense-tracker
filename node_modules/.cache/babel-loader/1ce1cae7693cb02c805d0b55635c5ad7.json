{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Chart/ChartOption/ChartOption.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\nimport style from \"./ChartOption.module.css\";\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport OptionCheckboxExpense from \"./OptionCheckbox/OptionCheckboxExpense\";\nimport OptionCheckboxIncome from \"./OptionCheckbox/OptionCheckBoxIncome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialObj = {\n  startingDate: \"\",\n  endingDate: \"\",\n  mainCategory: \"\",\n  subCategory: \"\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"STARTING_DATE\":\n      {\n        return { ...state,\n          startingDate: action.value\n        };\n      }\n\n    case \"ENDING_DATE\":\n      {\n        return { ...state,\n          endingDate: action.value\n        };\n      }\n\n    case \"MAIN_CATEGORY\":\n      {\n        let subCategoryArr = [];\n        if (action.value === \"income\") subCategoryArr = [\"salary\", \"stock\", \"others\"];\n        if (action.value === \"expense\") subCategoryArr = [\"food\", \"transportation\", \"clothing\", \"entertainment\", \"housing\", \"others\"];\n        return { ...state,\n          mainCategory: action.value,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"SUB_CATEGORY\":\n      {\n        let newSubCategoryState; // add\n\n        if (action.check) {\n          // first check if the items has been in the array(avoid duplicate)\n          if (!state.subCategory.includes(action.value)) newSubCategoryState = [...state.subCategory, action.value];\n        } // remove\n        else {\n          newSubCategoryState = state.subCategory.filter(element => element !== action.value);\n        }\n\n        return { ...state\n        };\n      }\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction ChartOption(props) {\n  _s();\n\n  const [optionMainData, setOptionMainData] = useState();\n  const [optionSubData, setOptionSubData] = useState();\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n  let checkboxContent = \"\";\n\n  if (optionMainData === \"time\") {\n    if (optionSubData === \"income\") checkboxContent = /*#__PURE__*/_jsxDEV(OptionCheckboxIncome, {\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n    if (optionSubData === \"expense\") checkboxContent = /*#__PURE__*/_jsxDEV(OptionCheckboxExpense, {\n      dispatchChartData: dispatchChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: style.chartOption,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          className: style[\"chartOption__title\"],\n          children: \"Analyize By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OptionRadioMain, {\n          setOptionMainData: setOptionMainData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), optionMainData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(OptionTime, {\n            classColor: optionMainData,\n            dispatchChartData: dispatchChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OptionRadioSub, {\n            classColor: optionMainData,\n            setOptionSubData: setOptionSubData,\n            dispatchChartData: dispatchChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), checkboxContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(optionMainData && optionSubData),\n        className: !(optionMainData && optionSubData) ? `${style.btn}` : `${style.btn} ${style[\"btn--active\"]}`,\n        children: \"Show Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartOption, \"pjaYv+T4le0ug4cvO0A+hAoX44s=\");\n\n_c = ChartOption;\nexport default ChartOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartOption\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Chart/ChartOption/ChartOption.js"],"names":["useState","useReducer","style","Title","Button","Card","OptionRadioMain","OptionTime","OptionRadioSub","OptionCheckboxExpense","OptionCheckboxIncome","initialObj","startingDate","endingDate","mainCategory","subCategory","reducer","state","action","type","value","subCategoryArr","newSubCategoryState","check","includes","filter","element","ChartOption","props","optionMainData","setOptionMainData","optionSubData","setOptionSubData","chartData","dispatchChartData","checkboxContent","chartOption","btn"],"mappings":"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","sourcesContent":["import { useState, useReducer } from \"react\";\n\nimport style from \"./ChartOption.module.css\";\n\nimport Title from \"../../../UI/Title/Title\";\nimport Button from \"../../../UI/Button\";\nimport Card from \"../../../UI/Card/Card\";\nimport OptionRadioMain from \"./OptionRadioMain/OptionRadioMain\";\nimport OptionTime from \"./OptionTime/OptionTime\";\nimport OptionRadioSub from \"./OptionRadioSub/OptionRadioSub\";\nimport OptionCheckboxExpense from \"./OptionCheckbox/OptionCheckboxExpense\";\nimport OptionCheckboxIncome from \"./OptionCheckbox/OptionCheckBoxIncome\";\n\nconst initialObj = {\n  startingDate: \"\",\n  endingDate: \"\",\n  mainCategory: \"\",\n  subCategory: \"\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"STARTING_DATE\": {\n      return { ...state, startingDate: action.value };\n    }\n\n    case \"ENDING_DATE\": {\n      return { ...state, endingDate: action.value };\n    }\n\n    case \"MAIN_CATEGORY\": {\n      let subCategoryArr = [];\n      if (action.value === \"income\")\n        subCategoryArr = [\"salary\", \"stock\", \"others\"];\n      if (action.value === \"expense\")\n        subCategoryArr = [\n          \"food\",\n          \"transportation\",\n          \"clothing\",\n          \"entertainment\",\n          \"housing\",\n          \"others\",\n        ];\n\n      return {\n        ...state,\n        mainCategory: action.value,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"SUB_CATEGORY\":\n      {\n        let newSubCategoryState;\n        // add\n        if (action.check) {\n          // first check if the items has been in the array(avoid duplicate)\n          if (!state.subCategory.includes(action.value))\n            newSubCategoryState = [...state.subCategory, action.value];\n        }\n\n        // remove\n        else {\n          newSubCategoryState = state.subCategory.filter(\n            (element) => element !== action.value\n          );\n        }\n\n        return {\n          ...state,\n        };\n      }\n\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction ChartOption(props) {\n  const [optionMainData, setOptionMainData] = useState();\n  const [optionSubData, setOptionSubData] = useState();\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n\n  let checkboxContent = \"\";\n\n  if (optionMainData === \"time\") {\n    if (optionSubData === \"income\")\n      checkboxContent = (\n        <OptionCheckboxIncome dispatchChartData={dispatchChartData} />\n      );\n    if (optionSubData === \"expense\")\n      checkboxContent = (\n        <OptionCheckboxExpense dispatchChartData={dispatchChartData} />\n      );\n  }\n\n  return (\n    <Card>\n      <form className={style.chartOption}>\n        <div>\n          <Title className={style[\"chartOption__title\"]}>Analyize By</Title>\n\n          <OptionRadioMain setOptionMainData={setOptionMainData} />\n\n          {optionMainData && (\n            <div>\n              <OptionTime\n                classColor={optionMainData}\n                dispatchChartData={dispatchChartData}\n              />\n              <OptionRadioSub\n                classColor={optionMainData}\n                setOptionSubData={setOptionSubData}\n                dispatchChartData={dispatchChartData}\n              />\n              {checkboxContent}\n            </div>\n          )}\n        </div>\n\n        <Button\n          disabled={!(optionMainData && optionSubData)}\n          className={\n            !(optionMainData && optionSubData)\n              ? `${style.btn}`\n              : `${style.btn} ${style[\"btn--active\"]}`\n          }\n        >\n          Show Chart\n        </Button>\n      </form>\n    </Card>\n  );\n}\n\nexport default ChartOption;\n"]},"metadata":{},"sourceType":"module"}