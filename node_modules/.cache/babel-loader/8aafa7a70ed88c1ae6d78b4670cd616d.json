{"ast":null,"code":"import compareTime from \"../compareTime\";\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n  let curAccExpense = 0;\n  let curAccIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n  let curLabelTime = new Date(labels[0]);\n  const sortedData = expenseData.sort((a, b) => Number(new Date(a.time) - Number(new Date(b.time))));\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n    const data = sortedData[expenseDataIndex];\n\n    if (!compareTime(data, curLabelTime)) {\n      curLabelTime = new Date(labels[++labelIndex]);\n      finalDataArr.push(curAccIncome - curAccExpense);\n    } else {\n      if (data.category === \"expense\") curAccExpense += Number(data.price);else curAccIncome += Number(data.price);\n      expenseDataIndex++;\n    }\n  }\n\n  console.log(finalDataArr);\n\n  if (labelIndex < labels.length) {\n    const remainingLabel = labels.length - labelIndex;\n    console.log(remainingLabel);\n\n    for (let i = 0; i < remainingLabel; i++) {\n      finalDataArr.push(curAccIncome - curAccExpense);\n    }\n  }\n\n  console.log(labels);\n  console.log(finalDataArr);\n  return finalDataArr;\n}\n\nexport default createChartDataArr;\nconst ggg = [{\n  category: \"income\",\n  mainCate: \"salary\",\n  subCate: \"bonus\",\n  time: \"2022-01-10\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"10\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-11\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"11\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-13\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"13\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-15\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"15\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-18\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"18\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-20\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"20\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-21\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"21\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-23\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"23\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-24\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"24\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-01-31\",\n  year: \"2022\",\n  month: \"01\",\n  day: \"24\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-02-01\",\n  year: \"2022\",\n  month: \"02\",\n  day: \"02\",\n  description: \"\",\n  price: \"300\"\n}, {\n  category: \"expense\",\n  mainCate: \"food\",\n  subCate: \"shoes\",\n  time: \"2022-02-02\",\n  year: \"2022\",\n  month: \"02\",\n  day: \"02\",\n  description: \"\",\n  price: \"300\"\n}];\ncreateChartDataArr([\"2022-01-30\", \"2022-01-31\", \"2022-02-01\", \"2022-02-02\", \"2022-02-03\", \"2022-02-04\", \"2022-02-05\"], ggg);\n/*\nThis is an old way of implement (using new Date())\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n\n  // small difference\n  let curLabelTime = Number(new Date(labels[0]));\n\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    // main difference\n    if (Number(new Date(data.time)) > curLabelTime) {\n      // small difference\n      curLabelTime = Number(new Date(labels[++labelIndex]));\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\")\n        curAccAmountExpense += Number(data.price);\n      else curAccAmountIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length)\n    finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n\n  return finalDataArr;\n}\n*/\n// function createChartDataArr(labels, expenseData) {\n//   const finalDataArr = [];\n//   labels.forEach((label) => {\n//     const curAccAmount =\n//       createPreAccAmount(\"income\", expenseData, label) -\n//       createPreAccAmount(\"expense\", expenseData, label);\n//     finalDataArr.push(curAccAmount);\n//   });\n//   return finalDataArr;\n// }","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/CreateAccountData/CreateChartDataArr.js"],"names":["compareTime","createChartDataArr","labels","expenseData","finalDataArr","curAccExpense","curAccIncome","expenseDataIndex","labelIndex","curLabelTime","Date","sortedData","sort","a","b","Number","time","length","data","push","category","price","console","log","remainingLabel","i","ggg","mainCate","subCate","year","month","day","description"],"mappings":"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","sourcesContent":["import compareTime from \"../compareTime\";\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n  let curAccExpense = 0;\n  let curAccIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n  let curLabelTime = new Date(labels[0]);\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    if (!compareTime(data, curLabelTime)) {\n      curLabelTime = new Date(labels[++labelIndex]);\n      finalDataArr.push(curAccIncome - curAccExpense);\n    } else {\n      if (data.category === \"expense\") curAccExpense += Number(data.price);\n      else curAccIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  console.log(finalDataArr);\n\n  if (labelIndex < labels.length) {\n    const remainingLabel = labels.length - labelIndex;\n\n    console.log(remainingLabel);\n\n    for (let i = 0; i < remainingLabel; i++) {\n      finalDataArr.push(curAccIncome - curAccExpense);\n    }\n  }\n\n  console.log(labels);\n  console.log(finalDataArr);\n\n  return finalDataArr;\n}\n\nexport default createChartDataArr;\n\nconst ggg = [\n  {\n    category: \"income\",\n    mainCate: \"salary\",\n    subCate: \"bonus\",\n    time: \"2022-01-10\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"10\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-11\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"11\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-13\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"13\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-15\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"15\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-18\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"18\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-20\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"20\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-21\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"21\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-23\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"23\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-24\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"24\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-01-31\",\n    year: \"2022\",\n    month: \"01\",\n    day: \"24\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-02-01\",\n    year: \"2022\",\n    month: \"02\",\n    day: \"02\",\n    description: \"\",\n    price: \"300\",\n  },\n  {\n    category: \"expense\",\n    mainCate: \"food\",\n    subCate: \"shoes\",\n    time: \"2022-02-02\",\n    year: \"2022\",\n    month: \"02\",\n    day: \"02\",\n    description: \"\",\n    price: \"300\",\n  },\n];\n\ncreateChartDataArr(\n  [\n    \"2022-01-30\",\n    \"2022-01-31\",\n    \"2022-02-01\",\n    \"2022-02-02\",\n    \"2022-02-03\",\n    \"2022-02-04\",\n    \"2022-02-05\",\n  ],\n  ggg\n);\n/*\nThis is an old way of implement (using new Date())\n\nfunction createChartDataArr(labels, expenseData) {\n  const finalDataArr = [];\n\n  let curAccAmountExpense = 0;\n  let curAccAmountIncome = 0;\n  let expenseDataIndex = 0;\n  let labelIndex = 0;\n\n  // small difference\n  let curLabelTime = Number(new Date(labels[0]));\n\n  const sortedData = expenseData.sort((a, b) =>\n    Number(new Date(a.time) - Number(new Date(b.time)))\n  );\n\n  while (expenseDataIndex < sortedData.length) {\n    if (labelIndex >= labels.length) break;\n\n    const data = sortedData[expenseDataIndex];\n\n    // main difference\n    if (Number(new Date(data.time)) > curLabelTime) {\n      // small difference\n      curLabelTime = Number(new Date(labels[++labelIndex]));\n      finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n    } else {\n      if (data.category === \"expense\")\n        curAccAmountExpense += Number(data.price);\n      else curAccAmountIncome += Number(data.price);\n\n      expenseDataIndex++;\n    }\n  }\n\n  if (labelIndex < labels.length)\n    finalDataArr.push(curAccAmountIncome - curAccAmountExpense);\n\n  return finalDataArr;\n}\n*/\n\n// function createChartDataArr(labels, expenseData) {\n//   const finalDataArr = [];\n\n//   labels.forEach((label) => {\n//     const curAccAmount =\n//       createPreAccAmount(\"income\", expenseData, label) -\n//       createPreAccAmount(\"expense\", expenseData, label);\n\n//     finalDataArr.push(curAccAmount);\n//   });\n\n//   return finalDataArr;\n// }\n"]},"metadata":{},"sourceType":"module"}