{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountSubSection/AccountSmallChart.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport Card from \"../../../UI/Card/Card\";\nimport style from \"./AccountSmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [0, 0, 0];\nconst labels = [\"\", \"\", \"\"];\nconst configBar = {\n  type: \"bar\",\n  data: {\n    labels,\n    datasets: [{\n      label: labels,\n      data: data,\n      backgroundColor: [\"rgba(54, 162, 235, 0.2)\", \"rgb(255, 99, 132,0.2)\", \"rgb(255, 205, 86,0.2)\"],\n      borderColor: [\"rgb(54, 162, 235)\", \"rgb(255, 99, 132)\", \"rgb(255, 205, 86)\"],\n      borderWidth: 1,\n      pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n    }]\n  },\n  options: {\n    indexAxis: \"y\"\n  }\n};\n\nfunction AccountSmallChart(props) {\n  _s();\n\n  const {\n    expenseData,\n    categoryExpense\n  } = useContext(ExpenseDataContext);\n  const [smallChart, setSmallChart] = useState(\"category\");\n  const chartRef = useRef(null);\n  const newFilteredExpenseData = expenseData.filter(element => element.category === \"expense\");\n  useEffect(() => {\n    for (const key of Object.keys(categoryExpense)) {\n      let amount;\n      if (smallChart === \"category\") amount = createDiffCategoryTotalAmount(key, newFilteredExpenseData);\n\n      if (amount > data[0]) {\n        data[0] = amount;\n        labels[0] = `1. ${key}`;\n        continue;\n      }\n\n      if (amount <= data[0] && amount > data[1]) {\n        data[1] = amount;\n        labels[1] = `2. ${key}`;\n        continue;\n      }\n\n      if (amount <= data[1] && amount > data[2]) {\n        data[2] = amount;\n        labels[2] = `3. ${key}`;\n        continue;\n      }\n    }\n\n    const chart = new Chart(chartRef.current, configBar);\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: style[\"chart__section\"],\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      className: style.title,\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: style.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"which category expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"which day expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"which month expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"chart__container\"],\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        height: \"200\",\n        width: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountSmallChart, \"WSrrR6YY0f2tf0Qpk/hEkS8+AHY=\");\n\n_c = AccountSmallChart;\nexport default AccountSmallChart;\n\nfunction createConfig(type, label, data, categoryExpense, date) {\n  if (type === \"expense\") {\n    createCategoryData(label, data, categoryExpense);\n  }\n\n  return data;\n}\n\nfunction createCategoryData(label, data, categoryExpense) {// for (const key of Object.keys(categoryExpense)) {\n  //   let amount;\n  //   if (smallChart === \"category\")\n  //     amount = createDiffCategoryTotalAmount(key, newFilteredExpenseData);\n  //   if (amount > data[0]) {\n  //     data[0] = amount;\n  //     // labels[0] = `1. ${key}`;\n  //     continue;\n  //   }\n  //   if (amount <= data[0] && amount > data[1]) {\n  //     data[1] = amount;\n  //     // labels[1] = `2. ${key}`;\n  //     continue;\n  //   }\n  //   if (amount <= data[1] && amount > data[2]) {\n  //     data[2] = amount;\n  //     // labels[2] = `3. ${key}`;\n  //     continue;\n  //   }\n  // }\n  // return data;\n}\n\nfunction createDiffCategoryTotalAmount(category, expenseData) {\n  const newFilteredData = expenseData.filter(element => element.mainCate === category);\n  const totalAmount = newFilteredData.reduce((acc, cur) => acc + Number(cur.price), 0);\n  return totalAmount;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSmallChart\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountSubSection/AccountSmallChart.js"],"names":["useRef","useEffect","useState","useContext","Title","ExpenseDataContext","Card","style","Chart","data","labels","configBar","type","datasets","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","indexAxis","AccountSmallChart","props","expenseData","categoryExpense","smallChart","setSmallChart","chartRef","newFilteredExpenseData","filter","element","category","key","Object","keys","amount","createDiffCategoryTotalAmount","chart","current","cleanUp","destroy","title","select","createConfig","date","createCategoryData","newFilteredData","mainCate","totalAmount","reduce","acc","cur","Number","price"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport Card from \"../../../UI/Card/Card\";\nimport style from \"./AccountSmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\n\nconst data = [0, 0, 0];\nconst labels = [\"\", \"\", \"\"];\n\nconst configBar = {\n  type: \"bar\",\n  data: {\n    labels,\n    datasets: [\n      {\n        label: labels,\n        data: data,\n        backgroundColor: [\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgb(255, 99, 132,0.2)\",\n          \"rgb(255, 205, 86,0.2)\",\n        ],\n        borderColor: [\n          \"rgb(54, 162, 235)\",\n          \"rgb(255, 99, 132)\",\n          \"rgb(255, 205, 86)\",\n        ],\n        borderWidth: 1,\n        pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n      },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n  },\n};\n\nfunction AccountSmallChart(props) {\n  const { expenseData, categoryExpense } = useContext(ExpenseDataContext);\n  const [smallChart, setSmallChart] = useState(\"category\");\n  const chartRef = useRef(null);\n\n  const newFilteredExpenseData = expenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n\n  useEffect(() => {\n    for (const key of Object.keys(categoryExpense)) {\n      let amount;\n      if (smallChart === \"category\")\n        amount = createDiffCategoryTotalAmount(key, newFilteredExpenseData);\n\n      if (amount > data[0]) {\n        data[0] = amount;\n        labels[0] = `1. ${key}`;\n        continue;\n      }\n      if (amount <= data[0] && amount > data[1]) {\n        data[1] = amount;\n        labels[1] = `2. ${key}`;\n        continue;\n      }\n      if (amount <= data[1] && amount > data[2]) {\n        data[2] = amount;\n        labels[2] = `3. ${key}`;\n        continue;\n      }\n    }\n\n    const chart = new Chart(chartRef.current, configBar);\n\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, []);\n\n  return (\n    <Card className={style[\"chart__section\"]}>\n      <Title className={style.title}>Chart</Title>\n      <select className={style.select}>\n        <option value=\"0\">which category expense the most</option>\n        <option value=\"1\">which day expense the most</option>\n        <option value=\"2\">which month expense the most</option>\n      </select>\n      <div className={style[\"chart__container\"]}>\n        <canvas ref={chartRef} height=\"200\" width=\"auto\"></canvas>\n      </div>\n    </Card>\n  );\n}\n\nexport default AccountSmallChart;\n\nfunction createConfig(type, label, data, categoryExpense, date) {\n  if (type === \"expense\") {\n    createCategoryData(label, data, categoryExpense);\n  }\n\n  return data;\n}\n\nfunction createCategoryData(label, data, categoryExpense) {\n  // for (const key of Object.keys(categoryExpense)) {\n  //   let amount;\n  //   if (smallChart === \"category\")\n  //     amount = createDiffCategoryTotalAmount(key, newFilteredExpenseData);\n  //   if (amount > data[0]) {\n  //     data[0] = amount;\n  //     // labels[0] = `1. ${key}`;\n  //     continue;\n  //   }\n  //   if (amount <= data[0] && amount > data[1]) {\n  //     data[1] = amount;\n  //     // labels[1] = `2. ${key}`;\n  //     continue;\n  //   }\n  //   if (amount <= data[1] && amount > data[2]) {\n  //     data[2] = amount;\n  //     // labels[2] = `3. ${key}`;\n  //     continue;\n  //   }\n  // }\n  // return data;\n}\n\nfunction createDiffCategoryTotalAmount(category, expenseData) {\n  const newFilteredData = expenseData.filter(\n    (element) => element.mainCate === category\n  );\n\n  const totalAmount = newFilteredData.reduce(\n    (acc, cur) => acc + Number(cur.price),\n    0\n  );\n\n  return totalAmount;\n}\n"]},"metadata":{},"sourceType":"module"}