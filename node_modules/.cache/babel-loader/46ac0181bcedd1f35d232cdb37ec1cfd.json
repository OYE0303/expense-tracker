{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/Monthly/Monthly.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport style from \"./Monthly.module.css\";\nimport Button from \"../../../UI/Button\";\nimport createCalendar from \"./createCalendar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateOptObj = {\n  month: \"long\"\n};\nconst date = new Date();\nconst calendar = createCalendar(date);\n\nfunction CalendarMonthly(props) {\n  _s();\n\n  const [calendarState, setcalendarState] = useState(calendar);\n  const [month, setMonth] = useState(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n  const [year, SetYear] = useState(date.getFullYear());\n  const [animation, setAnimation] = useState(false);\n  useEffect(() => {\n    if (index === 0) {\n      index++;\n      return;\n    }\n\n    setAnimation(true);\n    const time = setTimeout(() => {\n      setAnimation(false);\n    }, 300);\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [month, year]);\n\n  function incrementMonth() {\n    date.setMonth(date.getMonth() + 1);\n    const calendar = createCalendar(date);\n    setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    setcalendarState(calendar);\n    SetYear(date.getFullYear());\n  }\n\n  function decreaseMonth() {\n    date.setMonth(date.getMonth() - 1);\n    const calendar = createCalendar(date);\n    setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    setcalendarState(calendar);\n    SetYear(date.getFullYear());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.monthly,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"monthly__container\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__month\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: style.btn,\n          onClick: decreaseMonth,\n          type: \"button\",\n          children: `${\"<\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style[\"monthly__title\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: style.btn,\n          onClick: incrementMonth,\n          type: \"button\",\n          children: `${\">\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__week\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__days\"],\n        children: calendarState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarMonthly, \"iK20pCvF3hEG7+X2y0IvNrYLc5M=\");\n\n_c = CalendarMonthly;\nexport default CalendarMonthly; // const test = new Date();\n// test.setFullYear(date.getFullYear() - 1);\n// test.setMonth(11);\n// // test.setMonth(0);\n// console.log(test);\n// const initialObj = {\n//   calendar: createCalendar(date),\n//   month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n//   year: date.getFullYear(),\n// };\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case \"INCREMENT\": {\n//       //   if (state.month === \"December\") {\n//       //     date.setFullYear(date.getFullYear() + 1);\n//       //     date.setMonth(0);\n//       //   } else {\n//       date.setMonth(date.getMonth() + 1);\n//       //   }\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       //   console.log(month);\n//       const calendar = [];\n//       const year = date.getFullYear();\n//       //   console.log(month, year);\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n//     case \"DECREMENT\": {\n//       if (state.month === \"January\") {\n//         date.setFullYear(date.getFullYear() - 1);\n//         date.setMonth(11);\n//       } else date.setMonth(date.getMonth() - 1);\n//       const calendar = createCalendar(date);\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       const year = date.getFullYear();\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarMonthly\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/Monthly/Monthly.js"],"names":["useState","useEffect","style","Button","createCalendar","dateOptObj","month","date","Date","calendar","CalendarMonthly","props","calendarState","setcalendarState","setMonth","Intl","DateTimeFormat","format","year","SetYear","getFullYear","animation","setAnimation","index","time","setTimeout","cleanUp","clearTimeout","incrementMonth","getMonth","decreaseMonth","monthly","btn"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport style from \"./Monthly.module.css\";\nimport Button from \"../../../UI/Button\";\nimport createCalendar from \"./createCalendar\";\n\nconst dateOptObj = { month: \"long\" };\n\nconst date = new Date();\n\nconst calendar = createCalendar(date);\n\nfunction CalendarMonthly(props) {\n  const [calendarState, setcalendarState] = useState(calendar);\n  const [month, setMonth] = useState(\n    new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date)\n  );\n  const [year, SetYear] = useState(date.getFullYear());\n  const [animation, setAnimation] = useState(false);\n\n  useEffect(() => {\n    if (index === 0) {\n      index++;\n      return;\n    }\n\n    setAnimation(true);\n\n    const time = setTimeout(() => {\n      setAnimation(false);\n    }, 300);\n\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [month, year]);\n\n  function incrementMonth() {\n    date.setMonth(date.getMonth() + 1);\n    const calendar = createCalendar(date);\n\n    setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    setcalendarState(calendar);\n    SetYear(date.getFullYear());\n  }\n\n  function decreaseMonth() {\n    date.setMonth(date.getMonth() - 1);\n    const calendar = createCalendar(date);\n\n    setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    setcalendarState(calendar);\n    SetYear(date.getFullYear());\n  }\n\n  return (\n    <div className={style.monthly}>\n      <div className={style[\"monthly__container\"]}>\n        <div className={style[\"monthly__month\"]}>\n          <Button\n            className={style.btn}\n            onClick={decreaseMonth}\n            type=\"button\"\n          >{`${\"<\"}`}</Button>\n          <div className={style[\"monthly__title\"]}>\n            <h6>{month}</h6>\n            <h6>{year}</h6>\n          </div>\n          <Button\n            className={style.btn}\n            onClick={incrementMonth}\n            type=\"button\"\n          >{`${\">\"}`}</Button>\n        </div>\n        <div className={style[\"monthly__week\"]}>\n          <div>Sun</div>\n          <div>Mon</div>\n          <div>Tue</div>\n          <div>Wed</div>\n          <div>Thu</div>\n          <div>Fri</div>\n          <div>Sat</div>\n        </div>\n        <div className={style[\"monthly__days\"]}>{calendarState}</div>\n      </div>\n    </div>\n  );\n}\nexport default CalendarMonthly;\n\n// const test = new Date();\n// test.setFullYear(date.getFullYear() - 1);\n// test.setMonth(11);\n// // test.setMonth(0);\n\n// console.log(test);\n\n// const initialObj = {\n//   calendar: createCalendar(date),\n//   month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n//   year: date.getFullYear(),\n// };\n\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case \"INCREMENT\": {\n//       //   if (state.month === \"December\") {\n//       //     date.setFullYear(date.getFullYear() + 1);\n//       //     date.setMonth(0);\n//       //   } else {\n//       date.setMonth(date.getMonth() + 1);\n//       //   }\n\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       //   console.log(month);\n//       const calendar = [];\n//       const year = date.getFullYear();\n\n//       //   console.log(month, year);\n\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n\n//     case \"DECREMENT\": {\n//       if (state.month === \"January\") {\n//         date.setFullYear(date.getFullYear() - 1);\n//         date.setMonth(11);\n//       } else date.setMonth(date.getMonth() - 1);\n\n//       const calendar = createCalendar(date);\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       const year = date.getFullYear();\n\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}