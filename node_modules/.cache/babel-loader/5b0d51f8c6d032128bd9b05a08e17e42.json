{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/UI/AddDataForm/AddDateForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useReducer } from \"react\";\nimport EditModalContext from \"../../../store/editModal/editModal--context\";\nimport Modal from \"../Modal/Modal\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport createDateStringFormat from \"../../../Others/CreateDateStringFormat/CreateDateStringFormat\";\nimport FormBtn from \"./FormBtn\";\nimport FormPrice from \"./FormPrice\";\nimport FormDate from \"./FormDate\";\nimport FormDescription from \"./FormDescription\";\nimport FormSubCategory from \"./FormSubCategory\";\nimport FormMainCategory from \"./FormMainCategory\";\nimport FormTitle from \"./FormTitle\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./AddDataForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CATEGORY\":\n      {\n        let mainCategoryArr, subCategoryArr;\n        const categoryExpenseKeyArr = Object.keys(state.categoryExpense);\n        const categoryIncomeKeyArr = Object.keys(state.categoryIncome);\n        const firstCategoryExpense = Object.keys(state.categoryExpense)[0];\n        const firstCategoryIncome = Object.keys(state.categoryIncome)[0];\n        /*\n        Note that do NOT directly hard code \"food\" or \"salary\"\n        because user may add, remove, edit main and sub category\n        what we want is showing the first main category, and it's sub category\n        */\n\n        if (action.value === \"expense\") {\n          mainCategoryArr = categoryExpenseKeyArr;\n          subCategoryArr = state.categoryExpense[categoryExpenseKeyArr[0]];\n        } else {\n          mainCategoryArr = categoryIncomeKeyArr;\n          subCategoryArr = state.categoryIncome[categoryIncomeKeyArr[0]];\n        }\n\n        return { ...state,\n          category: action.value,\n          mainCategoryArr,\n          subCategoryArr,\n          mainCategory: action.value === \"expense\" ? firstCategoryExpense : firstCategoryIncome,\n          subCategory: action.value === \"expense\" ? state.categoryExpense[categoryExpenseKeyArr[0]][0] : state.categoryIncome[categoryIncomeKeyArr[0]][0],\n          icon: state.iconObj[action.value === \"expense\" ? firstCategoryExpense : firstCategoryIncome]\n        };\n      }\n\n    case \"MAIN_CATEGORY\":\n      {\n        let subCategoryArr;\n        if (state.category === \"expense\") subCategoryArr = state.categoryExpense[action.value];else subCategoryArr = state.categoryIncome[action.value];\n        return { ...state,\n          mainCategory: action.value,\n          subCategoryArr,\n          subCategory: subCategoryArr[0],\n          icon: state.iconObj[action.value]\n        };\n      }\n\n    case \"SUB_CATEGORY\":\n      {\n        return { ...state,\n          subCategory: action.value\n        };\n      }\n\n    case \"DESCRIPTION\":\n      {\n        return { ...state,\n          description: action.value\n        };\n      }\n\n    case \"DATE\":\n      {\n        return { ...state,\n          date: action.value\n        };\n      }\n\n    case \"PRICE\":\n      {\n        let valid = false;\n        if (action.value.trim().length > 0 && !Object.is(-0, Number(action.value)) && Number(action.value) >= 0) valid = true;\n        return { ...state,\n          isValid: valid,\n          price: action.value\n        };\n      }\n\n    case \"PRICE--TOUCH\":\n      {\n        // it will always be true once user have selected or touched the price input\n        return { ...state,\n          priceTouch: true\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nfunction AddDataForm(props) {\n  _s();\n\n  const {\n    addExpenseData,\n    editExpenseData\n  } = useContext(ExpenseDataContext);\n  const [, setEditModal] = useContext(EditModalContext);\n  const {\n    categoryExpense,\n    categoryIncome,\n    iconObj\n  } = useContext(CategoryContext);\n  const mainCateExpenseArr = Object.keys(categoryExpense);\n  const mainCateIncomeArr = Object.keys(categoryIncome);\n  /*\n  the data storing in expenseDataProvider do NOT have\n  mainCategoryArr, subCategoryArr categoryExpense, categoryIncome, iconObj, priceTouch\n  but we need this data in the form, so add them\n  */\n\n  let initialObj;\n  if (props.oldExpenseData) initialObj = { ...props.oldExpenseData,\n    mainCategoryArr: props.oldExpenseData.category === \"expense\" ? mainCateExpenseArr : mainCateIncomeArr,\n    subCategoryArr: props.oldExpenseData.category === \"expense\" ? categoryExpense[props.oldExpenseData.mainCategory] : categoryIncome[props.oldExpenseData.mainCategory],\n    categoryExpense,\n    categoryIncome,\n    iconObj,\n    priceTouch: true\n  };else initialObj = {\n    category: \"expense\",\n    mainCategoryArr: mainCateExpenseArr,\n    subCategoryArr: categoryExpense[mainCateExpenseArr[0]],\n    mainCategory: mainCateExpenseArr[0],\n    subCategory: categoryExpense[mainCateExpenseArr[0]][0],\n    date: props.date === undefined ? createDateStringFormat(new Date()) : createDateStringFormat(new Date(props.date)),\n    description: \"\",\n    price: \"\",\n    priceTouch: false,\n    icon: iconObj[Object.keys(categoryExpense)[0]],\n    isValid: false,\n    iconObj,\n    categoryExpense,\n    categoryIncome\n  };\n  const [formData, formDataDispatch] = useReducer(reducer, initialObj);\n\n  function categoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function mainCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"MAIN_CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function subCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"SUB_CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function descriptionChangeHandler(e) {\n    formDataDispatch({\n      type: \"DESCRIPTION\",\n      value: e.target.value\n    });\n  }\n\n  function dateChangeHandler(e) {\n    formDataDispatch({\n      type: \"DATE\",\n      value: e.target.value\n    });\n  }\n\n  function priceChangeHandler(e) {\n    formDataDispatch({\n      type: \"PRICE\",\n      value: e.target.value\n    });\n  }\n\n  function inputPriceTouchHandler() {\n    // it will always be true until user select or touch the price input\n    formDataDispatch({\n      type: \"PRICE--TOUCH\"\n    });\n  }\n\n  function formSubmitHandler(e) {\n    e.preventDefault();\n    const newFormData = {\n      id: props.oldExpenseData ? props.oldExpenseData.id : uuidv4(),\n      category: formData.category,\n      mainCate: formData.mainCategory,\n      subCate: formData.subCategory,\n      time: formData.date,\n      description: formData.description,\n      price: formData.price,\n      year: formData.date.slice(0, 4),\n      month: formData.date.slice(5, 7),\n      day: formData.date.slice(8, 10)\n    }; //////////////////////////////////////////////////\n    // add new data or edited old data\n    // if props.oldExpenseData exist, it means it's editing the old data\n\n    if (props.oldExpenseData) {\n      editExpenseData(newFormData);\n      setEditModal(true);\n    } else addExpenseData(newFormData); // hide the more functionality after user edit the data\n\n\n    if (props.btnMoreToggler) props.btnMoreToggler();\n    props.addDataFormModalToggler();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    classModal: style.modal,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      className: style.form,\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        classNameContainer: style[\"title__container\"],\n        classNameInput: style.input,\n        classNameExpense: style.expense,\n        classNameIncome: style.income,\n        classNameCheck: style.check,\n        classNameTitle: `${style.title} uppercase transition--25`,\n        category: formData.category,\n        categoryChangeHandler: categoryChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"form__container\"],\n        children: [/*#__PURE__*/_jsxDEV(FormMainCategory, {\n          classNameLabel: `${style.label} capitalize`,\n          classNameIcon: \"center--flex\",\n          classNameInput: style.input,\n          mainCategory: formData.mainCategory,\n          icon: formData.icon,\n          mainCategoryChangeHandler: mainCategoryChangeHandler,\n          mainCategoryArr: formData.mainCategoryArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSubCategory, {\n          classNameLabel: `${style.label} capitalize`,\n          classNameInput: style.input,\n          subCategoryChangeHandler: subCategoryChangeHandler,\n          subCategory: formData.subCategory,\n          subCategoryArr: formData.subCategoryArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormDescription, {\n          classNameTextContainer: style[\"text_container\"],\n          classNameLabel: `${style.label} capitalize`,\n          classNameInput: style.input,\n          description: formData.description,\n          descriptionChangeHandler: descriptionChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormDate, {\n          classNameLabel: `${style.label} capitalize`,\n          classNameInput: style.input,\n          date: formData.date,\n          dateChangeHandler: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormPrice, {\n          classNameContainer: style[\"price__container\"],\n          classNameLabel: `${style.label} capitalize`,\n          classNameInput: style.input,\n          classNameInputInvalid: style[\"input--invalid\"],\n          classNameWarn: style.warning,\n          price: formData.price,\n          priceTouch: formData.priceTouch,\n          isValid: !formData.isValid,\n          priceChangeHandler: priceChangeHandler,\n          inputPriceTouchHandler: inputPriceTouchHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormBtn, {\n          classNameContainer: `${style[\"btn__container\"]}`,\n          classNameCancel: `${style.btn} uppercase transition--25`,\n          addDataFormModalToggler: props.addDataFormModalToggler,\n          classNameAdd: !formData.isValid ? `${style[\"btn--invalid\"]} ${style.btn} uppercase transition--25` : `${style.btn} uppercase transition--25`,\n          isValid: !formData.isValid,\n          oldExpenseData: props.oldExpenseData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddDataForm, \"jLuFMoJra410EUDOKSC65dobIDA=\");\n\n_c = AddDataForm;\nexport default AddDataForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDataForm\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/UI/AddDataForm/AddDateForm.js"],"names":["useContext","useReducer","EditModalContext","Modal","HorizontalLine","ExpenseDataContext","CategoryContext","createDateStringFormat","FormBtn","FormPrice","FormDate","FormDescription","FormSubCategory","FormMainCategory","FormTitle","v4","uuidv4","style","reducer","state","action","type","mainCategoryArr","subCategoryArr","categoryExpenseKeyArr","Object","keys","categoryExpense","categoryIncomeKeyArr","categoryIncome","firstCategoryExpense","firstCategoryIncome","value","category","mainCategory","subCategory","icon","iconObj","description","date","valid","trim","length","is","Number","isValid","price","priceTouch","AddDataForm","props","addExpenseData","editExpenseData","setEditModal","mainCateExpenseArr","mainCateIncomeArr","initialObj","oldExpenseData","undefined","Date","formData","formDataDispatch","categoryChangeHandler","e","target","mainCategoryChangeHandler","subCategoryChangeHandler","descriptionChangeHandler","dateChangeHandler","priceChangeHandler","inputPriceTouchHandler","formSubmitHandler","preventDefault","newFormData","id","mainCate","subCate","time","year","slice","month","day","btnMoreToggler","addDataFormModalToggler","modal","form","input","expense","income","check","title","label","warning","btn"],"mappings":"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","sourcesContent":["import { useContext, useReducer } from \"react\";\nimport EditModalContext from \"../../../store/editModal/editModal--context\";\nimport Modal from \"../Modal/Modal\";\nimport HorizontalLine from \"../HorizontalLine/HorizontalLine\";\nimport ExpenseDataContext from \"../../../store/expenseData/expenseData--context\";\nimport CategoryContext from \"../../../store/category/category--context\";\nimport createDateStringFormat from \"../../../Others/CreateDateStringFormat/CreateDateStringFormat\";\nimport FormBtn from \"./FormBtn\";\nimport FormPrice from \"./FormPrice\";\nimport FormDate from \"./FormDate\";\nimport FormDescription from \"./FormDescription\";\nimport FormSubCategory from \"./FormSubCategory\";\nimport FormMainCategory from \"./FormMainCategory\";\nimport FormTitle from \"./FormTitle\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./AddDataForm.module.css\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CATEGORY\": {\n      let mainCategoryArr, subCategoryArr;\n      const categoryExpenseKeyArr = Object.keys(state.categoryExpense);\n      const categoryIncomeKeyArr = Object.keys(state.categoryIncome);\n      const firstCategoryExpense = Object.keys(state.categoryExpense)[0];\n      const firstCategoryIncome = Object.keys(state.categoryIncome)[0];\n\n      /*\n      Note that do NOT directly hard code \"food\" or \"salary\"\n      because user may add, remove, edit main and sub category\n      what we want is showing the first main category, and it's sub category\n      */\n      if (action.value === \"expense\") {\n        mainCategoryArr = categoryExpenseKeyArr;\n        subCategoryArr = state.categoryExpense[categoryExpenseKeyArr[0]];\n      } else {\n        mainCategoryArr = categoryIncomeKeyArr;\n        subCategoryArr = state.categoryIncome[categoryIncomeKeyArr[0]];\n      }\n\n      return {\n        ...state,\n        category: action.value,\n        mainCategoryArr,\n        subCategoryArr,\n        mainCategory:\n          action.value === \"expense\"\n            ? firstCategoryExpense\n            : firstCategoryIncome,\n        subCategory:\n          action.value === \"expense\"\n            ? state.categoryExpense[categoryExpenseKeyArr[0]][0]\n            : state.categoryIncome[categoryIncomeKeyArr[0]][0],\n        icon: state.iconObj[\n          action.value === \"expense\"\n            ? firstCategoryExpense\n            : firstCategoryIncome\n        ],\n      };\n    }\n\n    case \"MAIN_CATEGORY\": {\n      let subCategoryArr;\n\n      if (state.category === \"expense\")\n        subCategoryArr = state.categoryExpense[action.value];\n      else subCategoryArr = state.categoryIncome[action.value];\n\n      return {\n        ...state,\n        mainCategory: action.value,\n        subCategoryArr,\n        subCategory: subCategoryArr[0],\n        icon: state.iconObj[action.value],\n      };\n    }\n\n    case \"SUB_CATEGORY\": {\n      return { ...state, subCategory: action.value };\n    }\n\n    case \"DESCRIPTION\": {\n      return { ...state, description: action.value };\n    }\n\n    case \"DATE\": {\n      return { ...state, date: action.value };\n    }\n\n    case \"PRICE\": {\n      let valid = false;\n      if (\n        action.value.trim().length > 0 &&\n        !Object.is(-0, Number(action.value)) &&\n        Number(action.value) >= 0\n      )\n        valid = true;\n\n      return { ...state, isValid: valid, price: action.value };\n    }\n\n    case \"PRICE--TOUCH\": {\n      // it will always be true once user have selected or touched the price input\n      return { ...state, priceTouch: true };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction AddDataForm(props) {\n  const { addExpenseData, editExpenseData } = useContext(ExpenseDataContext);\n  const [, setEditModal] = useContext(EditModalContext);\n  const { categoryExpense, categoryIncome, iconObj } =\n    useContext(CategoryContext);\n  const mainCateExpenseArr = Object.keys(categoryExpense);\n  const mainCateIncomeArr = Object.keys(categoryIncome);\n\n  /*\n  the data storing in expenseDataProvider do NOT have\n  mainCategoryArr, subCategoryArr categoryExpense, categoryIncome, iconObj, priceTouch\n  but we need this data in the form, so add them\n  */\n  let initialObj;\n  if (props.oldExpenseData)\n    initialObj = {\n      ...props.oldExpenseData,\n      mainCategoryArr:\n        props.oldExpenseData.category === \"expense\"\n          ? mainCateExpenseArr\n          : mainCateIncomeArr,\n      subCategoryArr:\n        props.oldExpenseData.category === \"expense\"\n          ? categoryExpense[props.oldExpenseData.mainCategory]\n          : categoryIncome[props.oldExpenseData.mainCategory],\n      categoryExpense,\n      categoryIncome,\n      iconObj,\n      priceTouch: true,\n    };\n  else\n    initialObj = {\n      category: \"expense\",\n      mainCategoryArr: mainCateExpenseArr,\n      subCategoryArr: categoryExpense[mainCateExpenseArr[0]],\n      mainCategory: mainCateExpenseArr[0],\n      subCategory: categoryExpense[mainCateExpenseArr[0]][0],\n      date:\n        props.date === undefined\n          ? createDateStringFormat(new Date())\n          : createDateStringFormat(new Date(props.date)),\n      description: \"\",\n      price: \"\",\n      priceTouch: false,\n      icon: iconObj[Object.keys(categoryExpense)[0]],\n      isValid: false,\n      iconObj,\n      categoryExpense,\n      categoryIncome,\n    };\n\n  const [formData, formDataDispatch] = useReducer(reducer, initialObj);\n\n  function categoryChangeHandler(e) {\n    formDataDispatch({ type: \"CATEGORY\", value: e.target.value });\n  }\n\n  function mainCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"MAIN_CATEGORY\",\n      value: e.target.value,\n    });\n  }\n\n  function subCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"SUB_CATEGORY\",\n      value: e.target.value,\n    });\n  }\n\n  function descriptionChangeHandler(e) {\n    formDataDispatch({\n      type: \"DESCRIPTION\",\n      value: e.target.value,\n    });\n  }\n\n  function dateChangeHandler(e) {\n    formDataDispatch({\n      type: \"DATE\",\n      value: e.target.value,\n    });\n  }\n\n  function priceChangeHandler(e) {\n    formDataDispatch({\n      type: \"PRICE\",\n      value: e.target.value,\n    });\n  }\n\n  function inputPriceTouchHandler() {\n    // it will always be true until user select or touch the price input\n    formDataDispatch({\n      type: \"PRICE--TOUCH\",\n    });\n  }\n\n  function formSubmitHandler(e) {\n    e.preventDefault();\n\n    const newFormData = {\n      id: props.oldExpenseData ? props.oldExpenseData.id : uuidv4(),\n      category: formData.category,\n      mainCate: formData.mainCategory,\n      subCate: formData.subCategory,\n      time: formData.date,\n      description: formData.description,\n      price: formData.price,\n      year: formData.date.slice(0, 4),\n      month: formData.date.slice(5, 7),\n      day: formData.date.slice(8, 10),\n    };\n\n    //////////////////////////////////////////////////\n    // add new data or edited old data\n    // if props.oldExpenseData exist, it means it's editing the old data\n    if (props.oldExpenseData) {\n      editExpenseData(newFormData);\n      setEditModal(true);\n    } else addExpenseData(newFormData);\n\n    // hide the more functionality after user edit the data\n    if (props.btnMoreToggler) props.btnMoreToggler();\n\n    props.addDataFormModalToggler();\n  }\n\n  return (\n    <Modal classModal={style.modal}>\n      <form onSubmit={formSubmitHandler} className={style.form}>\n        <FormTitle\n          classNameContainer={style[\"title__container\"]}\n          classNameInput={style.input}\n          classNameExpense={style.expense}\n          classNameIncome={style.income}\n          classNameCheck={style.check}\n          classNameTitle={`${style.title} uppercase transition--25`}\n          category={formData.category}\n          categoryChangeHandler={categoryChangeHandler}\n        />\n\n        <HorizontalLine />\n        <div className={style[\"form__container\"]}>\n          <FormMainCategory\n            classNameLabel={`${style.label} capitalize`}\n            classNameIcon=\"center--flex\"\n            classNameInput={style.input}\n            mainCategory={formData.mainCategory}\n            icon={formData.icon}\n            mainCategoryChangeHandler={mainCategoryChangeHandler}\n            mainCategoryArr={formData.mainCategoryArr}\n          />\n\n          <FormSubCategory\n            classNameLabel={`${style.label} capitalize`}\n            classNameInput={style.input}\n            subCategoryChangeHandler={subCategoryChangeHandler}\n            subCategory={formData.subCategory}\n            subCategoryArr={formData.subCategoryArr}\n          />\n\n          <FormDescription\n            classNameTextContainer={style[\"text_container\"]}\n            classNameLabel={`${style.label} capitalize`}\n            classNameInput={style.input}\n            description={formData.description}\n            descriptionChangeHandler={descriptionChangeHandler}\n          />\n\n          <FormDate\n            classNameLabel={`${style.label} capitalize`}\n            classNameInput={style.input}\n            date={formData.date}\n            dateChangeHandler={dateChangeHandler}\n          />\n\n          <FormPrice\n            classNameContainer={style[\"price__container\"]}\n            classNameLabel={`${style.label} capitalize`}\n            classNameInput={style.input}\n            classNameInputInvalid={style[\"input--invalid\"]}\n            classNameWarn={style.warning}\n            price={formData.price}\n            priceTouch={formData.priceTouch}\n            isValid={!formData.isValid}\n            priceChangeHandler={priceChangeHandler}\n            inputPriceTouchHandler={inputPriceTouchHandler}\n          />\n\n          <FormBtn\n            classNameContainer={`${style[\"btn__container\"]}`}\n            classNameCancel={`${style.btn} uppercase transition--25`}\n            addDataFormModalToggler={props.addDataFormModalToggler}\n            classNameAdd={\n              !formData.isValid\n                ? `${style[\"btn--invalid\"]} ${style.btn} uppercase transition--25`\n                : `${style.btn} uppercase transition--25`\n            }\n            isValid={!formData.isValid}\n            oldExpenseData={props.oldExpenseData}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default AddDataForm;\n"]},"metadata":{},"sourceType":"module"}