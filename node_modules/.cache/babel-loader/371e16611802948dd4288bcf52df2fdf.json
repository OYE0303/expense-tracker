{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/Monthly/Monthly.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport style from \"./Monthly.module.css\";\nimport Button from \"../../../UI/Button\";\nimport CreateCalendar from \"./CreateCalendar\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport ExpenseListModal from \"../../../UI/ExpenseListModal/ExpenseListModal\";\nimport AddDataForm from \"../../../UI/AddDataForm/AddDateForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateOptObj = {\n  month: \"long\"\n};\nconst date = new Date();\n\nfunction CalendarMonthly(props) {\n  _s();\n\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const [calendarState, setcalendarState] = useState(CreateCalendar(date, showModalHandler, expenseData));\n  const [month, setMonth] = useState(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n  const [year, SetYear] = useState(date.getFullYear());\n  const [animationMonth, setAnimationMonth] = useState(false);\n  const [animationYear, setAnimationMonthYear] = useState(false);\n  const [expenseListModal, setExpenseListModal] = useState(false);\n  const [expenseListCalendar, setExpenseListCalendar] = useState([]);\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: \"\"\n  });\n  console.log(month); // animation for month\n\n  useEffect(() => {\n    // if (index === 0) {\n    //   index++;\n    //   return;\n    // }\n    setAnimationMonth(true);\n    const time = setTimeout(() => {\n      setAnimationMonth(false);\n    }, 300);\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [month]); // animation for year\n\n  useEffect(() => {\n    // if (index1 === 0) {\n    //   index1++;\n    //   return;\n    // }\n    setAnimationMonthYear(true);\n    const time = setTimeout(() => {\n      setAnimationMonthYear(false);\n    }, 300);\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [year]); // useEffect(() => {\n  //   const calendar = CreateCalendar(date, showModalHandler, expenseData);\n  //   setcalendarState(calendar);\n  // }, [expenseData]);\n\n  function changeMonth(change) {\n    if (change === \"increase\") date.setMonth(date.getMonth() + 1);else date.setMonth(date.getMonth() - 1);\n    const calendar = CreateCalendar(date, showModalHandler, expenseData);\n    setcalendarState(calendar);\n    setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    SetYear(date.getFullYear());\n  }\n\n  function showModalHandler(e) {\n    const rawData = e.target.dataset.id;\n    if (!rawData) return;\n    const data = `${rawData.slice(0, 4)}-${rawData.slice(4, 6)}-${rawData.slice(6)}`;\n    const allDataArr = expenseData.filter(element => {\n      return element.time === data;\n    });\n    setExpenseListModal(true);\n    if (allDataArr.length === 0) setExpenseListCalendar(data);else setExpenseListCalendar(allDataArr);\n  }\n\n  function closeModalHandler() {\n    setExpenseListModal(false);\n  }\n\n  function showAddDataFormHandler(time) {\n    setAddDataFormModal({\n      show: true,\n      date: time\n    });\n  }\n\n  function closeAddDataFormHandler() {\n    setAddDataFormModal({\n      show: false,\n      date: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.monthly,\n    children: [expenseListModal && /*#__PURE__*/_jsxDEV(ExpenseListModal, {\n      expenseListCalendar: expenseListCalendar,\n      setExpenseListCalendar: setExpenseListCalendar,\n      closeModalHandler: closeModalHandler,\n      showAddDataFormHandler: showAddDataFormHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), addDataFormModal.show && /*#__PURE__*/_jsxDEV(AddDataForm, {\n      date: addDataFormModal.date,\n      closeAddDataFormHandlerFromCalendar: closeAddDataFormHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"monthly__container\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__month\"],\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: style.btn,\n          onClick: () => changeMonth(\"decrease\"),\n          type: \"button\",\n          children: `${\"<\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style[\"monthly__title\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: animationMonth ? `${style.bump}` : \"\",\n            children: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: animationYear ? `${style.bump}` : \"\",\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: style.btn,\n          onClick: () => changeMonth(\"increase\"),\n          type: \"button\",\n          children: `${\">\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__week\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style[\"monthly__days\"],\n        children: calendarState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarMonthly, \"W1V5s7eQa4VY660pOxhGBUbebXw=\");\n\n_c = CalendarMonthly;\nexport default CalendarMonthly; // const test = new Date();\n// test.setFullYear(date.getFullYear() - 1);\n// test.setMonth(11);\n// // test.setMonth(0);\n// console.log(test);\n// const initialObj = {\n//   calendar: createCalendar(date),\n//   month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n//   year: date.getFullYear(),\n// };\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case \"INCREMENT\": {\n//       //   if (state.month === \"December\") {\n//       //     date.setFullYear(date.getFullYear() + 1);\n//       //     date.setMonth(0);\n//       //   } else {\n//       date.setMonth(date.getMonth() + 1);\n//       //   }\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       //   console.log(month);\n//       const calendar = [];\n//       const year = date.getFullYear();\n//       //   console.log(month, year);\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n//     case \"DECREMENT\": {\n//       if (state.month === \"January\") {\n//         date.setFullYear(date.getFullYear() - 1);\n//         date.setMonth(11);\n//       } else date.setMonth(date.getMonth() - 1);\n//       const calendar = createCalendar(date);\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       const year = date.getFullYear();\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarMonthly\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Calendar/Monthly/Monthly.js"],"names":["useState","useEffect","useContext","style","Button","CreateCalendar","ExpenseDataContext","ExpenseListModal","AddDataForm","dateOptObj","month","date","Date","CalendarMonthly","props","expenseData","calendarState","setcalendarState","showModalHandler","setMonth","Intl","DateTimeFormat","format","year","SetYear","getFullYear","animationMonth","setAnimationMonth","animationYear","setAnimationMonthYear","expenseListModal","setExpenseListModal","expenseListCalendar","setExpenseListCalendar","addDataFormModal","setAddDataFormModal","show","console","log","time","setTimeout","cleanUp","clearTimeout","changeMonth","change","getMonth","calendar","e","rawData","target","dataset","id","data","slice","allDataArr","filter","element","length","closeModalHandler","showAddDataFormHandler","closeAddDataFormHandler","monthly","btn","bump"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport style from \"./Monthly.module.css\";\nimport Button from \"../../../UI/Button\";\nimport CreateCalendar from \"./CreateCalendar\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport ExpenseListModal from \"../../../UI/ExpenseListModal/ExpenseListModal\";\nimport AddDataForm from \"../../../UI/AddDataForm/AddDateForm\";\n\nconst dateOptObj = { month: \"long\" };\n\nconst date = new Date();\n\nfunction CalendarMonthly(props) {\n  const { expenseData } = useContext(ExpenseDataContext);\n  const [calendarState, setcalendarState] = useState(\n    CreateCalendar(date, showModalHandler, expenseData)\n  );\n  const [month, setMonth] = useState(\n    new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date)\n  );\n  const [year, SetYear] = useState(date.getFullYear());\n  const [animationMonth, setAnimationMonth] = useState(false);\n  const [animationYear, setAnimationMonthYear] = useState(false);\n  const [expenseListModal, setExpenseListModal] = useState(false);\n  const [expenseListCalendar, setExpenseListCalendar] = useState([]);\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: \"\",\n  });\n\n  console.log(month);\n\n  // animation for month\n  useEffect(() => {\n    // if (index === 0) {\n    //   index++;\n    //   return;\n    // }\n\n    setAnimationMonth(true);\n\n    const time = setTimeout(() => {\n      setAnimationMonth(false);\n    }, 300);\n\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [month]);\n\n  // animation for year\n  useEffect(() => {\n    // if (index1 === 0) {\n    //   index1++;\n    //   return;\n    // }\n\n    setAnimationMonthYear(true);\n\n    const time = setTimeout(() => {\n      setAnimationMonthYear(false);\n    }, 300);\n\n    return function cleanUp() {\n      clearTimeout(time);\n    };\n  }, [year]);\n\n  // useEffect(() => {\n  //   const calendar = CreateCalendar(date, showModalHandler, expenseData);\n\n  //   setcalendarState(calendar);\n  // }, [expenseData]);\n\n  function changeMonth(change) {\n    if (change === \"increase\") date.setMonth(date.getMonth() + 1);\n    else date.setMonth(date.getMonth() - 1);\n\n    const calendar = CreateCalendar(date, showModalHandler, expenseData);\n\n    setcalendarState(calendar);\n    setMonth(new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date));\n    SetYear(date.getFullYear());\n  }\n\n  function showModalHandler(e) {\n    const rawData = e.target.dataset.id;\n\n    if (!rawData) return;\n    const data = `${rawData.slice(0, 4)}-${rawData.slice(4, 6)}-${rawData.slice(\n      6\n    )}`;\n\n    const allDataArr = expenseData.filter((element) => {\n      return element.time === data;\n    });\n\n    setExpenseListModal(true);\n    if (allDataArr.length === 0) setExpenseListCalendar(data);\n    else setExpenseListCalendar(allDataArr);\n  }\n\n  function closeModalHandler() {\n    setExpenseListModal(false);\n  }\n\n  function showAddDataFormHandler(time) {\n    setAddDataFormModal({ show: true, date: time });\n  }\n\n  function closeAddDataFormHandler() {\n    setAddDataFormModal({ show: false, date: \"\" });\n  }\n\n  return (\n    <div className={style.monthly}>\n      {expenseListModal && (\n        <ExpenseListModal\n          expenseListCalendar={expenseListCalendar}\n          setExpenseListCalendar={setExpenseListCalendar}\n          closeModalHandler={closeModalHandler}\n          showAddDataFormHandler={showAddDataFormHandler}\n        />\n      )}\n      {addDataFormModal.show && (\n        <AddDataForm\n          date={addDataFormModal.date}\n          closeAddDataFormHandlerFromCalendar={closeAddDataFormHandler}\n        />\n      )}\n      <div className={style[\"monthly__container\"]}>\n        <div className={style[\"monthly__month\"]}>\n          <Button\n            className={style.btn}\n            onClick={() => changeMonth(\"decrease\")}\n            type=\"button\"\n          >{`${\"<\"}`}</Button>\n          <div className={style[\"monthly__title\"]}>\n            <h6 className={animationMonth ? `${style.bump}` : \"\"}>{month}</h6>\n            <h6 className={animationYear ? `${style.bump}` : \"\"}>{year}</h6>\n          </div>\n          <Button\n            className={style.btn}\n            onClick={() => changeMonth(\"increase\")}\n            type=\"button\"\n          >{`${\">\"}`}</Button>\n        </div>\n        <div className={style[\"monthly__week\"]}>\n          <div>Sun</div>\n          <div>Mon</div>\n          <div>Tue</div>\n          <div>Wed</div>\n          <div>Thu</div>\n          <div>Fri</div>\n          <div>Sat</div>\n        </div>\n        <div className={style[\"monthly__days\"]}>{calendarState}</div>\n      </div>\n    </div>\n  );\n}\nexport default CalendarMonthly;\n\n// const test = new Date();\n// test.setFullYear(date.getFullYear() - 1);\n// test.setMonth(11);\n// // test.setMonth(0);\n\n// console.log(test);\n\n// const initialObj = {\n//   calendar: createCalendar(date),\n//   month: new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date),\n//   year: date.getFullYear(),\n// };\n\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case \"INCREMENT\": {\n//       //   if (state.month === \"December\") {\n//       //     date.setFullYear(date.getFullYear() + 1);\n//       //     date.setMonth(0);\n//       //   } else {\n//       date.setMonth(date.getMonth() + 1);\n//       //   }\n\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       //   console.log(month);\n//       const calendar = [];\n//       const year = date.getFullYear();\n\n//       //   console.log(month, year);\n\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n\n//     case \"DECREMENT\": {\n//       if (state.month === \"January\") {\n//         date.setFullYear(date.getFullYear() - 1);\n//         date.setMonth(11);\n//       } else date.setMonth(date.getMonth() - 1);\n\n//       const calendar = createCalendar(date);\n//       const month = new Intl.DateTimeFormat(\"en-US\", dateOptObj).format(date);\n//       const year = date.getFullYear();\n\n//       return {\n//         calendar,\n//         month,\n//         year,\n//       };\n//     }\n\n//     default: {\n//       return state;\n//     }\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}