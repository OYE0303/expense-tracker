{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\":\n      {\n        return { ...state,\n          mainType: action.value\n        };\n      }\n\n    case \"STARTING_DATE\":\n      {\n        return { ...state,\n          startingDate: action.value\n        };\n      }\n\n    case \"ENDING_DATE\":\n      {\n        return { ...state,\n          endingDate: action.value\n        };\n      }\n\n    case \"TIME_DURATION\":\n      {\n        return { ...state,\n          timeDuration: action.value\n        };\n      }\n\n    case \"MAIN_CATEGORY\":\n      {\n        let subCategoryArr = [];\n        if (action.value === \"income\") subCategoryArr = state.categoryIncome;\n        if (action.value === \"expense\") subCategoryArr = state.categoryExpense;\n        return { ...state,\n          mainCategory: action.value,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"SUB_CATEGORY\":\n      {\n        let subCategoryArr; // add\n\n        if (action.check) {\n          // first check if the items has been in the array(avoid duplicate)\n          if (!state.subCategory.includes(action.value)) subCategoryArr = [...state.subCategory, action.value];\n        } // remove\n        else {\n          subCategoryArr = state.subCategory.filter(element => element !== action.value);\n        }\n\n        return { ...state,\n          subCategory: subCategoryArr\n        };\n      }\n\n    case \"ISVALID\":\n      {\n        return { ...state,\n          isValid: true\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction useChartOption() {\n  _s();\n\n  const initialObj = {\n    mainType: \"\",\n    startingDate: \"\",\n    endingDate: \"\",\n    timeDuration: \"7\",\n    mainCategory: \"\",\n    subCategory: \"\",\n    isValid: false,\n    categoryExpense: Object.keys(categoryExpense),\n    categoryIncome: Object.keys(categoryIncome)\n  };\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n  return [chartData, dispatchChartData];\n}\n\n_s(useChartOption, \"IDkT4gOm9WRY2b31oGnvL0QQQKQ=\");\n\nexport default useChartOption;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/Custom/useChartOption.js"],"names":["useReducer","reducer","state","action","type","mainType","value","startingDate","endingDate","timeDuration","subCategoryArr","categoryIncome","categoryExpense","mainCategory","subCategory","check","includes","filter","element","isValid","useChartOption","initialObj","Object","keys","chartData","dispatchChartData"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AAAkB;AAChB,eAAO,EAAE,GAAGF,KAAL;AAAYG,UAAAA,QAAQ,EAAEF,MAAM,CAACG;AAA7B,SAAP;AACD;;AAED,SAAK,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGJ,KAAL;AAAYK,UAAAA,YAAY,EAAEJ,MAAM,CAACG;AAAjC,SAAP;AACD;;AAED,SAAK,aAAL;AAAoB;AAClB,eAAO,EAAE,GAAGJ,KAAL;AAAYM,UAAAA,UAAU,EAAEL,MAAM,CAACG;AAA/B,SAAP;AACD;;AAED,SAAK,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGJ,KAAL;AAAYO,UAAAA,YAAY,EAAEN,MAAM,CAACG;AAAjC,SAAP;AACD;;AAED,SAAK,eAAL;AAAsB;AACpB,YAAII,cAAc,GAAG,EAArB;AACA,YAAIP,MAAM,CAACG,KAAP,KAAiB,QAArB,EAA+BI,cAAc,GAAGR,KAAK,CAACS,cAAvB;AAC/B,YAAIR,MAAM,CAACG,KAAP,KAAiB,SAArB,EAAgCI,cAAc,GAAGR,KAAK,CAACU,eAAvB;AAEhC,eAAO,EACL,GAAGV,KADE;AAELW,UAAAA,YAAY,EAAEV,MAAM,CAACG,KAFhB;AAGLQ,UAAAA,WAAW,EAAEJ;AAHR,SAAP;AAKD;;AAED,SAAK,cAAL;AAAqB;AACnB,YAAIA,cAAJ,CADmB,CAEnB;;AACA,YAAIP,MAAM,CAACY,KAAX,EAAkB;AAChB;AACA,cAAI,CAACb,KAAK,CAACY,WAAN,CAAkBE,QAAlB,CAA2Bb,MAAM,CAACG,KAAlC,CAAL,EACEI,cAAc,GAAG,CAAC,GAAGR,KAAK,CAACY,WAAV,EAAuBX,MAAM,CAACG,KAA9B,CAAjB;AACH,SAJD,CAMA;AANA,aAOK;AACHI,UAAAA,cAAc,GAAGR,KAAK,CAACY,WAAN,CAAkBG,MAAlB,CACdC,OAAD,IAAaA,OAAO,KAAKf,MAAM,CAACG,KADjB,CAAjB;AAGD;;AAED,eAAO,EACL,GAAGJ,KADE;AAELY,UAAAA,WAAW,EAAEJ;AAFR,SAAP;AAID;;AAED,SAAK,SAAL;AAAgB;AACd,eAAO,EAAE,GAAGR,KAAL;AAAYiB,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AAED;AACE,aAAOjB,KAAP;AAxDJ;AA0DD;;AAED,SAASkB,cAAT,GAA0B;AAAA;;AACxB,QAAMC,UAAU,GAAG;AACjBhB,IAAAA,QAAQ,EAAE,EADO;AAEjBE,IAAAA,YAAY,EAAE,EAFG;AAGjBC,IAAAA,UAAU,EAAE,EAHK;AAIjBC,IAAAA,YAAY,EAAE,GAJG;AAKjBI,IAAAA,YAAY,EAAE,EALG;AAMjBC,IAAAA,WAAW,EAAE,EANI;AAOjBK,IAAAA,OAAO,EAAE,KAPQ;AAQjBP,IAAAA,eAAe,EAAEU,MAAM,CAACC,IAAP,CAAYX,eAAZ,CARA;AASjBD,IAAAA,cAAc,EAAEW,MAAM,CAACC,IAAP,CAAYZ,cAAZ;AATC,GAAnB;AAYA,QAAM,CAACa,SAAD,EAAYC,iBAAZ,IAAiCzB,UAAU,CAACC,OAAD,EAAUoB,UAAV,CAAjD;AAEA,SAAO,CAACG,SAAD,EAAYC,iBAAZ,CAAP;AACD;;GAhBQL,c;;AAkBT,eAAeA,cAAf","sourcesContent":["import { useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MAIN_TYPE\": {\n      return { ...state, mainType: action.value };\n    }\n\n    case \"STARTING_DATE\": {\n      return { ...state, startingDate: action.value };\n    }\n\n    case \"ENDING_DATE\": {\n      return { ...state, endingDate: action.value };\n    }\n\n    case \"TIME_DURATION\": {\n      return { ...state, timeDuration: action.value };\n    }\n\n    case \"MAIN_CATEGORY\": {\n      let subCategoryArr = [];\n      if (action.value === \"income\") subCategoryArr = state.categoryIncome;\n      if (action.value === \"expense\") subCategoryArr = state.categoryExpense;\n\n      return {\n        ...state,\n        mainCategory: action.value,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"SUB_CATEGORY\": {\n      let subCategoryArr;\n      // add\n      if (action.check) {\n        // first check if the items has been in the array(avoid duplicate)\n        if (!state.subCategory.includes(action.value))\n          subCategoryArr = [...state.subCategory, action.value];\n      }\n\n      // remove\n      else {\n        subCategoryArr = state.subCategory.filter(\n          (element) => element !== action.value\n        );\n      }\n\n      return {\n        ...state,\n        subCategory: subCategoryArr,\n      };\n    }\n\n    case \"ISVALID\": {\n      return { ...state, isValid: true };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction useChartOption() {\n  const initialObj = {\n    mainType: \"\",\n    startingDate: \"\",\n    endingDate: \"\",\n    timeDuration: \"7\",\n    mainCategory: \"\",\n    subCategory: \"\",\n    isValid: false,\n    categoryExpense: Object.keys(categoryExpense),\n    categoryIncome: Object.keys(categoryIncome),\n  };\n\n  const [chartData, dispatchChartData] = useReducer(reducer, initialObj);\n\n  return [chartData, dispatchChartData];\n}\n\nexport default useChartOption;\n"]},"metadata":{},"sourceType":"module"}