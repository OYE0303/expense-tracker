{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport ExpenseDataContext from \"../../store/expenseData/expenseData--context\";\n\nfunction useExpenseDataList(date, type) {\n  _s();\n\n  const [dailyExpenseList, setDailyExpenseList] = useState(date);\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const dayData = new Date(dailyExpenseList);\n  const dateStr = createDateStringFormat(dayData);\n  const newDayData = expenseData.filter(element => element.time === dateStr);\n  return [newDayData, setDailyExpenseList];\n}\n\n_s(useExpenseDataList, \"jdfYQNXpA2ZI1Dzr2Mn+zdOxTlo=\");\n\nexport default useExpenseDataList;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/Custom/useExpenseDataList.js"],"names":["useState","useContext","createDateStringFormat","ExpenseDataContext","useExpenseDataList","date","type","dailyExpenseList","setDailyExpenseList","expenseData","dayData","Date","dateStr","newDayData","filter","element","time"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,sBAAP,MAAmC,kDAAnC;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AAAA;;AACtC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAACK,IAAD,CAAxD;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAkBR,UAAU,CAACE,kBAAD,CAAlC;AAEA,QAAMO,OAAO,GAAG,IAAIC,IAAJ,CAASJ,gBAAT,CAAhB;AACA,QAAMK,OAAO,GAAGV,sBAAsB,CAACQ,OAAD,CAAtC;AAEA,QAAMG,UAAU,GAAGJ,WAAW,CAACK,MAAZ,CAAoBC,OAAD,IAAaA,OAAO,CAACC,IAAR,KAAiBJ,OAAjD,CAAnB;AAEA,SAAO,CAACC,UAAD,EAAaL,mBAAb,CAAP;AACD;;GAVQJ,kB;;AAYT,eAAeA,kBAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport ExpenseDataContext from \"../../store/expenseData/expenseData--context\";\n\nfunction useExpenseDataList(date, type) {\n  const [dailyExpenseList, setDailyExpenseList] = useState(date);\n  const { expenseData } = useContext(ExpenseDataContext);\n\n  const dayData = new Date(dailyExpenseList);\n  const dateStr = createDateStringFormat(dayData);\n\n  const newDayData = expenseData.filter((element) => element.time === dateStr);\n\n  return [newDayData, setDailyExpenseList];\n}\n\nexport default useExpenseDataList;\n"]},"metadata":{},"sourceType":"module"}