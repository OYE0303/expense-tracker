{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport createYearMonthDay from \"../CreateYearMonthDay/createYearMonthDay\";\nimport ExpenseDataContext from \"../../store/expenseData/expenseData--context\";\n\nfunction useDailyExpenseData(date) {\n  _s();\n\n  const [dailyExpenseList, setDailyExpenseList] = useState(date);\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const dayData = new Date(dailyExpenseList);\n  const [year, month, day] = createYearMonthDay(dayData);\n  const newDayData = expenseData.filter(element => element.year - 0 === year && element.month - 0 === month && element.day - 0 === day);\n  return [newDayData, setDailyExpenseList];\n}\n\n_s(useDailyExpenseData, \"jdfYQNXpA2ZI1Dzr2Mn+zdOxTlo=\");\n\nexport default useDailyExpenseData;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/Custom/useDailyExpenseData.js"],"names":["useState","useContext","createYearMonthDay","ExpenseDataContext","useDailyExpenseData","date","dailyExpenseList","setDailyExpenseList","expenseData","dayData","Date","year","month","day","newDayData","filter","element"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;;AAEA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AAAA;;AACjC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAACK,IAAD,CAAxD;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBP,UAAU,CAACE,kBAAD,CAAlC;AAEA,QAAMM,OAAO,GAAG,IAAIC,IAAJ,CAASJ,gBAAT,CAAhB;AACA,QAAM,CAACK,IAAD,EAAOC,KAAP,EAAcC,GAAd,IAAqBX,kBAAkB,CAACO,OAAD,CAA7C;AAEA,QAAMK,UAAU,GAAGN,WAAW,CAACO,MAAZ,CAChBC,OAAD,IACEA,OAAO,CAACL,IAAR,GAAe,CAAf,KAAqBA,IAArB,IACAK,OAAO,CAACJ,KAAR,GAAgB,CAAhB,KAAsBA,KADtB,IAEAI,OAAO,CAACH,GAAR,GAAc,CAAd,KAAoBA,GAJL,CAAnB;AAOA,SAAO,CAACC,UAAD,EAAaP,mBAAb,CAAP;AACD;;GAfQH,mB;;AAiBT,eAAeA,mBAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport createYearMonthDay from \"../CreateYearMonthDay/createYearMonthDay\";\nimport ExpenseDataContext from \"../../store/expenseData/expenseData--context\";\n\nfunction useDailyExpenseData(date) {\n  const [dailyExpenseList, setDailyExpenseList] = useState(date);\n  const { expenseData } = useContext(ExpenseDataContext);\n\n  const dayData = new Date(dailyExpenseList);\n  const [year, month, day] = createYearMonthDay(dayData);\n\n  const newDayData = expenseData.filter(\n    (element) =>\n      element.year - 0 === year &&\n      element.month - 0 === month &&\n      element.day - 0 === day\n  );\n\n  return [newDayData, setDailyExpenseList];\n}\n\nexport default useDailyExpenseData;\n"]},"metadata":{},"sourceType":"module"}