{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Calendar/CalendarTable/CreateCalendarTable.js\";\nimport { React } from \"react\";\nimport timeObj from \"../../../assets/timeObj/timeObj\";\nimport createYearMonthDay from \"../../../../Others/CreateYearMonthDay/createYearMonthDay\";\nimport coerceNumber from \"../../../../Others/CoerceNumber/coerceNumber\";\nimport mutipleArgsHelper from \"../../../../Others/MultipleArgsHelper/multipleArgsHelper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./CreateCalendarTable.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATE = new Date();\nconst MONTH = DATE.getMonth();\nconst TODAY = DATE.getDate();\nconst YEAR = DATE.getFullYear();\nconst cacheObj = {};\n/*\n1. get the date having expense and income in current month (array)\n2. get the last date of current month (30 or 31)\n3. get the last date of previous month (30 or 31)\n4. get the last day of current month (1 ~ 7)\n5. get the first day of curret month (1 ~ 7)\n6. create the last couple days of previous month\n   => How to know exactly number of days?\n   => first day of current month\n   => For example, the first day of current month is friday(5)\n   => then the calendar of this month can show 5 days of previous month\n   => sun ~ thu shows the previous month, and fri and sat shows the curret month\n\n7. create the all of days in current month\n   => simply iterate through from 1 to last date of current month(2.)\n\n8. create the next couple days of next month\n   => How to know exactly number of days?\n   => 7 - last day of current month - 1\n   => For example, the last day of current month is MON\n   => then the calendar of this month can show 5 days of next month\n   => Sun and Mon is current month, Tue ~ Sat is next month\n*/\n\nfunction CreateCalendarTable(date, showModalHandler, expenseData) {\n  let key = date.getFullYear() + \"\" + (date.getMonth() + 1);\n\n  if (key.length < 6) {\n    key = date.getFullYear() + \"0\" + (date.getMonth() + 1);\n  }\n\n  const [curYear, curMonth] = createYearMonthDay(date);\n  const expenseDayArr = [];\n  const incomeDayArr = [];\n  expenseData.forEach(data => {\n    const [dataYear, dataMonth] = coerceNumber(data.year, data.month, data.day);\n\n    if (curYear === dataYear && curMonth === dataMonth) {\n      if (data.category === \"expense\") {}\n    }\n  }); // if (!cacheObj[key]) {\n  //   addCacheData(cacheObj, date, key, expenseData);\n  // }\n\n  const res = [];\n  const dayExpense = expenseData.filter(element => Number(element.time.slice(0, 4)) === date.getFullYear() && Number(element.time.slice(5, 7)) === date.getMonth() + 1 && element.category === \"expense\").map(element => Number(element.time.slice(8)));\n  const dayIncome = expenseData.filter(element => Number(element.time.slice(0, 4)) === date.getFullYear() && Number(element.time.slice(5, 7)) === date.getMonth() + 1 && element.category === \"income\").map(element => Number(element.time.slice(8)));\n  /*\n  last day of current month\n  0 gives us the last day of previous month\n  + 1 makes to be last day fo current month\n  getDate gives us the number type\n  */\n\n  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(); // last day of previous month\n\n  const prevLastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate(); // last day of the week (current month)\n\n  const lastDayIndex = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDay(); // first day of the week (current month)\n\n  const firstDayIndex = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  const nextDays = 7 - lastDayIndex - 1; // day of previous month\n\n  for (let i = firstDayIndex; i > 0; i--) {\n    res.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.negative,\n      children: prevLastDay - i + 1\n    }, uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this));\n  } // day of current month\n\n\n  for (let i = 1; i <= lastDay; i++) {\n    // TODAY\n    if (date.getFullYear() === YEAR && date.getMonth() === MONTH && i === TODAY) {\n      res.push(checkDot(i >= 10 ? i + \"\" : \"0\" + i, true, dayExpense, dayIncome, showModalHandler, key));\n    } // other days\n    else res.push(checkDot(i >= 10 ? i + \"\" : \"0\" + i, false, dayExpense, dayIncome, showModalHandler, key));\n  } // day of next month\n\n\n  for (let i = 1; i <= nextDays; i++) {\n    res.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.negative,\n      children: i\n    }, uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this));\n  }\n\n  return res;\n}\n\n_c = CreateCalendarTable;\nexport default CreateCalendarTable; ///////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////\n\nfunction checkDot(i, current, dayExpense, dayIncome, showModalHandler, key) {\n  const numberI = Number(i);\n  const noDots = !(dayExpense.includes(numberI) || dayIncome.includes(numberI));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: showModalHandler,\n    className: current ? style.current : \"\",\n    \"data-id\": key + i,\n    children: [i, noDots || /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"dot__container\"],\n      children: [dayExpense.includes(numberI) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${style[\"dot--blue\"]} ${style.dot}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), dayIncome.includes(numberI) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${style[\"dot--pink\"]} ${style.dot}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, uuidv4(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n/*\nfunction addCacheData(cacheObj, date, key, expenseData) {\n  // each value in cache object is an array containing two arrays(day of expense and income)\n  cacheObj[key] = [];\n\n  const dayExpense = expenseData\n    .filter(\n      (element) =>\n        Number(element.time.slice(0, 4)) === date.getFullYear() &&\n        Number(element.time.slice(5, 7)) === date.getMonth() + 1 &&\n        element.category === \"expense\"\n    )\n    .map((element) => Number(element.time.slice(8)));\n\n  const dayIncome = expenseData\n    .filter(\n      (element) =>\n        Number(element.time.slice(0, 4)) === date.getFullYear() &&\n        Number(element.time.slice(5, 7)) === date.getMonth() + 1 &&\n        element.category === \"income\"\n    )\n    .map((element) => Number(element.time.slice(8)));\n\n  cacheObj[key].push(dayExpense);\n  cacheObj[key].push(dayIncome);\n}\n*/\n\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCalendarTable\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Calendar/CalendarTable/CreateCalendarTable.js"],"names":["React","timeObj","createYearMonthDay","coerceNumber","mutipleArgsHelper","v4","uuidv4","style","DATE","Date","MONTH","getMonth","TODAY","getDate","YEAR","getFullYear","cacheObj","CreateCalendarTable","date","showModalHandler","expenseData","key","length","curYear","curMonth","expenseDayArr","incomeDayArr","forEach","data","dataYear","dataMonth","year","month","day","category","res","dayExpense","filter","element","Number","time","slice","map","dayIncome","lastDay","prevLastDay","lastDayIndex","getDay","firstDayIndex","nextDays","i","push","negative","checkDot","current","numberI","noDots","includes","dot"],"mappings":";AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,iBAAP,MAA8B,0DAA9B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,kCAAlB;;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAd;AACA,MAAMC,KAAK,GAAGJ,IAAI,CAACK,OAAL,EAAd;AACA,MAAMC,IAAI,GAAGN,IAAI,CAACO,WAAL,EAAb;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,gBAAnC,EAAqDC,WAArD,EAAkE;AAChE,MAAIC,GAAG,GAAGH,IAAI,CAACH,WAAL,KAAqB,EAArB,IAA2BG,IAAI,CAACP,QAAL,KAAkB,CAA7C,CAAV;;AACA,MAAIU,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClBD,IAAAA,GAAG,GAAGH,IAAI,CAACH,WAAL,KAAqB,GAArB,IAA4BG,IAAI,CAACP,QAAL,KAAkB,CAA9C,CAAN;AACD;;AAED,QAAM,CAACY,OAAD,EAAUC,QAAV,IAAsBtB,kBAAkB,CAACgB,IAAD,CAA9C;AAEA,QAAMO,aAAa,GAAG,EAAtB;AACA,QAAMC,YAAY,GAAG,EAArB;AAEAN,EAAAA,WAAW,CAACO,OAAZ,CAAqBC,IAAD,IAAU;AAC5B,UAAM,CAACC,QAAD,EAAWC,SAAX,IAAwB3B,YAAY,CAACyB,IAAI,CAACG,IAAN,EAAYH,IAAI,CAACI,KAAjB,EAAwBJ,IAAI,CAACK,GAA7B,CAA1C;;AAEA,QAAIV,OAAO,KAAKM,QAAZ,IAAwBL,QAAQ,KAAKM,SAAzC,EAAoD;AAClD,UAAIF,IAAI,CAACM,QAAL,KAAkB,SAAtB,EAAiC,CAChC;AACF;AACF,GAPD,EAXgE,CAoBhE;AACA;AACA;;AAEA,QAAMC,GAAG,GAAG,EAAZ;AAEA,QAAMC,UAAU,GAAGhB,WAAW,CAC3BiB,MADgB,CAEdC,OAAD,IACEC,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCvB,IAAI,CAACH,WAAL,EAArC,IACAwB,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCvB,IAAI,CAACP,QAAL,KAAkB,CADvD,IAEA2B,OAAO,CAACJ,QAAR,KAAqB,SALR,EAOhBQ,GAPgB,CAOXJ,OAAD,IAAaC,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAPP,CAAnB;AASA,QAAME,SAAS,GAAGvB,WAAW,CAC1BiB,MADe,CAEbC,OAAD,IACEC,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCvB,IAAI,CAACH,WAAL,EAArC,IACAwB,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAN,KAAqCvB,IAAI,CAACP,QAAL,KAAkB,CADvD,IAEA2B,OAAO,CAACJ,QAAR,KAAqB,QALT,EAOfQ,GAPe,CAOVJ,OAAD,IAAaC,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAPR,CAAlB;AASA;AACF;AACA;AACA;AACA;AACA;;AACE,QAAMG,OAAO,GAAG,IAAInC,IAAJ,CACdS,IAAI,CAACH,WAAL,EADc,EAEdG,IAAI,CAACP,QAAL,KAAkB,CAFJ,EAGd,CAHc,EAIdE,OAJc,EAAhB,CAlDgE,CAwDhE;;AACA,QAAMgC,WAAW,GAAG,IAAIpC,IAAJ,CAClBS,IAAI,CAACH,WAAL,EADkB,EAElBG,IAAI,CAACP,QAAL,EAFkB,EAGlB,CAHkB,EAIlBE,OAJkB,EAApB,CAzDgE,CA+DhE;;AACA,QAAMiC,YAAY,GAAG,IAAIrC,IAAJ,CACnBS,IAAI,CAACH,WAAL,EADmB,EAEnBG,IAAI,CAACP,QAAL,KAAkB,CAFC,EAGnB,CAHmB,EAInBoC,MAJmB,EAArB,CAhEgE,CAsEhE;;AACA,QAAMC,aAAa,GAAG,IAAIvC,IAAJ,CACpBS,IAAI,CAACH,WAAL,EADoB,EAEpBG,IAAI,CAACP,QAAL,EAFoB,EAGpB,CAHoB,EAIpBoC,MAJoB,EAAtB;AAMA,QAAME,QAAQ,GAAG,IAAIH,YAAJ,GAAmB,CAApC,CA7EgE,CA+EhE;;AACA,OAAK,IAAII,CAAC,GAAGF,aAAb,EAA4BE,CAAC,GAAG,CAAhC,EAAmCA,CAAC,EAApC,EAAwC;AACtCf,IAAAA,GAAG,CAACgB,IAAJ,eACE;AAAK,MAAA,SAAS,EAAE5C,KAAK,CAAC6C,QAAtB;AAAA,gBACGP,WAAW,GAAGK,CAAd,GAAkB;AADrB,OAAqC5C,MAAM,EAA3C;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAtF+D,CAwFhE;;;AACA,OAAK,IAAI4C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,OAArB,EAA8BM,CAAC,EAA/B,EAAmC;AACjC;AACA,QACEhC,IAAI,CAACH,WAAL,OAAuBD,IAAvB,IACAI,IAAI,CAACP,QAAL,OAAoBD,KADpB,IAEAwC,CAAC,KAAKtC,KAHR,EAIE;AACAuB,MAAAA,GAAG,CAACgB,IAAJ,CACEE,QAAQ,CACNH,CAAC,IAAI,EAAL,GAAUA,CAAC,GAAG,EAAd,GAAmB,MAAMA,CADnB,EAEN,IAFM,EAGNd,UAHM,EAINO,SAJM,EAKNxB,gBALM,EAMNE,GANM,CADV;AAUD,KAfD,CAgBA;AAhBA,SAkBEc,GAAG,CAACgB,IAAJ,CACEE,QAAQ,CACNH,CAAC,IAAI,EAAL,GAAUA,CAAC,GAAG,EAAd,GAAmB,MAAMA,CADnB,EAEN,KAFM,EAGNd,UAHM,EAINO,SAJM,EAKNxB,gBALM,EAMNE,GANM,CADV;AAUH,GAvH+D,CAyHhE;;;AACA,OAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,QAArB,EAA+BC,CAAC,EAAhC,EAAoC;AAClCf,IAAAA,GAAG,CAACgB,IAAJ,eACE;AAAK,MAAA,SAAS,EAAE5C,KAAK,CAAC6C,QAAtB;AAAA,gBACGF;AADH,OAAqC5C,MAAM,EAA3C;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,SAAO6B,GAAP;AACD;;KAnIQlB,mB;AAqIT,eAAeA,mBAAf,C,CAEA;AACA;AACA;;AACA,SAASoC,QAAT,CAAkBH,CAAlB,EAAqBI,OAArB,EAA8BlB,UAA9B,EAA0CO,SAA1C,EAAqDxB,gBAArD,EAAuEE,GAAvE,EAA4E;AAC1E,QAAMkC,OAAO,GAAGhB,MAAM,CAACW,CAAD,CAAtB;AACA,QAAMM,MAAM,GAAG,EAAEpB,UAAU,CAACqB,QAAX,CAAoBF,OAApB,KAAgCZ,SAAS,CAACc,QAAV,CAAmBF,OAAnB,CAAlC,CAAf;AAEA,sBACE;AACE,IAAA,OAAO,EAAEpC,gBADX;AAEE,IAAA,SAAS,EAAEmC,OAAO,GAAG/C,KAAK,CAAC+C,OAAT,GAAmB,EAFvC;AAIE,eAASjC,GAAG,GAAG6B,CAJjB;AAAA,eAMGA,CANH,EAOGM,MAAM,iBACL;AAAK,MAAA,SAAS,EAAEjD,KAAK,CAAC,gBAAD,CAArB;AAAA,iBACG6B,UAAU,CAACqB,QAAX,CAAoBF,OAApB,kBACC;AAAM,QAAA,SAAS,EAAG,GAAEhD,KAAK,CAAC,WAAD,CAAc,IAAGA,KAAK,CAACmD,GAAI;AAApD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIGf,SAAS,CAACc,QAAV,CAAmBF,OAAnB,kBACC;AAAM,QAAA,SAAS,EAAG,GAAEhD,KAAK,CAAC,WAAD,CAAc,IAAGA,KAAK,CAACmD,GAAI;AAApD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,KAGOpD,MAAM,EAHb;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { React } from \"react\";\nimport timeObj from \"../../../assets/timeObj/timeObj\";\nimport createYearMonthDay from \"../../../../Others/CreateYearMonthDay/createYearMonthDay\";\nimport coerceNumber from \"../../../../Others/CoerceNumber/coerceNumber\";\nimport mutipleArgsHelper from \"../../../../Others/MultipleArgsHelper/multipleArgsHelper\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./CreateCalendarTable.module.css\";\n\nconst DATE = new Date();\nconst MONTH = DATE.getMonth();\nconst TODAY = DATE.getDate();\nconst YEAR = DATE.getFullYear();\n\nconst cacheObj = {};\n\n/*\n1. get the date having expense and income in current month (array)\n2. get the last date of current month (30 or 31)\n3. get the last date of previous month (30 or 31)\n4. get the last day of current month (1 ~ 7)\n5. get the first day of curret month (1 ~ 7)\n6. create the last couple days of previous month\n   => How to know exactly number of days?\n   => first day of current month\n   => For example, the first day of current month is friday(5)\n   => then the calendar of this month can show 5 days of previous month\n   => sun ~ thu shows the previous month, and fri and sat shows the curret month\n\n7. create the all of days in current month\n   => simply iterate through from 1 to last date of current month(2.)\n\n8. create the next couple days of next month\n   => How to know exactly number of days?\n   => 7 - last day of current month - 1\n   => For example, the last day of current month is MON\n   => then the calendar of this month can show 5 days of next month\n   => Sun and Mon is current month, Tue ~ Sat is next month\n*/\n\nfunction CreateCalendarTable(date, showModalHandler, expenseData) {\n  let key = date.getFullYear() + \"\" + (date.getMonth() + 1);\n  if (key.length < 6) {\n    key = date.getFullYear() + \"0\" + (date.getMonth() + 1);\n  }\n\n  const [curYear, curMonth] = createYearMonthDay(date);\n\n  const expenseDayArr = [];\n  const incomeDayArr = [];\n\n  expenseData.forEach((data) => {\n    const [dataYear, dataMonth] = coerceNumber(data.year, data.month, data.day);\n\n    if (curYear === dataYear && curMonth === dataMonth) {\n      if (data.category === \"expense\") {\n      }\n    }\n  });\n\n  // if (!cacheObj[key]) {\n  //   addCacheData(cacheObj, date, key, expenseData);\n  // }\n\n  const res = [];\n\n  const dayExpense = expenseData\n    .filter(\n      (element) =>\n        Number(element.time.slice(0, 4)) === date.getFullYear() &&\n        Number(element.time.slice(5, 7)) === date.getMonth() + 1 &&\n        element.category === \"expense\"\n    )\n    .map((element) => Number(element.time.slice(8)));\n\n  const dayIncome = expenseData\n    .filter(\n      (element) =>\n        Number(element.time.slice(0, 4)) === date.getFullYear() &&\n        Number(element.time.slice(5, 7)) === date.getMonth() + 1 &&\n        element.category === \"income\"\n    )\n    .map((element) => Number(element.time.slice(8)));\n\n  /*\n  last day of current month\n  0 gives us the last day of previous month\n  + 1 makes to be last day fo current month\n  getDate gives us the number type\n  */\n  const lastDay = new Date(\n    date.getFullYear(),\n    date.getMonth() + 1,\n    0\n  ).getDate();\n\n  // last day of previous month\n  const prevLastDay = new Date(\n    date.getFullYear(),\n    date.getMonth(),\n    0\n  ).getDate();\n\n  // last day of the week (current month)\n  const lastDayIndex = new Date(\n    date.getFullYear(),\n    date.getMonth() + 1,\n    0\n  ).getDay();\n\n  // first day of the week (current month)\n  const firstDayIndex = new Date(\n    date.getFullYear(),\n    date.getMonth(),\n    1\n  ).getDay();\n\n  const nextDays = 7 - lastDayIndex - 1;\n\n  // day of previous month\n  for (let i = firstDayIndex; i > 0; i--) {\n    res.push(\n      <div className={style.negative} key={uuidv4()}>\n        {prevLastDay - i + 1}\n      </div>\n    );\n  }\n\n  // day of current month\n  for (let i = 1; i <= lastDay; i++) {\n    // TODAY\n    if (\n      date.getFullYear() === YEAR &&\n      date.getMonth() === MONTH &&\n      i === TODAY\n    ) {\n      res.push(\n        checkDot(\n          i >= 10 ? i + \"\" : \"0\" + i,\n          true,\n          dayExpense,\n          dayIncome,\n          showModalHandler,\n          key\n        )\n      );\n    }\n    // other days\n    else\n      res.push(\n        checkDot(\n          i >= 10 ? i + \"\" : \"0\" + i,\n          false,\n          dayExpense,\n          dayIncome,\n          showModalHandler,\n          key\n        )\n      );\n  }\n\n  // day of next month\n  for (let i = 1; i <= nextDays; i++) {\n    res.push(\n      <div className={style.negative} key={uuidv4()}>\n        {i}\n      </div>\n    );\n  }\n\n  return res;\n}\n\nexport default CreateCalendarTable;\n\n///////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////\nfunction checkDot(i, current, dayExpense, dayIncome, showModalHandler, key) {\n  const numberI = Number(i);\n  const noDots = !(dayExpense.includes(numberI) || dayIncome.includes(numberI));\n\n  return (\n    <div\n      onClick={showModalHandler}\n      className={current ? style.current : \"\"}\n      key={uuidv4()}\n      data-id={key + i}\n    >\n      {i}\n      {noDots || (\n        <div className={style[\"dot__container\"]}>\n          {dayExpense.includes(numberI) && (\n            <span className={`${style[\"dot--blue\"]} ${style.dot}`}></span>\n          )}\n          {dayIncome.includes(numberI) && (\n            <span className={`${style[\"dot--pink\"]} ${style.dot}`}></span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n/*\nfunction addCacheData(cacheObj, date, key, expenseData) {\n  // each value in cache object is an array containing two arrays(day of expense and income)\n  cacheObj[key] = [];\n\n  const dayExpense = expenseData\n    .filter(\n      (element) =>\n        Number(element.time.slice(0, 4)) === date.getFullYear() &&\n        Number(element.time.slice(5, 7)) === date.getMonth() + 1 &&\n        element.category === \"expense\"\n    )\n    .map((element) => Number(element.time.slice(8)));\n\n  const dayIncome = expenseData\n    .filter(\n      (element) =>\n        Number(element.time.slice(0, 4)) === date.getFullYear() &&\n        Number(element.time.slice(5, 7)) === date.getMonth() + 1 &&\n        element.category === \"income\"\n    )\n    .map((element) => Number(element.time.slice(8)));\n\n  cacheObj[key].push(dayExpense);\n  cacheObj[key].push(dayIncome);\n}\n*/\n"]},"metadata":{},"sourceType":"module"}