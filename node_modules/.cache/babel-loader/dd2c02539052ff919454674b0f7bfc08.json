{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport ExpenseDataContext from \"../../store/expenseData/expenseData--context\";\n\nfunction useDailyExpenseList(date) {\n  _s();\n\n  const [dailyExpenseList, setDailyExpenseList] = useState(date);\n  const {\n    expenseData\n  } = useContext(ExpenseDataContext);\n  const dayData = new Date(dailyExpenseList);\n  const day = dayData.getDate();\n  const month = dayData.getMonth() + 1;\n  const year = dayData.getFullYear();\n  const newDayData = expenseData.filter(element => element.year === year && element.year === month && element.year === day);\n  return [newDayData, setDailyExpenseList];\n}\n\n_s(useDailyExpenseList, \"jdfYQNXpA2ZI1Dzr2Mn+zdOxTlo=\");\n\nexport default useDailyExpenseList;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/Custom/useDailyExpenseList.js"],"names":["useState","useContext","ExpenseDataContext","useDailyExpenseList","date","dailyExpenseList","setDailyExpenseList","expenseData","dayData","Date","day","getDate","month","getMonth","year","getFullYear","newDayData","filter","element"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;;AAEA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AAAA;;AACjC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAACI,IAAD,CAAxD;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBN,UAAU,CAACC,kBAAD,CAAlC;AAEA,QAAMM,OAAO,GAAG,IAAIC,IAAJ,CAASJ,gBAAT,CAAhB;AACA,QAAMK,GAAG,GAAGF,OAAO,CAACG,OAAR,EAAZ;AACA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAnC;AACA,QAAMC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAb;AAEA,QAAMC,UAAU,GAAGT,WAAW,CAACU,MAAZ,CAChBC,OAAD,IACEA,OAAO,CAACJ,IAAR,KAAiBA,IAAjB,IAAyBI,OAAO,CAACJ,IAAR,KAAiBF,KAA1C,IAAmDM,OAAO,CAACJ,IAAR,KAAiBJ,GAFrD,CAAnB;AAKA,SAAO,CAACM,UAAD,EAAaV,mBAAb,CAAP;AACD;;GAfQH,mB;;AAiBT,eAAeA,mBAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport ExpenseDataContext from \"../../store/expenseData/expenseData--context\";\n\nfunction useDailyExpenseList(date) {\n  const [dailyExpenseList, setDailyExpenseList] = useState(date);\n  const { expenseData } = useContext(ExpenseDataContext);\n\n  const dayData = new Date(dailyExpenseList);\n  const day = dayData.getDate();\n  const month = dayData.getMonth() + 1;\n  const year = dayData.getFullYear();\n\n  const newDayData = expenseData.filter(\n    (element) =>\n      element.year === year && element.year === month && element.year === day\n  );\n\n  return [newDayData, setDailyExpenseList];\n}\n\nexport default useDailyExpenseList;\n"]},"metadata":{},"sourceType":"module"}