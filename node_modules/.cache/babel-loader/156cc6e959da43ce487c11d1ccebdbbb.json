{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Setting/SettingContent/SettingAccount/SettingAccount.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useReducer } from \"react\";\nimport Button from \"../../../../UI/Button/Button\";\nimport InputText from \"../../../../UI/InputText/InputText\";\nimport AccountInfoContext from \"../../../../../store/accountInfo/accountInfo--context\";\nimport Warning from \"../../../../UI/Warning/Warning\";\nimport { auth } from \"../../../../../firebase-config\";\nimport style from \"./SettingAccount.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\":\n      {\n        let validText = true;\n        if (action.value.length === 0) validText = false;\n        return { ...state,\n          name: action.value,\n          validText\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction SettingAccount() {\n  _s();\n\n  const {\n    accountInfo,\n    setAccountInfo\n  } = useContext(AccountInfoContext);\n  const {\n    displayName\n  } = auth.currentUser;\n  console.log(auth.currentUser);\n  const [infoValidation, setInfoValidation] = useReducer(reducer, {\n    name: accountInfo.name,\n    email: accountInfo.email,\n    validText: true,\n    validEmail: true\n  });\n\n  function nameChangeHandler(e) {\n    setInfoValidation({\n      type: \"name\",\n      value: e.target.value\n    });\n  }\n\n  function emailChangeHandler(e) {\n    setInfoValidation({\n      type: \"email\",\n      value: e.target.value\n    });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    setAccountInfo({\n      name: infoValidation.name,\n      email: infoValidation.email\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: style.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputText, {\n        id: \"name\",\n        label: \"name\",\n        name: \"name\",\n        type: \"text\",\n        value: infoValidation.name,\n        classInput: infoValidation.validText ? `${style.input}` : `${style.input} input--invalid`,\n        classLabel: `${style.label} capitalize`,\n        onChange: nameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Warning, {\n        className: style.warnning,\n        index: !infoValidation.validText,\n        children: \"the length of name has to be at least greater than 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !(infoValidation.validText && infoValidation.validEmail),\n      className: `${style.btn} uppercase transition--25 ${infoValidation.validText && infoValidation.validEmail ? `btn--valid` : `btn--invalid`}`,\n      children: \"change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SettingAccount, \"6Q7KOujahMvIng2m9Vit4XJFfA4=\");\n\n_c = SettingAccount;\nexport default SettingAccount;\n/*\n      <div>\n        <InputText\n          id=\"email\"\n          label=\"email\"\n          name=\"email\"\n          type=\"email\"\n          value={infoValidation.email}\n          classInput={\n            infoValidation.validEmail\n              ? `${style.input}`\n              : `${style.input} input--invalid`\n          }\n          classLabel={`${style.label} capitalize`}\n          onChange={emailChangeHandler}\n        />\n        <Warning className={style.warnning} index={!infoValidation.validEmail}>\n          invalid email format\n        </Warning>\n      </div>\n\n\n          case \"email\": {\n      let validEmail = true;\n      if (action.value.length === 0 || !action.value.includes(\"@\"))\n        validEmail = false;\n      return { ...state, email: action.value, validEmail };\n    }\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingAccount\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Setting/SettingContent/SettingAccount/SettingAccount.js"],"names":["useContext","useReducer","Button","InputText","AccountInfoContext","Warning","auth","style","reducer","state","action","type","validText","value","length","name","SettingAccount","accountInfo","setAccountInfo","displayName","currentUser","console","log","infoValidation","setInfoValidation","email","validEmail","nameChangeHandler","e","target","emailChangeHandler","submitHandler","preventDefault","form","input","label","warnning","btn"],"mappings":"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","sourcesContent":["import { useContext, useReducer } from \"react\";\nimport Button from \"../../../../UI/Button/Button\";\nimport InputText from \"../../../../UI/InputText/InputText\";\nimport AccountInfoContext from \"../../../../../store/accountInfo/accountInfo--context\";\nimport Warning from \"../../../../UI/Warning/Warning\";\nimport { auth } from \"../../../../../firebase-config\";\nimport style from \"./SettingAccount.module.css\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"name\": {\n      let validText = true;\n      if (action.value.length === 0) validText = false;\n\n      return { ...state, name: action.value, validText };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction SettingAccount() {\n  const { accountInfo, setAccountInfo } = useContext(AccountInfoContext);\n  const { displayName } = auth.currentUser;\n\n  console.log(auth.currentUser);\n\n  const [infoValidation, setInfoValidation] = useReducer(reducer, {\n    name: accountInfo.name,\n    email: accountInfo.email,\n    validText: true,\n    validEmail: true,\n  });\n\n  function nameChangeHandler(e) {\n    setInfoValidation({ type: \"name\", value: e.target.value });\n  }\n\n  function emailChangeHandler(e) {\n    setInfoValidation({ type: \"email\", value: e.target.value });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    setAccountInfo({\n      name: infoValidation.name,\n      email: infoValidation.email,\n    });\n  }\n\n  return (\n    <form className={style.form} onSubmit={submitHandler}>\n      <div>\n        <InputText\n          id=\"name\"\n          label=\"name\"\n          name=\"name\"\n          type=\"text\"\n          value={infoValidation.name}\n          classInput={\n            infoValidation.validText\n              ? `${style.input}`\n              : `${style.input} input--invalid`\n          }\n          classLabel={`${style.label} capitalize`}\n          onChange={nameChangeHandler}\n        />\n        <Warning className={style.warnning} index={!infoValidation.validText}>\n          the length of name has to be at least greater than 1\n        </Warning>\n      </div>\n\n      <Button\n        type=\"submit\"\n        disabled={!(infoValidation.validText && infoValidation.validEmail)}\n        className={`${style.btn} uppercase transition--25 ${\n          infoValidation.validText && infoValidation.validEmail\n            ? `btn--valid`\n            : `btn--invalid`\n        }`}\n      >\n        change\n      </Button>\n    </form>\n  );\n}\n\nexport default SettingAccount;\n\n/*\n      <div>\n        <InputText\n          id=\"email\"\n          label=\"email\"\n          name=\"email\"\n          type=\"email\"\n          value={infoValidation.email}\n          classInput={\n            infoValidation.validEmail\n              ? `${style.input}`\n              : `${style.input} input--invalid`\n          }\n          classLabel={`${style.label} capitalize`}\n          onChange={emailChangeHandler}\n        />\n        <Warning className={style.warnning} index={!infoValidation.validEmail}>\n          invalid email format\n        </Warning>\n      </div>\n\n\n          case \"email\": {\n      let validEmail = true;\n      if (action.value.length === 0 || !action.value.includes(\"@\"))\n        validEmail = false;\n      return { ...state, email: action.value, validEmail };\n    }\n*/\n"]},"metadata":{},"sourceType":"module"}