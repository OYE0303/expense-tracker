{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Account/AccountSubSection/AccountSmallChart.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport Card from \"../../../UI/Card/Card\";\nimport Select from \"../../../UI/Select/Select\";\nimport style from \"./AccountSmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountSmallChart() {\n  _s();\n\n  const {\n    expenseData,\n    categoryExpense\n  } = useContext(ExpenseDataContext);\n  const [smallChartType, setSmallChartType] = useState(\"category\");\n  const chartRef = useRef(null);\n  const filteredData = expenseData.filter(element => element.category === \"expense\");\n  useEffect(() => {\n    const [labels, data] = createLabelData(smallChartType, filteredData);\n    const configBar = {\n      type: \"bar\",\n      data: {\n        labels,\n        datasets: [{\n          label: \"\",\n          data: data,\n          backgroundColor: [\"rgba(54, 162, 235, 0.2)\", \"rgb(255, 99, 132,0.2)\", \"rgb(255, 205, 86,0.2)\"],\n          borderColor: [\"rgb(54, 162, 235)\", \"rgb(255, 99, 132)\", \"rgb(255, 205, 86)\"],\n          borderWidth: 1,\n          pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n        }]\n      },\n      options: {\n        indexAxis: \"y\"\n      }\n    };\n    const chart = new Chart(chartRef.current, configBar);\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [smallChartType, categoryExpense, filteredData]);\n\n  function selectChangeHandler(e) {\n    setSmallChartType(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"chart\",\n      className: style.label,\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"chart\",\n      className: style.select,\n      onChange: selectChangeHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"category\",\n        children: \"which category expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"day\",\n        children: \"which day expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"month\",\n        children: \"which month expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        \"aria-label\": \"chart\",\n        tabIndex: \"0\",\n        ref: chartRef,\n        height: \"200\",\n        width: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountSmallChart, \"MGiAXPBEC7wb8zC9WQg0U7198kE=\");\n\n_c = AccountSmallChart;\nexport default AccountSmallChart; // return labels and data according to diff type of chart\n\nfunction createLabelData(type, expensData) {\n  if (type === \"category\") return createDataCategory(expensData);\n  if (type === \"day\") return createDataDay(expensData);\n  if (type === \"month\") return createDataMonth(expensData);\n}\n\nfunction createCacheTable(expensData) {\n  const cacheTableCategory = {};\n  const cacheTableDay = new Array(7).fill(0);\n  const cacheTableMonth = new Array(12).fill(0); // create three diff tables in O(n) time\n\n  expensData.forEach(data => {\n    if (cacheTableCategory[data.mainCate] !== undefined) {\n      cacheTableCategory[data.mainCate] += Number(data.price);\n    } else cacheTableCategory[data.mainCate] = Number(data.price);\n\n    cacheTableMonth[Number(data.month) - 1] += Number(data.price);\n    cacheTableDay[new Date(data.time).getDay()] += Number(data.price);\n  });\n  return [cacheTableCategory, cacheTableDay, cacheTableMonth];\n}\n\nfunction createDataCategory(expenseData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  const [cacheTable] = createCacheTable(expenseData);\n\n  for (const [key, value] of Object.entries(cacheTable)) {\n    if (value > data[0]) {\n      data[0] = value;\n      labels[0] = key;\n      continue;\n    }\n\n    if (value <= data[0] && value > data[1]) {\n      data[1] = value;\n      labels[1] = key;\n      continue;\n    }\n\n    if (value <= data[1] && value > data[2]) {\n      data[2] = value;\n      labels[2] = key;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n\nfunction createDataDay(expenseData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  const dayArr = [\"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SUN\", \"SAT\"];\n  const [, cacheTableDay] = createCacheTable(expenseData);\n\n  for (let i = 0; i < cacheTableDay.length; i++) {\n    const value = cacheTableDay[i];\n\n    if (value > data[0]) {\n      data[0] = value;\n      labels[0] = `${dayArr[i]}`;\n      continue;\n    }\n\n    if (value <= data[0] && value > data[1]) {\n      data[1] = value;\n      labels[1] = `${dayArr[i]}`;\n      continue;\n    }\n\n    if (value <= data[1] && value > data[2]) {\n      data[2] = value;\n      labels[2] = `${dayArr[i]}`;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n\nfunction createDataMonth(expenseData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  const monthArr = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n  const [,, cacheTableMonth] = createCacheTable(expenseData);\n\n  for (let i = 0; i < cacheTableMonth.length; i++) {\n    const value = cacheTableMonth[i];\n\n    if (value > data[0]) {\n      data[0] = value;\n      labels[0] = `${monthArr[i]}`;\n      continue;\n    }\n\n    if (value <= data[0] && value > data[1]) {\n      data[1] = value;\n      labels[1] = `${monthArr[i]}`;\n      continue;\n    }\n\n    if (value <= data[1] && value > data[2]) {\n      data[2] = value;\n      labels[2] = `${monthArr[i]}`;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n/*\nfunction createDataCategory(categoryExpense, expensData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  for (const key of Object.keys(categoryExpense)) {\n    const amount = createTotalAmount(expensData, \"mainCate\", key);\n\n    // 1st amount\n    if (amount > data[0]) {\n      data[0] = amount;\n      labels[0] = `${key}`;\n      continue;\n    }\n\n    // 2nd amount\n    if (amount <= data[0] && amount > data[1]) {\n      data[1] = amount;\n      labels[1] = `${key}`;\n      continue;\n    }\n\n    // 3rd amount\n    if (amount <= data[1] && amount > data[2]) {\n      data[2] = amount;\n      labels[2] = `${key}`;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n\nfunction createTotalAmount(expenseData, comparisonA, comparisonB) {\n  return expenseData\n    .filter((element) => element[comparisonA] === comparisonB)\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n}\n*/\n\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSmallChart\");","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/components/MainContent/Account/AccountSubSection/AccountSmallChart.js"],"names":["useRef","useEffect","useState","useContext","Title","ExpenseDataContext","Card","Select","style","Chart","AccountSmallChart","expenseData","categoryExpense","smallChartType","setSmallChartType","chartRef","filteredData","filter","element","category","labels","data","createLabelData","configBar","type","datasets","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","indexAxis","chart","current","cleanUp","destroy","selectChangeHandler","e","target","value","select","expensData","createDataCategory","createDataDay","createDataMonth","createCacheTable","cacheTableCategory","cacheTableDay","Array","fill","cacheTableMonth","forEach","mainCate","undefined","Number","price","month","Date","time","getDay","cacheTable","key","Object","entries","dayArr","i","length","monthArr"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport Card from \"../../../UI/Card/Card\";\nimport Select from \"../../../UI/Select/Select\";\nimport style from \"./AccountSmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\n\nfunction AccountSmallChart() {\n  const { expenseData, categoryExpense } = useContext(ExpenseDataContext);\n  const [smallChartType, setSmallChartType] = useState(\"category\");\n  const chartRef = useRef(null);\n\n  const filteredData = expenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n\n  useEffect(() => {\n    const [labels, data] = createLabelData(smallChartType, filteredData);\n\n    const configBar = {\n      type: \"bar\",\n      data: {\n        labels,\n        datasets: [\n          {\n            label: \"\",\n            data: data,\n            backgroundColor: [\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgb(255, 99, 132,0.2)\",\n              \"rgb(255, 205, 86,0.2)\",\n            ],\n            borderColor: [\n              \"rgb(54, 162, 235)\",\n              \"rgb(255, 99, 132)\",\n              \"rgb(255, 205, 86)\",\n            ],\n            borderWidth: 1,\n            pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n          },\n        ],\n      },\n      options: {\n        indexAxis: \"y\",\n      },\n    };\n\n    const chart = new Chart(chartRef.current, configBar);\n\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [smallChartType, categoryExpense, filteredData]);\n\n  function selectChangeHandler(e) {\n    setSmallChartType(e.target.value);\n  }\n\n  return (\n    <Card>\n      <label htmlFor=\"chart\" className={style.label}>\n        Chart\n      </label>\n      <Select\n        id=\"chart\"\n        className={style.select}\n        onChange={selectChangeHandler}\n      >\n        <option value=\"category\">which category expense the most</option>\n        <option value=\"day\">which day expense the most</option>\n        <option value=\"month\">which month expense the most</option>\n      </Select>\n      <div>\n        <canvas\n          aria-label=\"chart\"\n          tabIndex=\"0\"\n          ref={chartRef}\n          height=\"200\"\n          width=\"auto\"\n        ></canvas>\n      </div>\n    </Card>\n  );\n}\n\nexport default AccountSmallChart;\n\n// return labels and data according to diff type of chart\nfunction createLabelData(type, expensData) {\n  if (type === \"category\") return createDataCategory(expensData);\n\n  if (type === \"day\") return createDataDay(expensData);\n\n  if (type === \"month\") return createDataMonth(expensData);\n}\n\nfunction createCacheTable(expensData) {\n  const cacheTableCategory = {};\n  const cacheTableDay = new Array(7).fill(0);\n  const cacheTableMonth = new Array(12).fill(0);\n\n  // create three diff tables in O(n) time\n  expensData.forEach((data) => {\n    if (cacheTableCategory[data.mainCate] !== undefined) {\n      cacheTableCategory[data.mainCate] += Number(data.price);\n    } else cacheTableCategory[data.mainCate] = Number(data.price);\n\n    cacheTableMonth[Number(data.month) - 1] += Number(data.price);\n    cacheTableDay[new Date(data.time).getDay()] += Number(data.price);\n  });\n\n  return [cacheTableCategory, cacheTableDay, cacheTableMonth];\n}\n\nfunction createDataCategory(expenseData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  const [cacheTable] = createCacheTable(expenseData);\n\n  for (const [key, value] of Object.entries(cacheTable)) {\n    if (value > data[0]) {\n      data[0] = value;\n      labels[0] = key;\n      continue;\n    }\n    if (value <= data[0] && value > data[1]) {\n      data[1] = value;\n      labels[1] = key;\n      continue;\n    }\n    if (value <= data[1] && value > data[2]) {\n      data[2] = value;\n      labels[2] = key;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n\nfunction createDataDay(expenseData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  const dayArr = [\"MON\", \"TUE\", \"WED\", \"THR\", \"FRI\", \"SUN\", \"SAT\"];\n  const [, cacheTableDay] = createCacheTable(expenseData);\n\n  for (let i = 0; i < cacheTableDay.length; i++) {\n    const value = cacheTableDay[i];\n\n    if (value > data[0]) {\n      data[0] = value;\n      labels[0] = `${dayArr[i]}`;\n      continue;\n    }\n    if (value <= data[0] && value > data[1]) {\n      data[1] = value;\n      labels[1] = `${dayArr[i]}`;\n      continue;\n    }\n    if (value <= data[1] && value > data[2]) {\n      data[2] = value;\n      labels[2] = `${dayArr[i]}`;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n\nfunction createDataMonth(expenseData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  const monthArr = [\n    \"JAN\",\n    \"FEB\",\n    \"MAR\",\n    \"APR\",\n    \"MAY\",\n    \"JUN\",\n    \"JUL\",\n    \"AUG\",\n    \"SEP\",\n    \"OCT\",\n    \"NOV\",\n    \"DEC\",\n  ];\n  const [, , cacheTableMonth] = createCacheTable(expenseData);\n\n  for (let i = 0; i < cacheTableMonth.length; i++) {\n    const value = cacheTableMonth[i];\n\n    if (value > data[0]) {\n      data[0] = value;\n      labels[0] = `${monthArr[i]}`;\n      continue;\n    }\n    if (value <= data[0] && value > data[1]) {\n      data[1] = value;\n      labels[1] = `${monthArr[i]}`;\n      continue;\n    }\n    if (value <= data[1] && value > data[2]) {\n      data[2] = value;\n      labels[2] = `${monthArr[i]}`;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n\n/*\nfunction createDataCategory(categoryExpense, expensData) {\n  const labels = [\"\", \"\", \"\"];\n  const data = [0, 0, 0];\n  for (const key of Object.keys(categoryExpense)) {\n    const amount = createTotalAmount(expensData, \"mainCate\", key);\n\n    // 1st amount\n    if (amount > data[0]) {\n      data[0] = amount;\n      labels[0] = `${key}`;\n      continue;\n    }\n\n    // 2nd amount\n    if (amount <= data[0] && amount > data[1]) {\n      data[1] = amount;\n      labels[1] = `${key}`;\n      continue;\n    }\n\n    // 3rd amount\n    if (amount <= data[1] && amount > data[2]) {\n      data[2] = amount;\n      labels[2] = `${key}`;\n      continue;\n    }\n  }\n\n  return [labels, data];\n}\n\nfunction createTotalAmount(expenseData, comparisonA, comparisonB) {\n  return expenseData\n    .filter((element) => element[comparisonA] === comparisonB)\n    .reduce((acc, cur) => acc + Number(cur.price), 0);\n}\n*/\n"]},"metadata":{},"sourceType":"module"}