{"ast":null,"code":"var _jsxFileName = \"/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountSubSection/AccountSmallChart.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport Card from \"../../../UI/Card/Card\";\nimport style from \"./AccountSmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [0, 0, 0];\nconst labels = [];\n\nfunction AccountSmallChart(props) {\n  _s();\n\n  const {\n    expenseData,\n    categoryExpense\n  } = useContext(ExpenseDataContext);\n  const chartRef = useRef(null);\n  const newFilteredExpenseData = expenseData.filter(element => element.category === \"expense\");\n\n  for (const key of Object.keys(categoryExpense)) {\n    const amount = createDiffCategoryTotalAmount(key, newFilteredExpenseData);\n\n    if (amount > data[0]) {\n      data[0] = amount;\n      labels[0] = key;\n      continue;\n    }\n\n    if (amount <= data[0] && amount > data[1]) {\n      data[1] = amount;\n      labels[1] = key;\n      continue;\n    }\n\n    if (amount <= data[1] && amount > data[2]) {\n      data[2] = amount;\n      labels[2] = key;\n      continue;\n    }\n\n    console.log(labels, data);\n  }\n\n  const configBar = {\n    type: \"bar\",\n    data: {\n      labels,\n      datasets: [{\n        label: \"My First Dataset\",\n        data: data,\n        backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n        borderColor: [\"rgb(54, 162, 235)\"],\n        borderWidth: 1,\n        pointBackgroundColor: [\"rgb(54, 162, 235)\"]\n      }]\n    },\n    options: {\n      indexAxis: \"y\"\n    }\n  };\n  console.log(configBar);\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, configBar);\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: style[\"chart__section\"],\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      className: style.title,\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: style.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"which category expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"which day expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"which month expense the most\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style[\"chart__container\"],\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        height: \"200\",\n        width: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountSmallChart, \"ViMHSEOVq4a6nMPLZWx5obU71a0=\");\n\n_c = AccountSmallChart;\nexport default AccountSmallChart;\n\nfunction createDiffCategoryTotalAmount(category, expenseData) {\n  const newFilteredData = expenseData.filter(element => element.mainCate === category);\n  const totalAmount = newFilteredData.reduce((acc, cur) => acc + Number(cur.price), 0);\n  return totalAmount;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSmallChart\");","map":{"version":3,"sources":["/Users/eyo/Desktop/project-expenseTracker-main/src/components/MainContent/Account/AccountSubSection/AccountSmallChart.js"],"names":["useRef","useEffect","useState","useContext","Title","ExpenseDataContext","Card","style","Chart","data","labels","AccountSmallChart","props","expenseData","categoryExpense","chartRef","newFilteredExpenseData","filter","element","category","key","Object","keys","amount","createDiffCategoryTotalAmount","console","log","configBar","type","datasets","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","indexAxis","chart","current","cleanUp","destroy","title","select","newFilteredData","mainCate","totalAmount","reduce","acc","cur","Number","price"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useContext } from \"react\";\nimport Title from \"../../../UI/Title/Title\";\nimport ExpenseDataContext from \"../../../../store/expenseData/expenseData--context\";\nimport Card from \"../../../UI/Card/Card\";\nimport style from \"./AccountSmallChart.module.css\";\nimport Chart from \"chart.js/auto\";\n\nconst data = [0, 0, 0];\nconst labels = [];\n\nfunction AccountSmallChart(props) {\n  const { expenseData, categoryExpense } = useContext(ExpenseDataContext);\n  const chartRef = useRef(null);\n\n  const newFilteredExpenseData = expenseData.filter(\n    (element) => element.category === \"expense\"\n  );\n\n  for (const key of Object.keys(categoryExpense)) {\n    const amount = createDiffCategoryTotalAmount(key, newFilteredExpenseData);\n\n    if (amount > data[0]) {\n      data[0] = amount;\n      labels[0] = key;\n      continue;\n    }\n    if (amount <= data[0] && amount > data[1]) {\n      data[1] = amount;\n      labels[1] = key;\n      continue;\n    }\n    if (amount <= data[1] && amount > data[2]) {\n      data[2] = amount;\n      labels[2] = key;\n      continue;\n    }\n\n    console.log(labels, data);\n  }\n\n  const configBar = {\n    type: \"bar\",\n    data: {\n      labels,\n      datasets: [\n        {\n          label: \"My First Dataset\",\n          data: data,\n          backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n          borderColor: [\"rgb(54, 162, 235)\"],\n          borderWidth: 1,\n          pointBackgroundColor: [\"rgb(54, 162, 235)\"],\n        },\n      ],\n    },\n    options: {\n      indexAxis: \"y\",\n    },\n  };\n\n  console.log(configBar);\n\n  useEffect(() => {\n    const chart = new Chart(chartRef.current, configBar);\n\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, []);\n\n  return (\n    <Card className={style[\"chart__section\"]}>\n      <Title className={style.title}>Chart</Title>\n      <select className={style.select}>\n        <option value=\"0\">which category expense the most</option>\n        <option value=\"1\">which day expense the most</option>\n        <option value=\"2\">which month expense the most</option>\n      </select>\n      <div className={style[\"chart__container\"]}>\n        <canvas ref={chartRef} height=\"200\" width=\"auto\"></canvas>\n      </div>\n    </Card>\n  );\n}\n\nexport default AccountSmallChart;\n\nfunction createDiffCategoryTotalAmount(category, expenseData) {\n  const newFilteredData = expenseData.filter(\n    (element) => element.mainCate === category\n  );\n\n  const totalAmount = newFilteredData.reduce(\n    (acc, cur) => acc + Number(cur.price),\n    0\n  );\n\n  return totalAmount;\n}\n"]},"metadata":{},"sourceType":"module"}