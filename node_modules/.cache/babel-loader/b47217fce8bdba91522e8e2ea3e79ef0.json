{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CATEGORY\":\n      {\n        let mainCategoryArr, subCategoryArr;\n        const categoryExpenseKeyArr = Object.keys(state.categoryExpense);\n        const categoryIncomeKeyArr = Object.keys(state.categoryIncome);\n        /*\n        Note that do NOT directly hard code \"food\" or \"salary\"\n        because user may add, remove, edit main and sub category\n        what we want is showing the first main category, and it's sub category\n        */\n\n        if (action.value === \"expense\") {\n          mainCategoryArr = categoryExpenseKeyArr;\n          subCategoryArr = state.categoryExpense[categoryExpenseKeyArr[0]];\n        } else {\n          mainCategoryArr = categoryIncomeKeyArr;\n          subCategoryArr = state.categoryIncome[categoryIncomeKeyArr[0]];\n        }\n\n        return { ...state,\n          category: action.value,\n          mainCategoryArr,\n          subCategoryArr,\n          mainCategory: action.value === \"expense\" ? Object.keys(state.categoryExpense)[0] : Object.keys(state.categoryIncome)[0],\n          subCategory: action.value === \"expense\" ? state.categoryExpense[categoryExpenseKeyArr[0]][0] : state.categoryIncome[categoryIncomeKeyArr[0]][0],\n          icon: state.iconObj[action.value === \"expense\" ? Object.keys(state.categoryExpense)[0] : Object.keys(state.categoryIncome)[0]]\n        };\n      }\n\n    case \"MAIN_CATEGORY\":\n      {\n        let subCategoryArr;\n        if (state.category === \"expense\") subCategoryArr = state.categoryExpense[action.value];else subCategoryArr = state.categoryIncome[action.value];\n        return { ...state,\n          mainCategory: action.value,\n          subCategoryArr,\n          subCategory: subCategoryArr[0],\n          icon: state.iconObj[action.value]\n        };\n      }\n\n    case \"SUB_CATEGORY\":\n      {\n        return { ...state,\n          subCategory: action.value\n        };\n      }\n\n    case \"DESCRIPTION\":\n      {\n        return { ...state,\n          description: action.value\n        };\n      }\n\n    case \"DATE\":\n      {\n        return { ...state,\n          date: action.value\n        };\n      }\n\n    case \"PRICE\":\n      {\n        let valid = false;\n        if (action.value.trim().length > 0 && !Object.is(-0, Number(action.value)) && Number(action.value) >= 0) valid = true;\n        return { ...state,\n          isValid: valid,\n          price: action.value\n        };\n      }\n\n    case \"PRICE--TOUCH\":\n      {\n        // it will always be true once user have selected or touched the price input\n        return { ...state,\n          priceTouch: true\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nfunction useAddDataForm(props) {\n  _s();\n\n  const {\n    mainCateExpenseArr,\n    mainCateIncomeArr,\n    categoryExpense,\n    categoryIncome,\n    iconObj,\n    setEditModal,\n    initialObj,\n    addExpenseData,\n    editExpenseData,\n    selectedDate\n  } = props;\n  /*\n  the data storing in expenseDataProvider do NOT have\n  mainCategoryArr, subCategoryArr categoryExpense, categoryIncome, iconObj, priceTouch\n  but we need this data in the form, so add them\n  */\n\n  let initialObjForReducer;\n  if (initialObj) initialObjForReducer = { ...initialObj,\n    mainCategoryArr: initialObj.category === \"expense\" ? mainCateExpenseArr : mainCateIncomeArr,\n    subCategoryArr: initialObj.category === \"expense\" ? categoryExpense[initialObj.mainCategory] : categoryIncome[initialObj.mainCategory],\n    categoryExpense,\n    categoryIncome,\n    iconObj,\n    priceTouch: true\n  };else initialObjForReducer = {\n    category: \"expense\",\n    mainCategoryArr: mainCateExpenseArr,\n    subCategoryArr: categoryExpense[mainCateExpenseArr[0]],\n    mainCategory: mainCateExpenseArr[0],\n    subCategory: categoryExpense[mainCateExpenseArr[0]][0],\n    date: props.date === undefined ? createDateStringFormat(new Date()) : createDateStringFormat(new Date(props.date)),\n    description: \"\",\n    price: \"\",\n    priceTouch: false,\n    icon: iconObj[Object.keys(categoryExpense)[0]],\n    isValid: false,\n    iconObj,\n    categoryExpense,\n    categoryIncome\n  };\n  const [formData, formDataDispatch] = useReducer(reducer, initialObjForReducer);\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: undefined\n  });\n\n  function categoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function mainCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"MAIN_CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function subCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"SUB_CATEGORY\",\n      value: e.target.value\n    });\n  }\n\n  function descriptionChangeHandler(e) {\n    formDataDispatch({\n      type: \"DESCRIPTION\",\n      value: e.target.value\n    });\n  }\n\n  function dateChangeHandler(e) {\n    formDataDispatch({\n      type: \"DATE\",\n      value: e.target.value\n    });\n  }\n\n  function priceChangeHandler(e) {\n    formDataDispatch({\n      type: \"PRICE\",\n      value: e.target.value\n    });\n  }\n\n  function inputPriceTouchHandler() {\n    // it will always be true until user select or touch the price input\n    formDataDispatch({\n      type: \"PRICE--TOUCH\"\n    });\n  }\n\n  function cancelClickHandler() {\n    setAddDataFormModal({\n      show: false,\n      date: undefined\n    });\n  }\n\n  function addDataFormToggler() {\n    if (addDataFormModal.show) setAddDataFormModal({\n      show: false,\n      date: undefined\n    });else setAddDataFormModal({\n      show: true,\n      date: selectedDate\n    });\n  }\n\n  function formSubmitHandler(e) {\n    e.preventDefault();\n    const newFormData = {\n      id: initialObj ? initialObj.id : uuidv4(),\n      category: formData.category,\n      mainCate: formData.mainCategory,\n      subCate: formData.subCategory,\n      time: formData.date,\n      description: formData.description,\n      price: formData.price,\n      year: formData.date.slice(0, 4),\n      month: formData.date.slice(5, 7),\n      day: formData.date.slice(8, 10)\n    }; //////////////////////////////////////////////////\n    // add new data or edited old data\n    // if props.initialObj exist, it means it's editing the old data\n\n    if (initialObj) {\n      editExpenseData(newFormData);\n      setEditModal(true);\n    } else addExpenseData(newFormData);\n\n    cancelClickHandler();\n  }\n\n  return {\n    categoryChangeHandler,\n    mainCategoryChangeHandler,\n    subCategoryChangeHandler,\n    descriptionChangeHandler,\n    dateChangeHandler,\n    priceChangeHandler,\n    inputPriceTouchHandler,\n    cancelClickHandler,\n    formSubmitHandler,\n    addDataFormModal,\n    formData,\n    addDataFormToggler\n  };\n}\n\n_s(useAddDataForm, \"2Nx69xUIze3W/k4F11p2Vycu26Q=\");\n\nexport default useAddDataForm; // function useAddDataForm(props) {\n//   const [addDataFromState, setAddDataFormState] = useState({\n//     show: false,\n//     initialObj: {},\n//     date: undefined,\n//   });\n//   function showAddFormHandler() {\n//     setAddDataFormState({\n//       show: true,\n//       date: props.date,\n//       initialObj: props.initialObj,\n//     });\n//   }\n//   function closeAddDataFormHandler() {\n//     setAddDataFormState({\n//       show: false,\n//       initialObj: {},\n//       date: undefined,\n//     });\n//   }\n//   return [\n//     addDataFromState,\n//     setAddDataFormState,\n//     showAddFormHandler,\n//     closeAddDataFormHandler,\n//   ];\n// }\n// export default useAddDataForm;","map":{"version":3,"sources":["/Users/eyo/Desktop/expense-tracker/src/Others/Custom/useAddDataForm.js"],"names":["useState","useReducer","createDateStringFormat","v4","uuidv4","reducer","state","action","type","mainCategoryArr","subCategoryArr","categoryExpenseKeyArr","Object","keys","categoryExpense","categoryIncomeKeyArr","categoryIncome","value","category","mainCategory","subCategory","icon","iconObj","description","date","valid","trim","length","is","Number","isValid","price","priceTouch","useAddDataForm","props","mainCateExpenseArr","mainCateIncomeArr","setEditModal","initialObj","addExpenseData","editExpenseData","selectedDate","initialObjForReducer","undefined","Date","formData","formDataDispatch","addDataFormModal","setAddDataFormModal","show","categoryChangeHandler","e","target","mainCategoryChangeHandler","subCategoryChangeHandler","descriptionChangeHandler","dateChangeHandler","priceChangeHandler","inputPriceTouchHandler","cancelClickHandler","addDataFormToggler","formSubmitHandler","preventDefault","newFormData","id","mainCate","subCate","time","year","slice","month","day"],"mappings":"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","sourcesContent":["import { useState, useReducer } from \"react\";\nimport createDateStringFormat from \"../CreateDateStringFormat/CreateDateStringFormat\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CATEGORY\": {\n      let mainCategoryArr, subCategoryArr;\n      const categoryExpenseKeyArr = Object.keys(state.categoryExpense);\n      const categoryIncomeKeyArr = Object.keys(state.categoryIncome);\n\n      /*\n      Note that do NOT directly hard code \"food\" or \"salary\"\n      because user may add, remove, edit main and sub category\n      what we want is showing the first main category, and it's sub category\n      */\n      if (action.value === \"expense\") {\n        mainCategoryArr = categoryExpenseKeyArr;\n        subCategoryArr = state.categoryExpense[categoryExpenseKeyArr[0]];\n      } else {\n        mainCategoryArr = categoryIncomeKeyArr;\n        subCategoryArr = state.categoryIncome[categoryIncomeKeyArr[0]];\n      }\n\n      return {\n        ...state,\n        category: action.value,\n        mainCategoryArr,\n        subCategoryArr,\n        mainCategory:\n          action.value === \"expense\"\n            ? Object.keys(state.categoryExpense)[0]\n            : Object.keys(state.categoryIncome)[0],\n        subCategory:\n          action.value === \"expense\"\n            ? state.categoryExpense[categoryExpenseKeyArr[0]][0]\n            : state.categoryIncome[categoryIncomeKeyArr[0]][0],\n        icon: state.iconObj[\n          action.value === \"expense\"\n            ? Object.keys(state.categoryExpense)[0]\n            : Object.keys(state.categoryIncome)[0]\n        ],\n      };\n    }\n\n    case \"MAIN_CATEGORY\": {\n      let subCategoryArr;\n\n      if (state.category === \"expense\")\n        subCategoryArr = state.categoryExpense[action.value];\n      else subCategoryArr = state.categoryIncome[action.value];\n\n      return {\n        ...state,\n        mainCategory: action.value,\n        subCategoryArr,\n        subCategory: subCategoryArr[0],\n        icon: state.iconObj[action.value],\n      };\n    }\n\n    case \"SUB_CATEGORY\": {\n      return { ...state, subCategory: action.value };\n    }\n\n    case \"DESCRIPTION\": {\n      return { ...state, description: action.value };\n    }\n\n    case \"DATE\": {\n      return { ...state, date: action.value };\n    }\n\n    case \"PRICE\": {\n      let valid = false;\n      if (\n        action.value.trim().length > 0 &&\n        !Object.is(-0, Number(action.value)) &&\n        Number(action.value) >= 0\n      )\n        valid = true;\n\n      return { ...state, isValid: valid, price: action.value };\n    }\n\n    case \"PRICE--TOUCH\": {\n      // it will always be true once user have selected or touched the price input\n      return { ...state, priceTouch: true };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\nfunction useAddDataForm(props) {\n  const {\n    mainCateExpenseArr,\n    mainCateIncomeArr,\n    categoryExpense,\n    categoryIncome,\n    iconObj,\n    setEditModal,\n    initialObj,\n    addExpenseData,\n    editExpenseData,\n    selectedDate,\n  } = props;\n  /*\n  the data storing in expenseDataProvider do NOT have\n  mainCategoryArr, subCategoryArr categoryExpense, categoryIncome, iconObj, priceTouch\n  but we need this data in the form, so add them\n  */\n  let initialObjForReducer;\n  if (initialObj)\n    initialObjForReducer = {\n      ...initialObj,\n      mainCategoryArr:\n        initialObj.category === \"expense\"\n          ? mainCateExpenseArr\n          : mainCateIncomeArr,\n      subCategoryArr:\n        initialObj.category === \"expense\"\n          ? categoryExpense[initialObj.mainCategory]\n          : categoryIncome[initialObj.mainCategory],\n      categoryExpense,\n      categoryIncome,\n      iconObj,\n      priceTouch: true,\n    };\n  else\n    initialObjForReducer = {\n      category: \"expense\",\n      mainCategoryArr: mainCateExpenseArr,\n      subCategoryArr: categoryExpense[mainCateExpenseArr[0]],\n      mainCategory: mainCateExpenseArr[0],\n      subCategory: categoryExpense[mainCateExpenseArr[0]][0],\n      date:\n        props.date === undefined\n          ? createDateStringFormat(new Date())\n          : createDateStringFormat(new Date(props.date)),\n      description: \"\",\n      price: \"\",\n      priceTouch: false,\n      icon: iconObj[Object.keys(categoryExpense)[0]],\n      isValid: false,\n      iconObj,\n      categoryExpense,\n      categoryIncome,\n    };\n\n  const [formData, formDataDispatch] = useReducer(\n    reducer,\n    initialObjForReducer\n  );\n  const [addDataFormModal, setAddDataFormModal] = useState({\n    show: false,\n    date: undefined,\n  });\n\n  function categoryChangeHandler(e) {\n    formDataDispatch({ type: \"CATEGORY\", value: e.target.value });\n  }\n\n  function mainCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"MAIN_CATEGORY\",\n      value: e.target.value,\n    });\n  }\n\n  function subCategoryChangeHandler(e) {\n    formDataDispatch({\n      type: \"SUB_CATEGORY\",\n      value: e.target.value,\n    });\n  }\n\n  function descriptionChangeHandler(e) {\n    formDataDispatch({\n      type: \"DESCRIPTION\",\n      value: e.target.value,\n    });\n  }\n\n  function dateChangeHandler(e) {\n    formDataDispatch({\n      type: \"DATE\",\n      value: e.target.value,\n    });\n  }\n\n  function priceChangeHandler(e) {\n    formDataDispatch({\n      type: \"PRICE\",\n      value: e.target.value,\n    });\n  }\n\n  function inputPriceTouchHandler() {\n    // it will always be true until user select or touch the price input\n    formDataDispatch({\n      type: \"PRICE--TOUCH\",\n    });\n  }\n\n  function cancelClickHandler() {\n    setAddDataFormModal({\n      show: false,\n      date: undefined,\n    });\n  }\n  function addDataFormToggler() {\n    if (addDataFormModal.show)\n      setAddDataFormModal({ show: false, date: undefined });\n    else setAddDataFormModal({ show: true, date: selectedDate });\n  }\n\n  function formSubmitHandler(e) {\n    e.preventDefault();\n\n    const newFormData = {\n      id: initialObj ? initialObj.id : uuidv4(),\n      category: formData.category,\n      mainCate: formData.mainCategory,\n      subCate: formData.subCategory,\n      time: formData.date,\n      description: formData.description,\n      price: formData.price,\n      year: formData.date.slice(0, 4),\n      month: formData.date.slice(5, 7),\n      day: formData.date.slice(8, 10),\n    };\n\n    //////////////////////////////////////////////////\n    // add new data or edited old data\n    // if props.initialObj exist, it means it's editing the old data\n    if (initialObj) {\n      editExpenseData(newFormData);\n      setEditModal(true);\n    } else addExpenseData(newFormData);\n\n    cancelClickHandler();\n  }\n\n  return {\n    categoryChangeHandler,\n    mainCategoryChangeHandler,\n    subCategoryChangeHandler,\n    descriptionChangeHandler,\n    dateChangeHandler,\n    priceChangeHandler,\n    inputPriceTouchHandler,\n    cancelClickHandler,\n    formSubmitHandler,\n    addDataFormModal,\n    formData,\n    addDataFormToggler,\n  };\n}\n\nexport default useAddDataForm;\n\n// function useAddDataForm(props) {\n//   const [addDataFromState, setAddDataFormState] = useState({\n//     show: false,\n//     initialObj: {},\n//     date: undefined,\n//   });\n\n//   function showAddFormHandler() {\n//     setAddDataFormState({\n//       show: true,\n//       date: props.date,\n//       initialObj: props.initialObj,\n//     });\n//   }\n\n//   function closeAddDataFormHandler() {\n//     setAddDataFormState({\n//       show: false,\n//       initialObj: {},\n//       date: undefined,\n//     });\n//   }\n\n//   return [\n//     addDataFromState,\n//     setAddDataFormState,\n//     showAddFormHandler,\n//     closeAddDataFormHandler,\n//   ];\n// }\n\n// export default useAddDataForm;\n"]},"metadata":{},"sourceType":"module"}